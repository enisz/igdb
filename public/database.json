{"filename":"DocumentationDB","collections":[{"name":"templates","data":[{"id":"647454e36","slug":"getting-started","level":1,"parent":null,"parents":[],"title":"Getting Started","date":null,"timestamp":1669925801000,"body":{"stripped":"Welcome to the IGDB Wrapper documentation! This documentation will cover all of the functionalities of this wrapper with lots of example codes. To personalise these codes you can add your own tokens to this documentation on the main page (click on the logo in the top left corner to go back). This way every code example where the tokens are required will contain your own tokens.\n\nThe wrapper's main purpose is to provide a simple solution to fetch data from IGDB's database using PHP. The wrapper contains endpoint methods for every IGDB API endpoints and even more!\n\nTo have access to IGDB's database you have to register a Twitch Account and have your own client_id and access_token. Refer to the Account Creation and Authentication sections of the IGDB API Documentation for details.","markdown":"Welcome to the IGDB Wrapper documentation! This documentation will cover all of the functionalities of this wrapper with lots of example codes. To personalise these codes you can add your own tokens to this documentation on the main page (click on the logo in the top left corner to go back). This way every code example where the tokens are required will contain your own tokens.\r\n\r\nThe wrapper's main purpose is to provide a simple solution to fetch data from IGDB's database using PHP. The wrapper contains endpoint methods for every IGDB API endpoints and even more!\r\n\r\nTo have access to IGDB's database you have to register a Twitch Account and have your own `client_id` and `access_token`. Refer to the [Account Creation](https://api-docs.igdb.com/#account-creation) and [Authentication](https://api-docs.igdb.com/#authentication) sections of the [IGDB API Documentation](https://api-docs.igdb.com/) for details.","html":"<p>Welcome to the IGDB Wrapper documentation! This documentation will cover all of the functionalities of this wrapper with lots of example codes. To personalise these codes you can add your own tokens to this documentation on the main page (click on the logo in the top left corner to go back). This way every code example where the tokens are required will contain your own tokens.</p>\n<p>The wrapper's main purpose is to provide a simple solution to fetch data from IGDB's database using PHP. The wrapper contains endpoint methods for every IGDB API endpoints and even more!</p>\n<p>To have access to IGDB's database you have to register a Twitch Account and have your own <code>client_id</code> and <code>access_token</code>. Refer to the <a href=\"https://api-docs.igdb.com/#account-creation\" target=\"_blank\" rel=\"nofollow\">Account Creation</a> and <a href=\"https://api-docs.igdb.com/#authentication\" target=\"_blank\" rel=\"nofollow\">Authentication</a> sections of the <a href=\"https://api-docs.igdb.com/\" target=\"_blank\" rel=\"nofollow\">IGDB API Documentation</a> for details.</p>"},"icon":"fa-map-signs","overview":"A few thoughts about the project and the documentation. Setting up your project.","meta":{"revision":0,"created":1669928307758,"version":0},"$loki":1},{"id":"a9de5f06a","slug":"using-the-documentation","level":2,"parent":"647454e36","parents":["647454e36"],"title":"Using the documentation","date":null,"timestamp":null,"body":{"stripped":"The documentation contains a lot of copy-paste example codes. In most cases, the code snippets contains the instantiation of the IGDB class. The constructor of this class will require you to pass your client_id and access_token. If you would like to have example codes with your personal tokens you can provide these on the front page of the documentation. To get back to the main page, just click the logo on the top left corner.\n\nClick the link on the homescreen to set your tokens\n\nClicking the link will open the window where you can see additional information about this feature and two fields where you can store your tokens.\n\nThe window where the tokens can be stored\n\nIf you chose to save the tokens these will be stored only in your browser locally! If the tokens are not saved the data will be erased when your browser is closed.\n\nAfter your tokens are set the example codes will contain your tokens which are ready to copy.\n\nThe tokens are set in the example code\n\nIf you want to delete your tokens you can click the Delete the tokens button anytime.","markdown":"The documentation contains a lot of copy-paste example codes. In most cases, the code snippets contains the instantiation of the `IGDB` class. The constructor of this class will require you to pass your `client_id` and `access_token`. If you would like to have example codes with your personal tokens you can provide these on the front page of the documentation. To get back to the main page, just click the logo on the top left corner.\r\n\r\n![Click the link on the homescreen to set your tokens](images/set-token-link.png)\r\n\r\nClicking the link will open the window where you can see additional information about this feature and two fields where you can store your tokens.\r\n\r\n![The window where the tokens can be stored](images/set-token-dialog.png)\r\n\r\n> If you chose to save the tokens these will be stored only in your browser locally! If the tokens are not saved the data will be erased when your browser is closed.\r\n\r\nAfter your tokens are set the example codes will contain your tokens which are ready to copy.\r\n\r\n![The tokens are set in the example code](images/example-code-with-token.png)\r\n\r\nIf you want to delete your tokens you can click the Delete the tokens button anytime.","html":"<p>The documentation contains a lot of copy-paste example codes. In most cases, the code snippets contains the instantiation of the <code>IGDB</code> class. The constructor of this class will require you to pass your <code>client_id</code> and <code>access_token</code>. If you would like to have example codes with your personal tokens you can provide these on the front page of the documentation. To get back to the main page, just click the logo on the top left corner.</p>\n<p><img src=\"images/set-token-link.png\" alt=\"Click the link on the homescreen to set your tokens\"></p>\n<p>Clicking the link will open the window where you can see additional information about this feature and two fields where you can store your tokens.</p>\n<p><img src=\"images/set-token-dialog.png\" alt=\"The window where the tokens can be stored\"></p>\n<blockquote>\n<p>If you chose to save the tokens these will be stored only in your browser locally! If the tokens are not saved the data will be erased when your browser is closed.</p>\n</blockquote>\n<p>After your tokens are set the example codes will contain your tokens which are ready to copy.</p>\n<p><img src=\"images/example-code-with-token.png\" alt=\"The tokens are set in the example code\"></p>\n<p>If you want to delete your tokens you can click the Delete the tokens button anytime.</p>"},"meta":{"revision":0,"created":1669928307759,"version":0},"$loki":2},{"id":"b3e896f67","slug":"setting-up-your-project","level":2,"parent":"647454e36","parents":["647454e36"],"title":"Setting up your project","date":null,"timestamp":null,"body":{"stripped":"The project has multiple PHP files which are in the src folder of the repository:\n\nIGDB.php: the IGDB wrapper itself\n\nIGDBEndpointException.php: an exception thrown by the IGDB wrapper endpoint methods\n\nIGDBInvalidParameterException.php: an exception thrown by the Query Builder configuring methods\n\nIGDBQueryBuilder.php: the Query Builder\n\nIGDBUtil.php: utility and helper methods\n\nThese files can be imported one-by-one but it is highly recommended to import the class.igdb.php file which handles all the imports for you.\n\n\n\nAfter the import, you are ready to use the wrapper.\n\n:warning If you decide to import the files separately, make sure to check the source code since the exception classes are imported in the respective files where they are needed with hardcoded paths. The files has to be in the same folder to make it work!","markdown":"The project has multiple PHP files which are in the `src` folder of the repository:\r\n - **IGDB.php**: the IGDB wrapper itself\r\n - **IGDBEndpointException.php**: an exception thrown by the IGDB wrapper endpoint methods\r\n - **IGDBInvalidParameterException.php**: an exception thrown by the Query Builder configuring methods\r\n - **IGDBQueryBuilder.php**: the Query Builder\r\n - **IGDBUtil.php**: utility and helper methods\r\n\r\nThese files can be imported one-by-one but it is highly recommended to import the `class.igdb.php` file which handles all the imports for you.\r\n\r\n```php\r\n<?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n?>\r\n```\r\n\r\nAfter the import, you are ready to use the wrapper.\r\n\r\n>:warning If you decide to import the files separately, make sure to check the source code since the exception classes are imported in the respective files where they are needed with hardcoded paths. The files has to be in the same folder to make it work!","html":"<p>The project has multiple PHP files which are in the <code>src</code> folder of the repository:</p>\n<ul>\n<li><strong>IGDB.php</strong>: the IGDB wrapper itself</li>\n<li><strong>IGDBEndpointException.php</strong>: an exception thrown by the IGDB wrapper endpoint methods</li>\n<li><strong>IGDBInvalidParameterException.php</strong>: an exception thrown by the Query Builder configuring methods</li>\n<li><strong>IGDBQueryBuilder.php</strong>: the Query Builder</li>\n<li><strong>IGDBUtil.php</strong>: utility and helper methods</li>\n</ul>\n<p>These files can be imported one-by-one but it is highly recommended to import the <code>class.igdb.php</code> file which handles all the imports for you.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n?>\n</code></pre>\n<p>After the import, you are ready to use the wrapper.</p>\n<blockquote>\n<p>:warning If you decide to import the files separately, make sure to check the source code since the exception classes are imported in the respective files where they are needed with hardcoded paths. The files has to be in the same folder to make it work!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307759,"version":0},"$loki":3},{"id":"a1a7c8726","slug":"instantiating-the-wrapper","level":2,"parent":"647454e36","parents":["647454e36"],"title":"Instantiating the wrapper","date":null,"timestamp":null,"body":{"stripped":"The wrapper will need your client_id and generated access_token.\n\n\n\nThe wrapper itself does not validate your tokens. If your credentials are invalid you will get an IGDBEndpointException from the endpoint methods when you are sending your queries.","markdown":"The wrapper will need your `client_id` and [generated](https://api-docs.igdb.com/#authentication) `access_token`.\r\n\r\n```php\r\n<?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n?>\r\n```\r\n\r\n> The wrapper itself does not validate your tokens. If your credentials are invalid you will get an `IGDBEndpointException` from the [endpoint methods](#endpoints) when you are sending your queries.","html":"<p>The wrapper will need your <code>client_id</code> and <a href=\"https://api-docs.igdb.com/#authentication\" target=\"_blank\" rel=\"nofollow\">generated</a> <code>access_token</code>.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n?>\n</code></pre>\n<blockquote>\n<p>The wrapper itself does not validate your tokens. If your credentials are invalid you will get an <code>IGDBEndpointException</code> from the <a href=\"#endpoints\">endpoint methods</a> when you are sending your queries.</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307759,"version":0},"$loki":4},{"id":"08f25b6ad","slug":"building-queries","level":2,"parent":"647454e36","parents":["647454e36"],"title":"Building Queries","date":null,"timestamp":null,"body":{"stripped":"There is a helper class to build apicalypse queries called IGDBQueryBuilder. With this class you can easily build parameterized queries.\n\n\n\nThe parameters in the above example are valid, so the $query variable will hold the valid apicalypse string.\n\n\n\nFor more details on the Query Builder refer to the IGDB Query Builder section of this documentation.","markdown":"There is a helper class to build apicalypse queries called [`IGDBQueryBuilder`](#igdb-query-builder). With this class you can easily build parameterized queries.\r\n\r\n```php\r\n<?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        $query = $builder\r\n            ->search(\"uncharted 4\")\r\n            ->fields(\"id, name\")\r\n            ->limit(1)\r\n            ->build();\r\n    } catch (IGDBInvalidParameterException $e) {\r\n        // Invalid argument passed to one of the methods\r\n        echo $e->getMessage();\r\n    }\r\n?>\r\n```\r\n\r\nThe parameters in the above example are valid, so the `$query` variable will hold the valid apicalypse string.\r\n\r\n```text\r\nfields id,name; search \"uncharted 4\"; limit 1;\r\n```\r\n\r\n> For more details on the Query Builder refer to the [IGDB Query Builder section](#igdb-query-builder) of this documentation.","html":"<p>There is a helper class to build apicalypse queries called <a href=\"#igdb-query-builder\"><code>IGDBQueryBuilder</code></a>. With this class you can easily build parameterized queries.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        $query = $builder\r\n            ->search(\"uncharted 4\")\r\n            ->fields(\"id, name\")\r\n            ->limit(1)\r\n            ->build();\r\n    } catch (IGDBInvalidParameterException $e) {\r\n        // Invalid argument passed to one of the methods\r\n        echo $e->getMessage();\r\n    }\r\n?>\n</code></pre>\n<p>The parameters in the above example are valid, so the <code>$query</code> variable will hold the valid apicalypse string.</p>\n<pre><code class=\"language-text\">fields id,name; search \"uncharted 4\"; limit 1;\n</code></pre>\n<blockquote>\n<p>For more details on the Query Builder refer to the <a href=\"#igdb-query-builder\">IGDB Query Builder section</a> of this documentation.</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307759,"version":0},"$loki":5},{"id":"bcb058b02","slug":"sending-queries-to-igdb","level":2,"parent":"647454e36","parents":["647454e36"],"title":"Sending Queries to IGDB","date":null,"timestamp":null,"body":{"stripped":"When your $igdb object is created you can send your queries to the IGDB database right away. There are multiple endpoint methods which will allow you to fetch data from the respective IGDB Endpoint. These endpoint methods in the wrapper will accept apicalypse formatted query strings.\n\n\n\nSince the query is valid we have the $result array containing our matched records.\n\n\n\nFor more details on the IGDB Wrapper refer to the IGDB Wrapper section of this documentation.","markdown":"When your `$igdb` object is created you can send your queries to the IGDB database right away. There are multiple [endpoint methods](#endpoints) which will allow you to fetch data from the respective [IGDB Endpoint](https://api-docs.igdb.com/#endpoints). These endpoint methods in the wrapper will accept [apicalypse](https://api-docs.igdb.com/#apicalypse-1) formatted query strings.\r\n\r\n```php\r\n<?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n    try {\r\n        $result = $igdb->game('search \"uncharted 4\"; fields id,name; limit 1;');\r\n    } catch (IGDBEndpointException $e) {\r\n        // Something went wrong, we have an error\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\r\n```\r\n\r\nSince the query is valid we have the `$result` array containing our matched records.\r\n\r\n```text\r\narray (size=1)\r\n  0 =>\r\n    object(stdClass)[2]\r\n      public 'id' => int 7331\r\n      public 'name' => string 'Uncharted 4: A Thief's End' (length=26)\r\n```\r\n\r\n> For more details on the IGDB Wrapper refer to the [IGDB Wrapper section](#igdb-wrapper) of this documentation.","html":"<p>When your <code>$igdb</code> object is created you can send your queries to the IGDB database right away. There are multiple <a href=\"#endpoints\">endpoint methods</a> which will allow you to fetch data from the respective <a href=\"https://api-docs.igdb.com/#endpoints\" target=\"_blank\" rel=\"nofollow\">IGDB Endpoint</a>. These endpoint methods in the wrapper will accept <a href=\"https://api-docs.igdb.com/#apicalypse-1\" target=\"_blank\" rel=\"nofollow\">apicalypse</a> formatted query strings.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n    try {\r\n        $result = $igdb->game('search \"uncharted 4\"; fields id,name; limit 1;');\r\n    } catch (IGDBEndpointException $e) {\r\n        // Something went wrong, we have an error\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\n</code></pre>\n<p>Since the query is valid we have the <code>$result</code> array containing our matched records.</p>\n<pre><code class=\"language-text\">array (size=1)\r\n  0 =>\r\n    object(stdClass)[2]\r\n      public 'id' => int 7331\r\n      public 'name' => string 'Uncharted 4: A Thief's End' (length=26)\n</code></pre>\n<blockquote>\n<p>For more details on the IGDB Wrapper refer to the <a href=\"#igdb-wrapper\">IGDB Wrapper section</a> of this documentation.</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307759,"version":0},"$loki":6},{"id":"8b29a7103","slug":"handling-errors","level":2,"parent":"647454e36","parents":["647454e36"],"title":"Handling errors","date":null,"timestamp":null,"body":{"stripped":"There are two main type of errors which could occur when using the wrapper:\n\n\"local\" errors: when using the Query Builder to build your queries you may pass invalid parameters to the configuring methods. These methods could throw IGDBInvalidParameterException if an invalid parameter or invalid type of parameter is passed. Head to the Handling Builder Errors section to find out more.\n\n\"remote\" errors: when a query is sent to the IGDB API, but for some reason the query fails. This happens only, when a non-successful response code is recieved from the API. In this case the endpoint methods will throw an IGDBEndpointException. Head to the Handling Request Errors section to find out more.","markdown":"There are two main type of errors which could occur when using the wrapper:\r\n - **\"local\" errors**: when using the [Query Builder](#igdb-query-builder) to build your queries you may pass invalid parameters to the [configuring methods](#configuring-methods). These methods could throw `IGDBInvalidParameterException` if an invalid parameter or invalid type of parameter is passed. Head to the [Handling Builder Errors](#handling-builder-errors) section to find out more.\r\n\r\n - **\"remote\" errors**: when a query is sent to the IGDB API, but for some reason the query fails. This happens only, when a non-successful response code is recieved from the API. In this case the [endpoint methods](#endpoints) will throw an `IGDBEndpointException`. Head to the [Handling Request Errors](#handling-request-errors) section to find out more.","html":"<p>There are two main type of errors which could occur when using the wrapper:</p>\n<ul>\n<li>\n<p><strong>\"local\" errors</strong>: when using the <a href=\"#igdb-query-builder\">Query Builder</a> to build your queries you may pass invalid parameters to the <a href=\"#configuring-methods\">configuring methods</a>. These methods could throw <code>IGDBInvalidParameterException</code> if an invalid parameter or invalid type of parameter is passed. Head to the <a href=\"#handling-builder-errors\">Handling Builder Errors</a> section to find out more.</p>\n</li>\n<li>\n<p><strong>\"remote\" errors</strong>: when a query is sent to the IGDB API, but for some reason the query fails. This happens only, when a non-successful response code is recieved from the API. In this case the <a href=\"#endpoints\">endpoint methods</a> will throw an <code>IGDBEndpointException</code>. Head to the <a href=\"#handling-request-errors\">Handling Request Errors</a> section to find out more.</p>\n</li>\n</ul>"},"meta":{"revision":0,"created":1669928307759,"version":0},"$loki":7},{"id":"1bc2dc4de","slug":"igdb-query-builder","level":1,"parent":null,"parents":[],"title":"IGDB Query Builder","date":null,"timestamp":1650388071000,"body":{"stripped":"This class is a helper class to help you construct your queries. If you have used this wrapper's eariler versions you were able to send queries by passing an $options array directly to the endpoint methods. This possibility got removed and these endpoint methods are accepting only apicalypse formatted query strings.\n\n:tip Using the Builder class is optional as you can pass your own queries to the endpoint methods.","markdown":"This class is a helper class to help you construct your queries. If you have used this wrapper's eariler versions you were able to send queries by passing an `$options` array directly to the endpoint methods. This possibility got removed and these endpoint methods are accepting only [apicalypse](https://api-docs.igdb.com/#apicalypse-1) formatted query strings.\r\n\r\n>:tip Using the Builder class is optional as you can pass your own queries to the endpoint methods.","html":"<p>This class is a helper class to help you construct your queries. If you have used this wrapper's eariler versions you were able to send queries by passing an <code>$options</code> array directly to the endpoint methods. This possibility got removed and these endpoint methods are accepting only <a href=\"https://api-docs.igdb.com/#apicalypse-1\" target=\"_blank\" rel=\"nofollow\">apicalypse</a> formatted query strings.</p>\n<blockquote>\n<p>:tip Using the Builder class is optional as you can pass your own queries to the endpoint methods.</p>\n</blockquote>"},"icon":"fa-hammer","overview":"Everything about the Query Builder. Configuring and building your queries.","meta":{"revision":0,"created":1669928307760,"version":0},"$loki":8},{"id":"be0fb81f9","slug":"instantiating-the-builder","level":2,"parent":"1bc2dc4de","parents":["1bc2dc4de"],"title":"Instantiating the Builder","date":null,"timestamp":null,"body":{"stripped":"To instantiate the Builder simply use the new keyword.\n\n\n\nNow the $builder object will expose every configuring methods to set up your query before building it.","markdown":"To instantiate the Builder simply use the `new` keyword.\r\n\r\n```php\r\n<?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n    $builer = new IGDBQueryBuiler();\r\n\r\n?>\r\n```\r\n\r\nNow the `$builder` object will expose every configuring methods to set up your query before [building it](#building-the-query).","html":"<p>To instantiate the Builder simply use the <code>new</code> keyword.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n    $builer = new IGDBQueryBuiler();\r\n\r\n?>\n</code></pre>\n<p>Now the <code>$builder</code> object will expose every configuring methods to set up your query before <a href=\"#building-the-query\">building it</a>.</p>"},"meta":{"revision":0,"created":1669928307760,"version":0},"$loki":9},{"id":"ca4fb758c","slug":"configuring-the-builder","level":2,"parent":"1bc2dc4de","parents":["1bc2dc4de"],"title":"Configuring the Builder","date":null,"timestamp":null,"body":{"stripped":"There are two ways to configure the builder.","markdown":"There are two ways to configure the builder.","html":"<p>There are two ways to configure the builder.</p>"},"meta":{"revision":0,"created":1669928307760,"version":0},"$loki":10},{"id":"fe07d457c","slug":"builder-approach","level":3,"parent":"1bc2dc4de","parents":["1bc2dc4de","ca4fb758c"],"title":"Builder approach","date":null,"timestamp":null,"body":{"stripped":"The Builder is using a builder pattern to configure itself with the configuring methods before parsing the properties to a query string. When every parameter is set, calling the build() method will start processing the parameters and will return the query string itself.\n\n:warning When using the builder approach, you must enclose your configuring methods in try...catch blocks. Read more on this in the Handling Builder Errors section.","markdown":"The Builder is using a builder pattern to configure itself with the [configuring methods](#configuring-methods) before parsing the properties to a query string. When every parameter is set, calling the [`build()`](#building-the-query) method will start processing the parameters and will return the query string itself.\r\n\r\n>:warning When using the builder approach, you must enclose your configuring methods in try...catch blocks. Read more on this in the [Handling Builder Errors](#handling-builder-errors) section.\r\n\r\n```php\r\n<?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        $query = $builder\r\n            ->search(\"uncharted 4\")\r\n            ->fields(\"id, name\")\r\n            ->limit(1)\r\n             // make sure to call the build method to parse the query string\r\n            ->build();\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // invalid value passed to a method\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\r\n```","html":"<p>The Builder is using a builder pattern to configure itself with the <a href=\"#configuring-methods\">configuring methods</a> before parsing the properties to a query string. When every parameter is set, calling the <a href=\"#building-the-query\"><code>build()</code></a> method will start processing the parameters and will return the query string itself.</p>\n<blockquote>\n<p>:warning When using the builder approach, you must enclose your configuring methods in try...catch blocks. Read more on this in the <a href=\"#handling-builder-errors\">Handling Builder Errors</a> section.</p>\n</blockquote>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        $query = $builder\r\n            ->search(\"uncharted 4\")\r\n            ->fields(\"id, name\")\r\n            ->limit(1)\r\n             // make sure to call the build method to parse the query string\r\n            ->build();\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // invalid value passed to a method\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\n</code></pre>"},"meta":{"revision":0,"created":1669928307760,"version":0},"$loki":11},{"id":"9d63ba8f8","slug":"traditional-approach","level":3,"parent":"1bc2dc4de","parents":["1bc2dc4de","ca4fb758c"],"title":"Traditional approach","date":null,"timestamp":null,"body":{"stripped":"To support the traditional approach of configuring the queries - the $options array - there is a method called options(). Passing your $options array to this method will process your parameters and will set up the builder.\n\n:warning Using the Builder this way is not recommended as this functionality may will be removed in future versions. Use the builder approach instead.","markdown":"To support the traditional approach of configuring the queries - the `$options` array - there is a method called [`options()`](#options). Passing your `$options` array to this method will process your parameters and will set up the builder.\r\n\r\n>:warning Using the Builder this way is not recommended as this functionality may will be removed in future versions. Use the [builder approach](#builder-approach) instead.\r\n\r\n```php\r\n<?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    $options = array(\r\n        \"search\" => \"uncharted 4\",\r\n        \"fields\" => \"id,name\",\r\n        \"limit\" => 1\r\n    );\r\n\r\n    try {\r\n        // pass your $options to the options method\r\n        // then build the query\r\n        $query = $builder->options($options)->build();\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // invalid key or value found in the $options array\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\r\n```","html":"<p>To support the traditional approach of configuring the queries - the <code>$options</code> array - there is a method called <a href=\"#options\"><code>options()</code></a>. Passing your <code>$options</code> array to this method will process your parameters and will set up the builder.</p>\n<blockquote>\n<p>:warning Using the Builder this way is not recommended as this functionality may will be removed in future versions. Use the <a href=\"#builder-approach\">builder approach</a> instead.</p>\n</blockquote>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    $options = array(\r\n        \"search\" => \"uncharted 4\",\r\n        \"fields\" => \"id,name\",\r\n        \"limit\" => 1\r\n    );\r\n\r\n    try {\r\n        // pass your $options to the options method\r\n        // then build the query\r\n        $query = $builder->options($options)->build();\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // invalid key or value found in the $options array\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\n</code></pre>"},"meta":{"revision":0,"created":1669928307760,"version":0},"$loki":12},{"id":"5a426de8a","slug":"handling-builder-errors","level":2,"parent":"1bc2dc4de","parents":["1bc2dc4de"],"title":"Handling Builder Errors","date":null,"timestamp":null,"body":{"stripped":"When an invalid parameter is passed to any of the configuring methods, an IGDBInvaliParameterException is thrown. To properly handle these errors, at least the configuring methods should be enclosed in a try...catch block. Calling the getMessage() method of the exception object will return the error message.\n\n\n\nThe script above will produce this output:\n\n\n\nIt is important to keep in mind, that this validation is happening \"locally\" on your server. The query builder can only validate the type of variables you pass, or it can validate against a list of predefined values that the API expects. For example, if the example above is altered like this:\n\n\n\nThe builder will not throw an exception as the method got a string, which is valid. The output of the script will be:\n\n\n\nThe field nonexistingfield does not exist on the game endpoint which will cause an error on the IGDB API. These errors has to be handled separately. Read more on this in the Handling Request Errors section.","markdown":"When an invalid parameter is passed to any of the [configuring methods](#configuring-methods), an `IGDBInvaliParameterException` is thrown. To properly handle these errors, at least the configuring methods should be enclosed in a try...catch block. Calling the `getMessage()` method of the exception object will return the error message.\r\n\r\n```php\r\n<?php\r\n\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        $query = $builder\r\n            ->search(\"uncharted\")\r\n            // passing an integer to the fields parameter is invalid\r\n            // as this methods expects a string or an array of strings\r\n            ->fields(1)\r\n            ->build();\r\n\r\n        echo $query;\r\n    } catch (IGDBInvalidParameterException $e) {\r\n        // catching the exception, printing the error message\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\r\n```\r\n\r\nThe script above will produce this output:\r\n\r\n```text\r\nInvalid type of parameter for fields! String or array of strings are expected, integer passed!\r\n```\r\n\r\nIt is important to keep in mind, that this validation is happening \"locally\" on your server. The query builder can only validate the type of variables you pass, or it can validate against a list of predefined values that the API expects. For example, if the example above is altered like this:\r\n\r\n```php\r\n<?php\r\n\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        $query = $builder\r\n            ->search(\"uncharted\")\r\n            // passing a field name that doesnt exist on the game endpoint\r\n            ->fields(\"nonexistingfield\")\r\n            ->build();\r\n\r\n        // no exception thrown, printing the query string\r\n        echo $query;\r\n    } catch (IGDBInvalidParameterException $e) {\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\r\n```\r\n\r\nThe builder will not throw an exception as the method got a string, which is valid. The output of the script will be:\r\n\r\n```text\r\nfields nonexistingfield; search \"uncharted\";\r\n```\r\n\r\nThe field `nonexistingfield` does not exist on the `game` endpoint which will cause an error on the IGDB API. These errors has to be handled separately. Read more on this in the [Handling Request Errors](#handling-request-errors) section.","html":"<p>When an invalid parameter is passed to any of the <a href=\"#configuring-methods\">configuring methods</a>, an <code>IGDBInvaliParameterException</code> is thrown. To properly handle these errors, at least the configuring methods should be enclosed in a try...catch block. Calling the <code>getMessage()</code> method of the exception object will return the error message.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        $query = $builder\r\n            ->search(\"uncharted\")\r\n            // passing an integer to the fields parameter is invalid\r\n            // as this methods expects a string or an array of strings\r\n            ->fields(1)\r\n            ->build();\r\n\r\n        echo $query;\r\n    } catch (IGDBInvalidParameterException $e) {\r\n        // catching the exception, printing the error message\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\n</code></pre>\n<p>The script above will produce this output:</p>\n<pre><code class=\"language-text\">Invalid type of parameter for fields! String or array of strings are expected, integer passed!\n</code></pre>\n<p>It is important to keep in mind, that this validation is happening \"locally\" on your server. The query builder can only validate the type of variables you pass, or it can validate against a list of predefined values that the API expects. For example, if the example above is altered like this:</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        $query = $builder\r\n            ->search(\"uncharted\")\r\n            // passing a field name that doesnt exist on the game endpoint\r\n            ->fields(\"nonexistingfield\")\r\n            ->build();\r\n\r\n        // no exception thrown, printing the query string\r\n        echo $query;\r\n    } catch (IGDBInvalidParameterException $e) {\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\n</code></pre>\n<p>The builder will not throw an exception as the method got a string, which is valid. The output of the script will be:</p>\n<pre><code class=\"language-text\">fields nonexistingfield; search \"uncharted\";\n</code></pre>\n<p>The field <code>nonexistingfield</code> does not exist on the <code>game</code> endpoint which will cause an error on the IGDB API. These errors has to be handled separately. Read more on this in the <a href=\"#handling-request-errors\">Handling Request Errors</a> section.</p>"},"meta":{"revision":0,"created":1669928307760,"version":0},"$loki":13},{"id":"aeb67de08","slug":"configuring-methods","level":2,"parent":"1bc2dc4de","parents":["1bc2dc4de"],"title":"Configuring Methods","date":null,"timestamp":null,"body":{"stripped":"The Builder class has its own configuring methods to set the parameters before building the query string. If any of these methods recieves an invalid argument they will throw an IGDBInvalidArgumentException. Make sure to set these parameters in a try...catch block.","markdown":"The Builder class has its own configuring methods to set the parameters before building the query string. If any of these methods recieves an invalid argument they will throw an `IGDBInvalidArgumentException`. Make sure to set these parameters in a try...catch block.","html":"<p>The Builder class has its own configuring methods to set the parameters before building the query string. If any of these methods recieves an invalid argument they will throw an <code>IGDBInvalidArgumentException</code>. Make sure to set these parameters in a try...catch block.</p>"},"meta":{"revision":0,"created":1669928307760,"version":0},"$loki":14},{"id":"57d87499e","slug":"count","level":3,"parent":"1bc2dc4de","parents":["1bc2dc4de","aeb67de08"],"title":"Count","date":null,"timestamp":null,"body":{"stripped":"This method will accept a boolean value. This parameter is processed in case of a multiquery build only. If this value is true the response from IGDB will contain the number of records matching the filters. If false the records will be returned.\n\nIf the method is called without parameters, the value will be set to true.\n\nDefault value: by default this value is false, the queries will return the records instead of their count.\n\nParameters:\n\n$count: true if a record count is required, false otherwise.\n\nReturns: IGDBQueryBuilder instance\n\n\n\nThe value of $query:","markdown":"```php\r\npublic function count(boolean $count = true) throws IGDBInvalidArgumentException: IGDBQueryBuilder\r\n```\r\n\r\nThis method will accept a boolean value. This parameter is processed **in case of a multiquery build only**. If this value is `true` the response from IGDB will contain the number of records matching the filters. If `false` the records will be returned.\r\n\r\n> If the method is called without parameters, the value will be set to `true`.\r\n\r\n**Default value**: by default this value is `false`, the queries will return the records instead of their count.\r\n\r\n**Parameters**:\r\n - `$count`: `true` if a record count is required, `false` otherwise.\r\n\r\n**Returns**: `IGDBQueryBuilder` instance\r\n\r\n```php\r\n<?php\r\n\r\n    // importing the wrapper\r\n    require_once \"class.igdb.php\";\r\n\r\n    // instantiate the query builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        // Configuring the query\r\n        $builder\r\n            ->name(\"Number of games\")\r\n            ->endpoint(\"game\")\r\n            // the default value of count is false\r\n            // to retrieve the count of the matched records, set it to true\r\n            // ->count(true) has the same result\r\n            ->count();\r\n\r\n            // if you wish to remove the count parameter for any reason later on\r\n            // you can call the count method with a false parameter\r\n            // ->count(false)\r\n\r\n        // building the query\r\n        $query = $builder->build(true);\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // invalid key or value found in the $options array\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\r\n```\r\n\r\nThe value of `$query`:\r\n\r\n```text\r\nquery games/count \"Number of games\" {\r\n  fields *;\r\n};\r\n```","html":"<pre><code class=\"language-php\">public function count(boolean $count = true) throws IGDBInvalidArgumentException: IGDBQueryBuilder\n</code></pre>\n<p>This method will accept a boolean value. This parameter is processed <strong>in case of a multiquery build only</strong>. If this value is <code>true</code> the response from IGDB will contain the number of records matching the filters. If <code>false</code> the records will be returned.</p>\n<blockquote>\n<p>If the method is called without parameters, the value will be set to <code>true</code>.</p>\n</blockquote>\n<p><strong>Default value</strong>: by default this value is <code>false</code>, the queries will return the records instead of their count.</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$count</code>: <code>true</code> if a record count is required, <code>false</code> otherwise.</li>\n</ul>\n<p><strong>Returns</strong>: <code>IGDBQueryBuilder</code> instance</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // importing the wrapper\r\n    require_once \"class.igdb.php\";\r\n\r\n    // instantiate the query builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        // Configuring the query\r\n        $builder\r\n            ->name(\"Number of games\")\r\n            ->endpoint(\"game\")\r\n            // the default value of count is false\r\n            // to retrieve the count of the matched records, set it to true\r\n            // ->count(true) has the same result\r\n            ->count();\r\n\r\n            // if you wish to remove the count parameter for any reason later on\r\n            // you can call the count method with a false parameter\r\n            // ->count(false)\r\n\r\n        // building the query\r\n        $query = $builder->build(true);\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // invalid key or value found in the $options array\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\n</code></pre>\n<p>The value of <code>$query</code>:</p>\n<pre><code class=\"language-text\">query games/count \"Number of games\" {\r\n  fields *;\r\n};\n</code></pre>"},"meta":{"revision":0,"created":1669928307760,"version":0},"$loki":15},{"id":"6458eed25","slug":"custom-where","level":3,"parent":"1bc2dc4de","parents":["1bc2dc4de","aeb67de08"],"title":"Custom Where","date":null,"timestamp":null,"body":{"stripped":"This method will add a where statement to your query, but will not validate your input or throw any exceptions.\n\nParameters:\n\n$custom_where: an apicalypse string with a custom where statement\n\nReturns: IGDBQueryBuilder instance","markdown":"```php\r\npublic function custom_where(string $custom_where): IGDBQueryBuilder\r\n```\r\n\r\nThis method will add a [where statement](#where) to your query, but will not validate your input or throw any exceptions.\r\n\r\n**Parameters**:\r\n - `$custom_where`: an apicalypse string with a custom where statement\r\n\r\n**Returns**: `IGDBQueryBuilder` instance\r\n\r\n```php\r\n<?php\r\n\r\n    // traditional approach\r\n    $options = array(\r\n        \"custom_where\" => \"(platforms = [6,48] & genres = 13) | (platforms = [130,48] & genres = 12)\"\r\n    );\r\n\r\n    // builder approach\r\n    $builder->custom_where(\"(platforms = [6,48] & genres = 13) | (platforms = [130,48] & genres = 12)\");\r\n\r\n?>\r\n```","html":"<pre><code class=\"language-php\">public function custom_where(string $custom_where): IGDBQueryBuilder\n</code></pre>\n<p>This method will add a <a href=\"#where\">where statement</a> to your query, but will not validate your input or throw any exceptions.</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$custom_where</code>: an apicalypse string with a custom where statement</li>\n</ul>\n<p><strong>Returns</strong>: <code>IGDBQueryBuilder</code> instance</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // traditional approach\r\n    $options = array(\r\n        \"custom_where\" => \"(platforms = [6,48] &#x26; genres = 13) | (platforms = [130,48] &#x26; genres = 12)\"\r\n    );\r\n\r\n    // builder approach\r\n    $builder->custom_where(\"(platforms = [6,48] &#x26; genres = 13) | (platforms = [130,48] &#x26; genres = 12)\");\r\n\r\n?>\n</code></pre>"},"meta":{"revision":0,"created":1669928307761,"version":0},"$loki":16},{"id":"82c3db6b6","slug":"endpoint","level":3,"parent":"1bc2dc4de","parents":["1bc2dc4de","aeb67de08"],"title":"Endpoint","date":null,"timestamp":null,"body":{"stripped":"This method will set the endpoint to send your multiquery against. This parameter is processed in case of a multiquery build only. When setting this value make sure to use the name of the endpoint instead of it's request path. (for example game instead of games and so on).\n\n:warning In case of a multiquery build this parameter is mandatory! If this is missing from the configuration the build will throw an IGDBInvalidParameterException! Refer to the build method for details.\n\nParameters:\n\n$endpoint: the name of the endpoint to send the query against. Make sure to use the name of the endpoint instead of it's request path! The list of endpoints for this parameter:\n\nage_rating\n\nalternative_name\n\nartwork\n\ncharacter_mug_shot\n\ncharacter\n\ncollection\n\ncompany_logo\n\ncompany_website\n\ncompany\n\ncover\n\nexternal_game\n\nfranchise\n\ngame_engine_logo\n\ngame_engine\n\ngame_mode\n\ngame_version_feature_value\n\ngame_version_feature\n\ngame_version\n\ngame_video\n\ngame\n\ngenre\n\ninvolved_company\n\nkeyword\n\nmultiplayer_mode\n\nmultiquery\n\nplatform_family\n\nplatform_logo\n\nplatform_version_company\n\nplatform_version_release_date\n\nplatform_version\n\nplatform_website\n\nplatform\n\nplayer_perspective\n\nrelease_date\n\nscreenshot\n\nsearch\n\ntheme\n\nwebsite\n\nReturns: IGDBQueryBuilder instance\n\n\n\nThe value of $query:","markdown":"```php\r\npublic function endpoint(string $endpoint) throws IGDBInvalidArgumentException: IGDBQueryBuilder\r\n```\r\n\r\nThis method will set the endpoint to send your **multiquery** against. This parameter is processed **in case of a multiquery build only**. When setting this value make sure to use the name of the endpoint instead of it's request path. (for example `game` instead of `games` and so on).\r\n\r\n>:warning In case of a multiquery build this parameter is mandatory! If this is missing from the configuration the build will throw an `IGDBInvalidParameterException`! Refer to the [build method](#building-the-query) for details.\r\n\r\n**Parameters**:\r\n - `$endpoint`: the name of the endpoint to send the query against. Make sure to use the name of the endpoint instead of it's request path! The list of endpoints for this parameter:\r\n   - age_rating\r\n   - alternative_name\r\n   - artwork\r\n   - character_mug_shot\r\n   - character\r\n   - collection\r\n   - company_logo\r\n   - company_website\r\n   - company\r\n   - cover\r\n   - external_game\r\n   - franchise\r\n   - game_engine_logo\r\n   - game_engine\r\n   - game_mode\r\n   - game_version_feature_value\r\n   - game_version_feature\r\n   - game_version\r\n   - game_video\r\n   - game\r\n   - genre\r\n   - involved_company\r\n   - keyword\r\n   - multiplayer_mode\r\n   - multiquery\r\n   - platform_family\r\n   - platform_logo\r\n   - platform_version_company\r\n   - platform_version_release_date\r\n   - platform_version\r\n   - platform_website\r\n   - platform\r\n   - player_perspective\r\n   - release_date\r\n   - screenshot\r\n   - search\r\n   - theme\r\n   - website\r\n\r\n**Returns**: `IGDBQueryBuilder` instance\r\n\r\n```php\r\n<?php\r\n\r\n    // importing the wrapper\r\n    require_once \"class.igdb.php\";\r\n\r\n    // instantiate the query builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        // configuring the query\r\n        $builder\r\n            ->name(\"Game with ID of 25076\")\r\n            ->endpoint(\"game\")\r\n            ->fields(\"id,name\")\r\n            ->where(\"id = 25076\");\r\n\r\n        // building the query\r\n        $query = $builder->build(true);\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // invalid key or value found in the $options array\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\r\n```\r\n\r\nThe value of `$query`:\r\n\r\n```text\r\nquery games \"Game with ID 25076\" {\r\n  fields id,name;\r\n  where id = 25076;\r\n};\r\n```","html":"<pre><code class=\"language-php\">public function endpoint(string $endpoint) throws IGDBInvalidArgumentException: IGDBQueryBuilder\n</code></pre>\n<p>This method will set the endpoint to send your <strong>multiquery</strong> against. This parameter is processed <strong>in case of a multiquery build only</strong>. When setting this value make sure to use the name of the endpoint instead of it's request path. (for example <code>game</code> instead of <code>games</code> and so on).</p>\n<blockquote>\n<p>:warning In case of a multiquery build this parameter is mandatory! If this is missing from the configuration the build will throw an <code>IGDBInvalidParameterException</code>! Refer to the <a href=\"#building-the-query\">build method</a> for details.</p>\n</blockquote>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$endpoint</code>: the name of the endpoint to send the query against. Make sure to use the name of the endpoint instead of it's request path! The list of endpoints for this parameter:\n<ul>\n<li>age_rating</li>\n<li>alternative_name</li>\n<li>artwork</li>\n<li>character_mug_shot</li>\n<li>character</li>\n<li>collection</li>\n<li>company_logo</li>\n<li>company_website</li>\n<li>company</li>\n<li>cover</li>\n<li>external_game</li>\n<li>franchise</li>\n<li>game_engine_logo</li>\n<li>game_engine</li>\n<li>game_mode</li>\n<li>game_version_feature_value</li>\n<li>game_version_feature</li>\n<li>game_version</li>\n<li>game_video</li>\n<li>game</li>\n<li>genre</li>\n<li>involved_company</li>\n<li>keyword</li>\n<li>multiplayer_mode</li>\n<li>multiquery</li>\n<li>platform_family</li>\n<li>platform_logo</li>\n<li>platform_version_company</li>\n<li>platform_version_release_date</li>\n<li>platform_version</li>\n<li>platform_website</li>\n<li>platform</li>\n<li>player_perspective</li>\n<li>release_date</li>\n<li>screenshot</li>\n<li>search</li>\n<li>theme</li>\n<li>website</li>\n</ul>\n</li>\n</ul>\n<p><strong>Returns</strong>: <code>IGDBQueryBuilder</code> instance</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // importing the wrapper\r\n    require_once \"class.igdb.php\";\r\n\r\n    // instantiate the query builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        // configuring the query\r\n        $builder\r\n            ->name(\"Game with ID of 25076\")\r\n            ->endpoint(\"game\")\r\n            ->fields(\"id,name\")\r\n            ->where(\"id = 25076\");\r\n\r\n        // building the query\r\n        $query = $builder->build(true);\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // invalid key or value found in the $options array\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\n</code></pre>\n<p>The value of <code>$query</code>:</p>\n<pre><code class=\"language-text\">query games \"Game with ID 25076\" {\r\n  fields id,name;\r\n  where id = 25076;\r\n};\n</code></pre>"},"meta":{"revision":0,"created":1669928307761,"version":0},"$loki":17},{"id":"b717f4131","slug":"exclude","level":3,"parent":"1bc2dc4de","parents":["1bc2dc4de","aeb67de08"],"title":"Exclude","date":null,"timestamp":null,"body":{"stripped":"Exclude is a complement to the regular fields which allows you to request all fields with the exception of any numbers of fields specified with exclude.\n\nParameters:\n\n$exclude: the list of the fields to exclude. This can be either a comma separated list of field names or an array of field names.\n\nReturns: IGDBQueryBuilder instance","markdown":"```php\r\npublic function exclude(string | array $exclude) throws IGDBInvalidArgumentException: IGDBQueryBuilder\r\n```\r\n\r\nExclude is a complement to the regular fields which allows you to request all fields with the exception of any numbers of fields specified with exclude.\r\n\r\n**Parameters**:\r\n - `$exclude`: the list of the fields to exclude. This can be either a comma separated list of field names or an array of field names.\r\n\r\n**Returns**: `IGDBQueryBuilder` instance\r\n\r\n```php\r\n<?php\r\n\r\n    // traditional approach, as a string\r\n    $options = array(\r\n        \"exclude\" => \"name,slug\"\r\n    );\r\n\r\n    // traditional approach, as an array\r\n    $options = array(\r\n        \"exclude\" => array(\"name\", \"slug\")\r\n    );\r\n\r\n    // builder approach, as a string\r\n    $builder->exclude(\"name,slug\");\r\n\r\n    // builder approach, as an array\r\n    $builder->exclude(array(\"name\", \"slug\"));\r\n\r\n?>\r\n```","html":"<pre><code class=\"language-php\">public function exclude(string | array $exclude) throws IGDBInvalidArgumentException: IGDBQueryBuilder\n</code></pre>\n<p>Exclude is a complement to the regular fields which allows you to request all fields with the exception of any numbers of fields specified with exclude.</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$exclude</code>: the list of the fields to exclude. This can be either a comma separated list of field names or an array of field names.</li>\n</ul>\n<p><strong>Returns</strong>: <code>IGDBQueryBuilder</code> instance</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // traditional approach, as a string\r\n    $options = array(\r\n        \"exclude\" => \"name,slug\"\r\n    );\r\n\r\n    // traditional approach, as an array\r\n    $options = array(\r\n        \"exclude\" => array(\"name\", \"slug\")\r\n    );\r\n\r\n    // builder approach, as a string\r\n    $builder->exclude(\"name,slug\");\r\n\r\n    // builder approach, as an array\r\n    $builder->exclude(array(\"name\", \"slug\"));\r\n\r\n?>\n</code></pre>"},"meta":{"revision":0,"created":1669928307761,"version":0},"$loki":18},{"id":"3615ceb7f","slug":"fields","level":3,"parent":"1bc2dc4de","parents":["1bc2dc4de","aeb67de08"],"title":"Fields","date":null,"timestamp":null,"body":{"stripped":"You can tell which fields you want to get in the result with this parameter.\n\nFields are properties of an entity. For example, a Game field would be genres or release_dates. Some fields have properties of their own, for example, the genres field has the property name.\n\nDefault value: by default every field (\\*) will be requested from the endpoint.\n\nParameters:\n\n$fields: the list of the required fields. This can be either a comma separated list of field names, or an array of field names.\n\nReturns: IGDBQueryBuilder instance","markdown":"```php\r\npublic function fields(string | array $fields) throws IGDBInvalidArgumentException: IGDBQueryBuilder\r\n```\r\n\r\nYou can tell which fields you want to get in the result with this parameter.\r\n\r\nFields are properties of an entity. For example, a Game field would be genres or release_dates. Some fields have properties of their own, for example, the genres field has the property name.\r\n\r\n**Default value**: by default every field (`*`) will be requested from the endpoint.\r\n\r\n**Parameters**:\r\n - `$fields`: the list of the required fields. This can be either a comma separated list of field names, or an array of field names.\r\n\r\n**Returns**: `IGDBQueryBuilder` instance\r\n\r\n```php\r\n<?php\r\n\r\n    // traditional approach, as a string\r\n    $options = array(\r\n        \"fields\" => \"id,name\"\r\n    );\r\n\r\n    // traditional approach, as an array\r\n    $options = array(\r\n        \"fields\" => array(\"id\", \"name\")\r\n    );\r\n\r\n    // builder approach, as a string\r\n    $builder->fields(\"id,name\");\r\n\r\n    // builder approach, as an array\r\n    $builder->fields(array(\"id\", \"name\"));\r\n\r\n?>\r\n```","html":"<pre><code class=\"language-php\">public function fields(string | array $fields) throws IGDBInvalidArgumentException: IGDBQueryBuilder\n</code></pre>\n<p>You can tell which fields you want to get in the result with this parameter.</p>\n<p>Fields are properties of an entity. For example, a Game field would be genres or release_dates. Some fields have properties of their own, for example, the genres field has the property name.</p>\n<p><strong>Default value</strong>: by default every field (<code>*</code>) will be requested from the endpoint.</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$fields</code>: the list of the required fields. This can be either a comma separated list of field names, or an array of field names.</li>\n</ul>\n<p><strong>Returns</strong>: <code>IGDBQueryBuilder</code> instance</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // traditional approach, as a string\r\n    $options = array(\r\n        \"fields\" => \"id,name\"\r\n    );\r\n\r\n    // traditional approach, as an array\r\n    $options = array(\r\n        \"fields\" => array(\"id\", \"name\")\r\n    );\r\n\r\n    // builder approach, as a string\r\n    $builder->fields(\"id,name\");\r\n\r\n    // builder approach, as an array\r\n    $builder->fields(array(\"id\", \"name\"));\r\n\r\n?>\n</code></pre>"},"meta":{"revision":0,"created":1669928307761,"version":0},"$loki":19},{"id":"22f16b7c4","slug":"id","level":3,"parent":"1bc2dc4de","parents":["1bc2dc4de","aeb67de08"],"title":"ID","date":null,"timestamp":null,"body":{"stripped":"This is kind of a traditional thing. Since the IGDB team introduced the apicalypse query there is no separate ID field. This method simply adds a where statement to your query.\n\n\n\nParameters:\n\n$id: one (integer) or more (array of integers) record ID's.\n\nReturns: IGDBQueryBuilder instance","markdown":"```php\r\npublic function id(array | int $id) throws IGDBInvalidArgumentException: IGDBQueryBuilder\r\n```\r\n\r\nThis is kind of a traditional thing. Since the IGDB team introduced the apicalypse query there is no separate ID field. This method simply adds a [where](#where) statement to your query.\r\n\r\n```php\r\n<?php\r\n\r\n    $builder->id(1);\r\n    // where id = 1;\r\n\r\n    $builder->id(array(1,2,3));\r\n    // where id = (1,2,3);\r\n\r\n?>\r\n```\r\n\r\n**Parameters**:\r\n - `$id`: one (integer) or more (array of integers) record ID's.\r\n\r\n**Returns**: `IGDBQueryBuilder` instance\r\n\r\n```php\r\n<?php\r\n\r\n    // traditional approach, single id\r\n    $options = array(\r\n        \"id\" => 1\r\n    );\r\n\r\n    // traditional approach, multiple id's\r\n    $options = array(\r\n        \"id\" => array(1,2,3)\r\n    );\r\n\r\n    // builder approach, single id\r\n    $builder->id(1);\r\n\r\n    // builder approach, multiple id's\r\n    $builder->id(array(1,2,3));\r\n\r\n?>\r\n```","html":"<pre><code class=\"language-php\">public function id(array | int $id) throws IGDBInvalidArgumentException: IGDBQueryBuilder\n</code></pre>\n<p>This is kind of a traditional thing. Since the IGDB team introduced the apicalypse query there is no separate ID field. This method simply adds a <a href=\"#where\">where</a> statement to your query.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    $builder->id(1);\r\n    // where id = 1;\r\n\r\n    $builder->id(array(1,2,3));\r\n    // where id = (1,2,3);\r\n\r\n?>\n</code></pre>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$id</code>: one (integer) or more (array of integers) record ID's.</li>\n</ul>\n<p><strong>Returns</strong>: <code>IGDBQueryBuilder</code> instance</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // traditional approach, single id\r\n    $options = array(\r\n        \"id\" => 1\r\n    );\r\n\r\n    // traditional approach, multiple id's\r\n    $options = array(\r\n        \"id\" => array(1,2,3)\r\n    );\r\n\r\n    // builder approach, single id\r\n    $builder->id(1);\r\n\r\n    // builder approach, multiple id's\r\n    $builder->id(array(1,2,3));\r\n\r\n?>\n</code></pre>"},"meta":{"revision":0,"created":1669928307761,"version":0},"$loki":20},{"id":"3ed22402b","slug":"limit","level":3,"parent":"1bc2dc4de","parents":["1bc2dc4de","aeb67de08"],"title":"Limit","date":null,"timestamp":null,"body":{"stripped":"The maximum number of results in a single query. This value must be a number between 1 and 500.\n\nDefault value: by default the IGDB API will return 10 results.\n\nParameters:\n\n$limit: a number between 1 and 500\n\nReturns: IGDBQueryBuilder instance","markdown":"```php\r\npublic function limit(int $limit) throws IGDBInvalidArgumentException: IGDBQueryBuilder\r\n```\r\n\r\nThe maximum number of results in a single query. This value must be a number between `1` and `500`.\r\n\r\n**Default value**: by default the IGDB API will return `10` results.\r\n\r\n**Parameters**:\r\n - `$limit`: a number between 1 and 500\r\n\r\n**Returns**: `IGDBQueryBuilder` instance\r\n\r\n```php\r\n<?php\r\n\r\n    // traditional approach\r\n    $options => array(\r\n        \"limit\" => 20\r\n    );\r\n\r\n    // builder approach\r\n    $builder->limit(20);\r\n\r\n?>\r\n```","html":"<pre><code class=\"language-php\">public function limit(int $limit) throws IGDBInvalidArgumentException: IGDBQueryBuilder\n</code></pre>\n<p>The maximum number of results in a single query. This value must be a number between <code>1</code> and <code>500</code>.</p>\n<p><strong>Default value</strong>: by default the IGDB API will return <code>10</code> results.</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$limit</code>: a number between 1 and 500</li>\n</ul>\n<p><strong>Returns</strong>: <code>IGDBQueryBuilder</code> instance</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // traditional approach\r\n    $options => array(\r\n        \"limit\" => 20\r\n    );\r\n\r\n    // builder approach\r\n    $builder->limit(20);\r\n\r\n?>\n</code></pre>"},"meta":{"revision":0,"created":1669928307761,"version":0},"$loki":21},{"id":"942333e34","slug":"name","level":3,"parent":"1bc2dc4de","parents":["1bc2dc4de","aeb67de08"],"title":"Name","date":null,"timestamp":null,"body":{"stripped":"This method will set a name for the query. This parameter is processed in case of a multiquery build only.\n\n:warning In case of a multiquery build this parameter is mandatory! If this is missing from the configuration the build will throw an IGDBInvalidParameterException! Refer to the build method for details.\n\nParameters:\n\n$name: the name of the query\n\nReturns: IGDBQueryBuilder instance\n\n\n\nThe value of $query:","markdown":"```php\r\npublic function name(string $name) throws IGDBInvalidArgumentException: IGDBQueryBuilder\r\n```\r\n\r\nThis method will set a name for the query. This parameter is processed **in case of a multiquery build only**.\r\n\r\n>:warning In case of a multiquery build this parameter is **mandatory**! If this is missing from the configuration the build will throw an `IGDBInvalidParameterException`! Refer to the [build method](#building-the-query) for details.\r\n\r\n**Parameters**:\r\n - `$name`: the name of the query\r\n\r\n**Returns**: `IGDBQueryBuilder` instance\r\n\r\n```php\r\n<?php\r\n\r\n    // importing the wrapper\r\n    require_once \"class.igdb.php\";\r\n\r\n    // instantiate the query builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        // configuring the query\r\n        $builder\r\n            ->name(\"Game with ID of 25076\")\r\n            ->endpoint(\"game\")\r\n            ->fields(\"id,name\")\r\n            ->where(\"id = 25076\");\r\n\r\n        // building the query\r\n        $query = $builder->build(true);\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // invalid key or value found in the $options array\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\r\n```\r\n\r\nThe value of `$query`:\r\n\r\n```text\r\nquery games \"Game with ID 25076\" {\r\n  fields id,name;\r\n  where id = 25076;\r\n};\r\n```","html":"<pre><code class=\"language-php\">public function name(string $name) throws IGDBInvalidArgumentException: IGDBQueryBuilder\n</code></pre>\n<p>This method will set a name for the query. This parameter is processed <strong>in case of a multiquery build only</strong>.</p>\n<blockquote>\n<p>:warning In case of a multiquery build this parameter is <strong>mandatory</strong>! If this is missing from the configuration the build will throw an <code>IGDBInvalidParameterException</code>! Refer to the <a href=\"#building-the-query\">build method</a> for details.</p>\n</blockquote>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$name</code>: the name of the query</li>\n</ul>\n<p><strong>Returns</strong>: <code>IGDBQueryBuilder</code> instance</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // importing the wrapper\r\n    require_once \"class.igdb.php\";\r\n\r\n    // instantiate the query builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        // configuring the query\r\n        $builder\r\n            ->name(\"Game with ID of 25076\")\r\n            ->endpoint(\"game\")\r\n            ->fields(\"id,name\")\r\n            ->where(\"id = 25076\");\r\n\r\n        // building the query\r\n        $query = $builder->build(true);\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // invalid key or value found in the $options array\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\n</code></pre>\n<p>The value of <code>$query</code>:</p>\n<pre><code class=\"language-text\">query games \"Game with ID 25076\" {\r\n  fields id,name;\r\n  where id = 25076;\r\n};\n</code></pre>"},"meta":{"revision":0,"created":1669928307762,"version":0},"$loki":22},{"id":"920502f3f","slug":"offset","level":3,"parent":"1bc2dc4de","parents":["1bc2dc4de","aeb67de08"],"title":"Offset","date":null,"timestamp":null,"body":{"stripped":"This will start the result list at the provided value and will give limit number of results. This value must be 0 or greater.\n\nDefault value: the IGDB API will use 0 as a default offset value.\n\nParameters:\n\n$offset: a number which can be 0 or greater.\n\nReturns: IGDBQueryBuilder instance","markdown":"```php\r\npublic function offset(int $offset) throws IGDBInvalidArgumentException: IGDBQueryBuilder\r\n```\r\n\r\nThis will start the result list at the provided value and will give [`limit`](#limit) number of results. This value must be `0` or greater.\r\n\r\n**Default value**: the IGDB API will use `0` as a default offset value.\r\n\r\n**Parameters**:\r\n - `$offset`: a number which can be `0` or greater.\r\n\r\n**Returns**: `IGDBQueryBuilder` instance\r\n\r\n```php\r\n<?php\r\n\r\n    // traditional approach\r\n    $options = array(\r\n        \"offset\" => 5\r\n    );\r\n\r\n    // builder approach\r\n    $builder->offset(5);\r\n\r\n?>\r\n```","html":"<pre><code class=\"language-php\">public function offset(int $offset) throws IGDBInvalidArgumentException: IGDBQueryBuilder\n</code></pre>\n<p>This will start the result list at the provided value and will give <a href=\"#limit\"><code>limit</code></a> number of results. This value must be <code>0</code> or greater.</p>\n<p><strong>Default value</strong>: the IGDB API will use <code>0</code> as a default offset value.</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$offset</code>: a number which can be <code>0</code> or greater.</li>\n</ul>\n<p><strong>Returns</strong>: <code>IGDBQueryBuilder</code> instance</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // traditional approach\r\n    $options = array(\r\n        \"offset\" => 5\r\n    );\r\n\r\n    // builder approach\r\n    $builder->offset(5);\r\n\r\n?>\n</code></pre>"},"meta":{"revision":0,"created":1669928307762,"version":0},"$loki":23},{"id":"b9972533c","slug":"options","level":3,"parent":"1bc2dc4de","parents":["1bc2dc4de","aeb67de08"],"title":"Options","date":null,"timestamp":null,"body":{"stripped":":warning Using the Builder this way is not recommended as this functionality may be removed in future versions. Use the builder approach instead.\n\nWith this method you can parse your $options array instead of using the builder approach. If a non-valid key or value is in the array, an IGDBInvalidParameterException will be thrown.\n\nPassing your $options array to this method will configure the builder with the parameters in it.\n\nParameters:\n\n$options: the options array with your configuration in it\n\nReturns: IGDBQueryBuilder instance\n\n\n\n:warning Calling this method will not reset the configuration. Stacking the options() calls will add each parameter to the builder, overwriting the old values with the new ones. To clear the previous configuration items use the reset method.\n\n\n\nThe query:","markdown":"```php\r\npublic function options(array $options) throws IGDBInvalidArgumentException: IGDBQueryBuilder\r\n```\r\n\r\n>:warning Using the Builder this way is not recommended as this functionality may be removed in future versions. Use the [builder approach](#builder-approach) instead.\r\n\r\nWith this method you can parse your `$options` array instead of using the [builder approach](#builder-approach). If a non-valid key or value is in the array, an `IGDBInvalidParameterException` will be thrown.\r\n\r\nPassing your `$options` array to this method will configure the builder with the parameters in it.\r\n\r\n**Parameters**:\r\n - `$options`: the options array with your configuration in it\r\n\r\n**Returns**: `IGDBQueryBuilder` instance\r\n\r\n```php\r\n<?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n    // instantiate the query builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    // setting up the options array\r\n    $options = array(\r\n        \"search\" => \"uncharted 4\",\r\n        \"fields\" => \"id,name\",\r\n        \"limit\" => 1\r\n    );\r\n\r\n    try {\r\n        // configuring the builder with an options array\r\n        $builder->options($options);\r\n\r\n        // still have to call the build method to building the query\r\n        $query = $builder->build();\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // invalid key or value found in the $options array\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\r\n```\r\n\r\n>:warning Calling this method **will not reset** the configuration. Stacking the `options()` calls will add each parameter to the builder, overwriting the old values with the new ones. To clear the previous configuration items use the [reset method](#reset).\r\n\r\n```php\r\n<?php\r\n\r\n    // importing the wrapper\r\n    require_once \"class.igdb.php\";\r\n\r\n    // instantiate the query builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        // stacking the options calls will add each parameter as this not resets the configuration\r\n        $builder\r\n            ->options(array(\"search\" => \"uncharted\"))\r\n            ->options(array(\"fields\" => \"id,name\"))\r\n            // this call will overwrite the search parameter!\r\n            ->options(array(\"search\" => \"overwritten uncharted\"))\r\n            ->options(array(\"limit\" => 1));\r\n\r\n        // building the query\r\n        $query = $builder->build();\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // invalid key or value found in the $options array\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\r\n```\r\n\r\nThe query:\r\n\r\n```text\r\nfields id,name; search \"overwritten uncharted\"; limit 1;\r\n```","html":"<pre><code class=\"language-php\">public function options(array $options) throws IGDBInvalidArgumentException: IGDBQueryBuilder\n</code></pre>\n<blockquote>\n<p>:warning Using the Builder this way is not recommended as this functionality may be removed in future versions. Use the <a href=\"#builder-approach\">builder approach</a> instead.</p>\n</blockquote>\n<p>With this method you can parse your <code>$options</code> array instead of using the <a href=\"#builder-approach\">builder approach</a>. If a non-valid key or value is in the array, an <code>IGDBInvalidParameterException</code> will be thrown.</p>\n<p>Passing your <code>$options</code> array to this method will configure the builder with the parameters in it.</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$options</code>: the options array with your configuration in it</li>\n</ul>\n<p><strong>Returns</strong>: <code>IGDBQueryBuilder</code> instance</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n    // instantiate the query builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    // setting up the options array\r\n    $options = array(\r\n        \"search\" => \"uncharted 4\",\r\n        \"fields\" => \"id,name\",\r\n        \"limit\" => 1\r\n    );\r\n\r\n    try {\r\n        // configuring the builder with an options array\r\n        $builder->options($options);\r\n\r\n        // still have to call the build method to building the query\r\n        $query = $builder->build();\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // invalid key or value found in the $options array\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\n</code></pre>\n<blockquote>\n<p>:warning Calling this method <strong>will not reset</strong> the configuration. Stacking the <code>options()</code> calls will add each parameter to the builder, overwriting the old values with the new ones. To clear the previous configuration items use the <a href=\"#reset\">reset method</a>.</p>\n</blockquote>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // importing the wrapper\r\n    require_once \"class.igdb.php\";\r\n\r\n    // instantiate the query builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        // stacking the options calls will add each parameter as this not resets the configuration\r\n        $builder\r\n            ->options(array(\"search\" => \"uncharted\"))\r\n            ->options(array(\"fields\" => \"id,name\"))\r\n            // this call will overwrite the search parameter!\r\n            ->options(array(\"search\" => \"overwritten uncharted\"))\r\n            ->options(array(\"limit\" => 1));\r\n\r\n        // building the query\r\n        $query = $builder->build();\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // invalid key or value found in the $options array\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\n</code></pre>\n<p>The query:</p>\n<pre><code class=\"language-text\">fields id,name; search \"overwritten uncharted\"; limit 1;\n</code></pre>"},"meta":{"revision":0,"created":1669928307762,"version":0},"$loki":24},{"id":"d76cda84d","slug":"reset","level":3,"parent":"1bc2dc4de","parents":["1bc2dc4de","aeb67de08"],"title":"Reset","date":null,"timestamp":null,"body":{"stripped":"This method will reset every configuration to the default values.\n\nParameters: -\n\nReturns: IGDBQueryBuilder instance\n\n\n\nThe code above will return the $options2 array's configuration, as it got reset with the reset() method.","markdown":"```php\r\npublic function reset(): IGDBQueryBuilder\r\n```\r\n\r\nThis method will reset every configuration to the default values.\r\n\r\n**Parameters**: -\r\n\r\n**Returns**: `IGDBQueryBuilder` instance\r\n\r\n```php\r\n<?php\r\n\r\n    // importing the wrapper\r\n    require_once \"class.igdb.php\";\r\n\r\n    // instantiate the query builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    // setting up the options1 array\r\n    $options1 = array(\r\n        \"search\" => \"uncharted 4\",\r\n        \"fields\" => \"id,name\",\r\n        \"limit\" => 2\r\n    );\r\n\r\n    // setting upt he options2 array\r\n    $options2 = array(\r\n        \"search\" => \"star wars\",\r\n        \"fields\" => \"cover,slug\",\r\n        \"limit\" => 1\r\n    );\r\n\r\n    try {\r\n        // configuring the builder with options1, reset the values then pass options2\r\n        $builder->options($options1)->reset()->options($options2);\r\n\r\n        // building the query\r\n        $query = $builder->build();\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // invalid key or value found in the $options array\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\r\n```\r\n\r\nThe code above will return the `$options2` array's configuration, as it got reset with the `reset()` method.\r\n\r\n```text\r\nfields cover,slug; search \"star wars\"; limit 1;\r\n```","html":"<pre><code class=\"language-php\">public function reset(): IGDBQueryBuilder\n</code></pre>\n<p>This method will reset every configuration to the default values.</p>\n<p><strong>Parameters</strong>: -</p>\n<p><strong>Returns</strong>: <code>IGDBQueryBuilder</code> instance</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // importing the wrapper\r\n    require_once \"class.igdb.php\";\r\n\r\n    // instantiate the query builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    // setting up the options1 array\r\n    $options1 = array(\r\n        \"search\" => \"uncharted 4\",\r\n        \"fields\" => \"id,name\",\r\n        \"limit\" => 2\r\n    );\r\n\r\n    // setting upt he options2 array\r\n    $options2 = array(\r\n        \"search\" => \"star wars\",\r\n        \"fields\" => \"cover,slug\",\r\n        \"limit\" => 1\r\n    );\r\n\r\n    try {\r\n        // configuring the builder with options1, reset the values then pass options2\r\n        $builder->options($options1)->reset()->options($options2);\r\n\r\n        // building the query\r\n        $query = $builder->build();\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // invalid key or value found in the $options array\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\n</code></pre>\n<p>The code above will return the <code>$options2</code> array's configuration, as it got reset with the <code>reset()</code> method.</p>\n<pre><code class=\"language-text\">fields cover,slug; search \"star wars\"; limit 1;\n</code></pre>"},"meta":{"revision":0,"created":1669928307762,"version":0},"$loki":25},{"id":"0a23d604d","slug":"search","level":3,"parent":"1bc2dc4de","parents":["1bc2dc4de","aeb67de08"],"title":"Search","date":null,"timestamp":null,"body":{"stripped":"Search based on name, results are sorted by similarity to the given search string.\n\nParameters:\n\n$search: the search string\n\nReturns: IGDBQueryBuilder instance","markdown":"```php\r\npublic function search(string $search) throws IGDBInvalidArgumentException: IGDBQueryBuilder\r\n```\r\n\r\nSearch based on name, results are sorted by similarity to the given search string.\r\n\r\n**Parameters**:\r\n - `$search`: the search string\r\n\r\n**Returns**: `IGDBQueryBuilder` instance\r\n\r\n```php\r\n<?php\r\n\r\n    // traditional approach\r\n    $options = array(\r\n        \"search\" => \"uncharted 4\"\r\n    );\r\n\r\n    // builder approach\r\n    $builder->search(\"uncharted 4\");\r\n\r\n?>\r\n```","html":"<pre><code class=\"language-php\">public function search(string $search) throws IGDBInvalidArgumentException: IGDBQueryBuilder\n</code></pre>\n<p>Search based on name, results are sorted by similarity to the given search string.</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$search</code>: the search string</li>\n</ul>\n<p><strong>Returns</strong>: <code>IGDBQueryBuilder</code> instance</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // traditional approach\r\n    $options = array(\r\n        \"search\" => \"uncharted 4\"\r\n    );\r\n\r\n    // builder approach\r\n    $builder->search(\"uncharted 4\");\r\n\r\n?>\n</code></pre>"},"meta":{"revision":0,"created":1669928307762,"version":0},"$loki":26},{"id":"303ee4a07","slug":"sort","level":3,"parent":"1bc2dc4de","parents":["1bc2dc4de","aeb67de08"],"title":"Sort","date":null,"timestamp":null,"body":{"stripped":"Sorting (ordering) is used to order results by a specific field. The parameter can be either an apicalypse formatted sort string or an array with specific key-value pairs. If you provide the Order parameter as an array, you must have two values in it with the following keys:\n\nfield: The field you want to do the ordering by\n\ndirection: The direction of the ordering. It must be either asc for ascending or desc for descending ordering.\n\nParameters:\n\n$sort: either an apicalypse sort string or an array with specific key-value pairs.\n\nReturns: IGDBQueryBuilder instance","markdown":"```php\r\npublic function sort(string | array $sort) throws IGDBInvalidArgumentException: IGDBQueryBuilder\r\n```\r\n\r\nSorting (ordering) is used to order results by a specific field. The parameter can be either an apicalypse formatted sort string or an array with specific key-value pairs. If you provide the Order parameter as an array, you must have two values in it with the following keys:\r\n - `field`: The field you want to do the ordering by\r\n - `direction`: The direction of the ordering. It must be either `asc` for ascending or `desc` for descending ordering.\r\n\r\n**Parameters**:\r\n - `$sort`: either an apicalypse sort string or an array with specific key-value pairs.\r\n\r\n**Returns**: `IGDBQueryBuilder` instance\r\n\r\n```php\r\n<?php\r\n\r\n    // traditional approach as a string\r\n    $options = array(\r\n        \"sort\" => \"release_dates.date desc\",\r\n    );\r\n\r\n    // traditional approach as an array\r\n    $options = array(\r\n        \"sort\" => array(\r\n            \"field\" => \"release_dates.date\",\r\n            \"direction\" => \"desc\"\r\n        )\r\n    );\r\n\r\n    // builder approach as a string\r\n    $builder->sort(\"release_dates.date desc\");\r\n\r\n    // builder approach as an array\r\n    $builder->sort(\r\n        array(\r\n            \"field\" => \"release_dates.date\",\r\n            \"direction\" => \"desc\"\r\n        )\r\n    );\r\n\r\n?>\r\n```","html":"<pre><code class=\"language-php\">public function sort(string | array $sort) throws IGDBInvalidArgumentException: IGDBQueryBuilder\n</code></pre>\n<p>Sorting (ordering) is used to order results by a specific field. The parameter can be either an apicalypse formatted sort string or an array with specific key-value pairs. If you provide the Order parameter as an array, you must have two values in it with the following keys:</p>\n<ul>\n<li><code>field</code>: The field you want to do the ordering by</li>\n<li><code>direction</code>: The direction of the ordering. It must be either <code>asc</code> for ascending or <code>desc</code> for descending ordering.</li>\n</ul>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$sort</code>: either an apicalypse sort string or an array with specific key-value pairs.</li>\n</ul>\n<p><strong>Returns</strong>: <code>IGDBQueryBuilder</code> instance</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // traditional approach as a string\r\n    $options = array(\r\n        \"sort\" => \"release_dates.date desc\",\r\n    );\r\n\r\n    // traditional approach as an array\r\n    $options = array(\r\n        \"sort\" => array(\r\n            \"field\" => \"release_dates.date\",\r\n            \"direction\" => \"desc\"\r\n        )\r\n    );\r\n\r\n    // builder approach as a string\r\n    $builder->sort(\"release_dates.date desc\");\r\n\r\n    // builder approach as an array\r\n    $builder->sort(\r\n        array(\r\n            \"field\" => \"release_dates.date\",\r\n            \"direction\" => \"desc\"\r\n        )\r\n    );\r\n\r\n?>\n</code></pre>"},"meta":{"revision":0,"created":1669928307762,"version":0},"$loki":27},{"id":"3228bd922","slug":"where","level":3,"parent":"1bc2dc4de","parents":["1bc2dc4de","aeb67de08"],"title":"Where","date":null,"timestamp":null,"body":{"stripped":"Filters are used to swift through results to get what you want. You can exclude and include results based on their properties. For example you could remove all Games where the rating was below 80 (where rating >= 80).\n\nThe where parameter can be either an apicalypse formatted string or an array with specific key-value pairs. If you provide the where parameters as an array, you must have three fix keys in it:\n\nfield: The name of the field you want to apply the filter to.\n\npostfix: The postfix you want to use with the filter. Refer to the Available Postfixes section of the IGDB Filters Documentation for available postfixes.\n\nvalue: The value of the filter.\n\nThe where filters will be concatenated with AND operators (&).\n\n:tip Multiple filter parameters can be applied to the same query. Check the examples below.\n\nParameters:\n\n$where: either an apicalypse formatted string or an array with specific keys\n\nReturns: IGDBQueryBuilder instance\n\n\n\nThis method is trying to validate your input against some rules and will throw an IGDBInvalidArgumentException in case of any issues. If you need more flexibility or custom where statements with complex conditions in you queries use the Custom Where method instead.","markdown":"```php\r\npublic function where(string | array $where) throws IGDBInvalidArgumentException: IGDBQueryBuilder\r\n```\r\n\r\nFilters are used to swift through results to get what you want. You can exclude and include results based on their properties. For example you could remove all Games where the rating was below 80 `(where rating >= 80)`.\r\n\r\nThe where parameter can be either an apicalypse formatted string or an array with specific key-value pairs. If you provide the where parameters as an array, you must have three fix keys in it:\r\n - `field`: The name of the field you want to apply the filter to.\r\n - `postfix`: The postfix you want to use with the filter. Refer to the [Available Postfixes](https://api-docs.igdb.com/#filters) section of the IGDB Filters Documentation for available postfixes.\r\n - `value`: The value of the filter.\r\n\r\nThe where filters will be concatenated with **AND** operators (`&`).\r\n\r\n>:tip Multiple filter parameters can be applied to the same query. Check the examples below.\r\n\r\n**Parameters**:\r\n - `$where`: either an apicalypse formatted string or an array with specific keys\r\n\r\n**Returns**: `IGDBQueryBuilder` instance\r\n\r\n```php\r\n<?php\r\n\r\n    // traditional approach, single criteria as a string\r\n    $options = array(\r\n        \"where\" => \"release_dates.platform = 8\"\r\n    );\r\n\r\n    // traditional approach, single criteria as an array\r\n    $options = array(\r\n        \"where\" => array(\r\n            \"field\" => \"release_dates.platform\",\r\n            \"postfix\" => \"=\",\r\n            \"value\" => 8\r\n        )\r\n    );\r\n\r\n    // traditional approach, multiple criteria as a string\r\n    $options = array(\r\n        \"where\" => array(\r\n            \"release_dates.platform = 8\",\r\n            \"total_rating >= 70\"\r\n        );\r\n    );\r\n\r\n    // traditional approach, multiple criteria as an array\r\n    $options = array(\r\n        \"where\" => array(\r\n            array(\r\n                \"field\" => \"release_dates.platform\",\r\n                \"postfix\" => \"=\",\r\n                \"value\" => 8\r\n            ),\r\n            array(\r\n                \"field\" => \"total_rating\",\r\n                \"postfix\" => \">=\",\r\n                \"value\" => 70\r\n            )\r\n        )\r\n    );\r\n\r\n    // builder approach, single criteria as a string\r\n    $builder->where(\"release_dates.platform = 8\");\r\n\r\n    // builder approach, single criteria as an array\r\n    $builder->where(\r\n        array(\r\n            \"field\" => \"release_dates.platform\",\r\n            \"postfix\" => \"=\",\r\n            \"value\" => 8\r\n        )\r\n    );\r\n\r\n    // builder approach, multiple criteria as a string\r\n    $builder\r\n        ->where(\"release_dates.platform = 8\")\r\n        ->where(\"total_rating >= 70\");\r\n\r\n    // builder approach, multiple criteria as an array\r\n    $builder\r\n        ->where(\r\n            array(\r\n                \"field\" => \"release_dates.platform\",\r\n                \"postfix\" => \"=\",\r\n                \"value\" => 8\r\n            )\r\n        )\r\n        ->where(\r\n            array(\r\n                \"field\" => \"total_rating\",\r\n                \"postfix\" => \">=\",\r\n                \"value\" => 70\r\n            )\r\n        );\r\n?>\r\n```\r\n\r\n> This method is trying to validate your input against some rules and will throw an `IGDBInvalidArgumentException` in case of any issues. If you need more flexibility or custom where statements with complex conditions in you queries use the [Custom Where](#custom-where) method instead.","html":"<pre><code class=\"language-php\">public function where(string | array $where) throws IGDBInvalidArgumentException: IGDBQueryBuilder\n</code></pre>\n<p>Filters are used to swift through results to get what you want. You can exclude and include results based on their properties. For example you could remove all Games where the rating was below 80 <code>(where rating >= 80)</code>.</p>\n<p>The where parameter can be either an apicalypse formatted string or an array with specific key-value pairs. If you provide the where parameters as an array, you must have three fix keys in it:</p>\n<ul>\n<li><code>field</code>: The name of the field you want to apply the filter to.</li>\n<li><code>postfix</code>: The postfix you want to use with the filter. Refer to the <a href=\"https://api-docs.igdb.com/#filters\" target=\"_blank\" rel=\"nofollow\">Available Postfixes</a> section of the IGDB Filters Documentation for available postfixes.</li>\n<li><code>value</code>: The value of the filter.</li>\n</ul>\n<p>The where filters will be concatenated with <strong>AND</strong> operators (<code>&#x26;</code>).</p>\n<blockquote>\n<p>:tip Multiple filter parameters can be applied to the same query. Check the examples below.</p>\n</blockquote>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$where</code>: either an apicalypse formatted string or an array with specific keys</li>\n</ul>\n<p><strong>Returns</strong>: <code>IGDBQueryBuilder</code> instance</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // traditional approach, single criteria as a string\r\n    $options = array(\r\n        \"where\" => \"release_dates.platform = 8\"\r\n    );\r\n\r\n    // traditional approach, single criteria as an array\r\n    $options = array(\r\n        \"where\" => array(\r\n            \"field\" => \"release_dates.platform\",\r\n            \"postfix\" => \"=\",\r\n            \"value\" => 8\r\n        )\r\n    );\r\n\r\n    // traditional approach, multiple criteria as a string\r\n    $options = array(\r\n        \"where\" => array(\r\n            \"release_dates.platform = 8\",\r\n            \"total_rating >= 70\"\r\n        );\r\n    );\r\n\r\n    // traditional approach, multiple criteria as an array\r\n    $options = array(\r\n        \"where\" => array(\r\n            array(\r\n                \"field\" => \"release_dates.platform\",\r\n                \"postfix\" => \"=\",\r\n                \"value\" => 8\r\n            ),\r\n            array(\r\n                \"field\" => \"total_rating\",\r\n                \"postfix\" => \">=\",\r\n                \"value\" => 70\r\n            )\r\n        )\r\n    );\r\n\r\n    // builder approach, single criteria as a string\r\n    $builder->where(\"release_dates.platform = 8\");\r\n\r\n    // builder approach, single criteria as an array\r\n    $builder->where(\r\n        array(\r\n            \"field\" => \"release_dates.platform\",\r\n            \"postfix\" => \"=\",\r\n            \"value\" => 8\r\n        )\r\n    );\r\n\r\n    // builder approach, multiple criteria as a string\r\n    $builder\r\n        ->where(\"release_dates.platform = 8\")\r\n        ->where(\"total_rating >= 70\");\r\n\r\n    // builder approach, multiple criteria as an array\r\n    $builder\r\n        ->where(\r\n            array(\r\n                \"field\" => \"release_dates.platform\",\r\n                \"postfix\" => \"=\",\r\n                \"value\" => 8\r\n            )\r\n        )\r\n        ->where(\r\n            array(\r\n                \"field\" => \"total_rating\",\r\n                \"postfix\" => \">=\",\r\n                \"value\" => 70\r\n            )\r\n        );\r\n?>\n</code></pre>\n<blockquote>\n<p>This method is trying to validate your input against some rules and will throw an <code>IGDBInvalidArgumentException</code> in case of any issues. If you need more flexibility or custom where statements with complex conditions in you queries use the <a href=\"#custom-where\">Custom Where</a> method instead.</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307762,"version":0},"$loki":28},{"id":"5b85e20ab","slug":"building-the-query","level":2,"parent":"1bc2dc4de","parents":["1bc2dc4de"],"title":"Building the Query","date":null,"timestamp":null,"body":{"stripped":"When the Builder object is configured properly the final step is to build the query to an apicalypse query string. The syntax of the query depends on which endpoint the query is executed against. The multiquery endpoint requires a few additional information and a slightly different syntax.\n\nA game endpoint query:\n\n\n\nA multiquery to the game game endpoint:\n\n\n\nThe build method accepts one boolean parameter. Using this parameter the build method decides which syntax to return. If a multiquery is required, a few extra fields has to be set for the builder:\n\nname: the name of the query choosen by the user\n\nendpoint: the endpoint to send the query against\n\ncount \\[optional]: whether the records or their count is required. By default the value of this parameter is false.\n\n:warning In case of a multiquery request the properties name and endpoint are mandatory! If any of these are missing from the configuration, an IGDBInvalidParameterException will be thrown.\n\nParameters:\n\n$multiquery: if true, a multiquery will be returned, an endpoint query otherwise. The default value of this parameter is false.\n\n:warning If a non-boolean parameter is passed to the build method, an IGDBInavlidParameterException is thrown!\n\nReturns: the apicalypse query string\n\nAn endpoint query example:\n\n\n\nThe value of $query:\n\n\n\nA multiquery example:\n\n\n\nThe value of $query:","markdown":"```php\r\npublic function build(boolean $multiquery = false) throws IGDBInvalidParameterException: mixed\r\n```\r\n\r\nWhen the Builder object is configured properly the final step is to build the query to an apicalypse query string. The syntax of the query depends on which endpoint the query is executed against. The multiquery endpoint requires a few additional information and a slightly different syntax.\r\n\r\nA [`game`](#game) endpoint query:\r\n```text\r\nfields id,name;\r\nwhere id = 25076;\r\n```\r\n\r\nA [`multiquery`](#multiquery) to the game [`game`](#game) endpoint:\r\n```text\r\nquery games \"Main Game\" {\r\n  fields id,name;\r\n  where id = 25076;\r\n};\r\n```\r\n\r\nThe build method accepts one `boolean` parameter. Using this parameter the build method decides which syntax to return. If a multiquery is required, a few extra fields has to be set for the builder:\r\n - [`name`](#name): the name of the query choosen by the user\r\n - [`endpoint`](#endpoint): the endpoint to send the query against\r\n - [`count`](#count) [optional]: whether the records or their count is required. By default the value of this parameter is `false`.\r\n\r\n>:warning In case of a multiquery request the properties [name](#name) and [endpoint](#endpoint) are **mandatory**! If any of these are missing from the configuration, an `IGDBInvalidParameterException` will be thrown.\r\n\r\n**Parameters**:\r\n - `$multiquery`: if `true`, a multiquery will be returned, an endpoint query otherwise. The default value of this parameter is `false`.\r\n\r\n >:warning If a non-boolean parameter is passed to the build method, an `IGDBInavlidParameterException` is thrown!\r\n\r\n**Returns**: the apicalypse query string\r\n\r\nAn endpoint query example:\r\n```php\r\n<?php\r\n\r\n    // importing the wrapper\r\n    require_once \"class.igdb.php\";\r\n\r\n    // instantiate the query builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        // configuring the query\r\n        $query = $builder\r\n            ->search(\"uncharted 4\")\r\n            ->fields(\"id, name\")\r\n            ->limit(1)\r\n            ->build();\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // invalid value passed to a method\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\r\n```\r\n\r\nThe value of `$query`:\r\n\r\n```text\r\nfields id,name;\r\nsearch \"uncharted 4\";\r\nlimit 1;\r\n```\r\n\r\nA multiquery example:\r\n\r\n```php\r\n<?php\r\n\r\n    // importing the wrapper\r\n    require_once \"class.igdb.php\";\r\n\r\n    // instantiate the query builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        // configuring the query\r\n        $builder\r\n            ->name(\"Game with ID of 25076\")\r\n            ->endpoint(\"game\")\r\n            ->fields(\"id,name\")\r\n            ->where(\"id = 25076\")\r\n            // note the true parameter\r\n            ->build(true);\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // invalid key or value found in the $options array\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\r\n```\r\n\r\nThe value of `$query`:\r\n\r\n```text\r\nquery games \"Game with ID of 25076\" {\r\n  fields id,name;\r\n  where id = 25076;\r\n};\r\n```","html":"<pre><code class=\"language-php\">public function build(boolean $multiquery = false) throws IGDBInvalidParameterException: mixed\n</code></pre>\n<p>When the Builder object is configured properly the final step is to build the query to an apicalypse query string. The syntax of the query depends on which endpoint the query is executed against. The multiquery endpoint requires a few additional information and a slightly different syntax.</p>\n<p>A <a href=\"#game\"><code>game</code></a> endpoint query:</p>\n<pre><code class=\"language-text\">fields id,name;\r\nwhere id = 25076;\n</code></pre>\n<p>A <a href=\"#multiquery\"><code>multiquery</code></a> to the game <a href=\"#game\"><code>game</code></a> endpoint:</p>\n<pre><code class=\"language-text\">query games \"Main Game\" {\r\n  fields id,name;\r\n  where id = 25076;\r\n};\n</code></pre>\n<p>The build method accepts one <code>boolean</code> parameter. Using this parameter the build method decides which syntax to return. If a multiquery is required, a few extra fields has to be set for the builder:</p>\n<ul>\n<li><a href=\"#name\"><code>name</code></a>: the name of the query choosen by the user</li>\n<li><a href=\"#endpoint\"><code>endpoint</code></a>: the endpoint to send the query against</li>\n<li><a href=\"#count\"><code>count</code></a> [optional]: whether the records or their count is required. By default the value of this parameter is <code>false</code>.</li>\n</ul>\n<blockquote>\n<p>:warning In case of a multiquery request the properties <a href=\"#name\">name</a> and <a href=\"#endpoint\">endpoint</a> are <strong>mandatory</strong>! If any of these are missing from the configuration, an <code>IGDBInvalidParameterException</code> will be thrown.</p>\n</blockquote>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$multiquery</code>: if <code>true</code>, a multiquery will be returned, an endpoint query otherwise. The default value of this parameter is <code>false</code>.</li>\n</ul>\n<blockquote>\n<p>:warning If a non-boolean parameter is passed to the build method, an <code>IGDBInavlidParameterException</code> is thrown!</p>\n</blockquote>\n<p><strong>Returns</strong>: the apicalypse query string</p>\n<p>An endpoint query example:</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // importing the wrapper\r\n    require_once \"class.igdb.php\";\r\n\r\n    // instantiate the query builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        // configuring the query\r\n        $query = $builder\r\n            ->search(\"uncharted 4\")\r\n            ->fields(\"id, name\")\r\n            ->limit(1)\r\n            ->build();\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // invalid value passed to a method\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\n</code></pre>\n<p>The value of <code>$query</code>:</p>\n<pre><code class=\"language-text\">fields id,name;\r\nsearch \"uncharted 4\";\r\nlimit 1;\n</code></pre>\n<p>A multiquery example:</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // importing the wrapper\r\n    require_once \"class.igdb.php\";\r\n\r\n    // instantiate the query builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        // configuring the query\r\n        $builder\r\n            ->name(\"Game with ID of 25076\")\r\n            ->endpoint(\"game\")\r\n            ->fields(\"id,name\")\r\n            ->where(\"id = 25076\")\r\n            // note the true parameter\r\n            ->build(true);\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // invalid key or value found in the $options array\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\n</code></pre>\n<p>The value of <code>$query</code>:</p>\n<pre><code class=\"language-text\">query games \"Game with ID of 25076\" {\r\n  fields id,name;\r\n  where id = 25076;\r\n};\n</code></pre>"},"meta":{"revision":0,"created":1669928307762,"version":0},"$loki":29},{"id":"cbf8ecb78","slug":"igdb-wrapper","level":1,"parent":null,"parents":[],"title":"IGDB Wrapper","date":null,"timestamp":1650837869000,"body":{"stripped":"This is the most important part of the wrapper, the IGDB class which does the heavy lifting: communicating with the IGDB API.\n\nAs mentioned in the Introduction, to have access to IGDB's database you have to register a Twitch Account and have your own client_id and access_token.\n\n:tip You can add your tokens to the documentation to replace them in the exmple codes. Click the logo in the top left corner to get back to the main page and save your tokens.","markdown":"This is the most important part of the wrapper, the `IGDB` class which does the heavy lifting: communicating with the IGDB API.\r\n\r\nAs mentioned in the [Introduction](#getting-started), to have access to IGDB's database you have to register a Twitch Account and have your own `client_id` and `access_token`.\r\n\r\n>:tip You can add your tokens to the documentation to replace them in the exmple codes. Click the logo in the top left corner to get back to the main page and save your tokens.","html":"<p>This is the most important part of the wrapper, the <code>IGDB</code> class which does the heavy lifting: communicating with the IGDB API.</p>\n<p>As mentioned in the <a href=\"#getting-started\">Introduction</a>, to have access to IGDB's database you have to register a Twitch Account and have your own <code>client_id</code> and <code>access_token</code>.</p>\n<blockquote>\n<p>:tip You can add your tokens to the documentation to replace them in the exmple codes. Click the logo in the top left corner to get back to the main page and save your tokens.</p>\n</blockquote>"},"icon":"fa-gift","overview":"The main wrapper. Methods, endpoints, properties, configurations. Sending your queries to the IGDB API.","meta":{"revision":0,"created":1669928307762,"version":0},"$loki":30},{"id":"e2da56724","slug":"instantiating-the-wrapper-ii","level":2,"parent":"cbf8ecb78","parents":["cbf8ecb78"],"title":"Instantiating the wrapper","date":null,"timestamp":null,"body":{"stripped":"After importing the dependencies you can instantiate the class with the new keyword by passing your tokens to the constructor.\n\n\n\n:info The wrapper itself does not validate your tokens. If your credentials are invalid, you will get an error from the IGDB API after executing a query.","markdown":"After importing the dependencies you can instantiate the class with the `new` keyword by passing your tokens to the constructor.\r\n\r\n```php\r\n<?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n?>\r\n```\r\n\r\n>:info The wrapper itself does not validate your tokens. If your credentials are invalid, you will get an error from the IGDB API after executing a query.","html":"<p>After importing the dependencies you can instantiate the class with the <code>new</code> keyword by passing your tokens to the constructor.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n?>\n</code></pre>\n<blockquote>\n<p>:info The wrapper itself does not validate your tokens. If your credentials are invalid, you will get an error from the IGDB API after executing a query.</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307763,"version":0},"$loki":31},{"id":"7e40b0d15","slug":"public-methods","level":2,"parent":"cbf8ecb78","parents":["cbf8ecb78"],"title":"Public Methods","date":null,"timestamp":null,"body":{"stripped":"These methods are exposed from the IGDB object.","markdown":"These methods are exposed from the `IGDB` object.","html":"<p>These methods are exposed from the <code>IGDB</code> object.</p>"},"meta":{"revision":0,"created":1669928307763,"version":0},"$loki":32},{"id":"63549d454","slug":"get-request-info","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","7e40b0d15"],"title":"Get Request Info","date":null,"timestamp":null,"body":{"stripped":"After a query is executed, the latest request information will be stored and can be retrieved using this method.\n\nThe new version of the IGDB API (v4) will return a http response code 429 when you exceed the limit of requests on the database (4 requests per second at the time of writing this documentation).\n\n\n\nDetails of the query can be fetched from the output of the get_request_info() method (for example, the HTTP Response code from http_code).","markdown":"```php\r\npublic function get_request_info()\r\n```\r\n\r\nAfter a query is executed, the latest request information will be stored and can be retrieved using this method.\r\n\r\n> The new version of the IGDB API (v4) will return a http response code `429` when you exceed the limit of requests on the database (4 requests per second at the time of writing this documentation).\r\n\r\n```php\r\n<?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n    try {\r\n        $igdb->game('fields id,name; search \"uncharted 4\"; limit 1;');\r\n\r\n        // getting the details of the latest query\r\n        $request_info = $igdb->get_request_info();\r\n\r\n        // showing the details\r\n        var_dump($request_info);\r\n    } catch (IGDBEndpointException $e) {\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\r\n```\r\n\r\nDetails of the query can be fetched from the output of the `get_request_info()` method (for example, the HTTP Response code from `http_code`).\r\n\r\n```text\r\narray (size=37)\r\n  'url' => string 'https://api.igdb.com/v4/games' (length=29)\r\n  'content_type' => string 'application/json;charset=utf-8' (length=30)\r\n  'http_code' => int 200\r\n  'header_size' => int 870\r\n  'request_size' => int 224\r\n  'filetime' => int -1\r\n  'ssl_verify_result' => int 20\r\n  'redirect_count' => int 0\r\n  'total_time' => float 0.748895\r\n  'namelookup_time' => float 0.000705\r\n  'connect_time' => float 0.048049\r\n  'pretransfer_time' => float 0.088656\r\n  'size_upload' => float 46\r\n  'size_download' => float 73\r\n  'speed_download' => float 97\r\n  'speed_upload' => float 61\r\n  'download_content_length' => float 73\r\n  'upload_content_length' => float 46\r\n  'starttransfer_time' => float 0.088661\r\n  'redirect_time' => float 0\r\n  'redirect_url' => string '' (length=0)\r\n  'primary_ip' => string '104.22.65.239' (length=13)\r\n  'certinfo' =>\r\n    array (size=0)\r\n      empty\r\n  'primary_port' => int 443\r\n  'local_ip' => string '192.168.1.99' (length=12)\r\n  'local_port' => int 58813\r\n  'http_version' => int 3\r\n  'protocol' => int 2\r\n  'ssl_verifyresult' => int 0\r\n  'scheme' => string 'HTTPS' (length=5)\r\n  'appconnect_time_us' => int 88535\r\n  'connect_time_us' => int 48049\r\n  'namelookup_time_us' => int 705\r\n  'pretransfer_time_us' => int 88656\r\n  'redirect_time_us' => int 0\r\n  'starttransfer_time_us' => int 88661\r\n  'total_time_us' => int 748895\r\n```","html":"<pre><code class=\"language-php\">public function get_request_info()\n</code></pre>\n<p>After a query is executed, the latest request information will be stored and can be retrieved using this method.</p>\n<blockquote>\n<p>The new version of the IGDB API (v4) will return a http response code <code>429</code> when you exceed the limit of requests on the database (4 requests per second at the time of writing this documentation).</p>\n</blockquote>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n    try {\r\n        $igdb->game('fields id,name; search \"uncharted 4\"; limit 1;');\r\n\r\n        // getting the details of the latest query\r\n        $request_info = $igdb->get_request_info();\r\n\r\n        // showing the details\r\n        var_dump($request_info);\r\n    } catch (IGDBEndpointException $e) {\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\n</code></pre>\n<p>Details of the query can be fetched from the output of the <code>get_request_info()</code> method (for example, the HTTP Response code from <code>http_code</code>).</p>\n<pre><code class=\"language-text\">array (size=37)\r\n  'url' => string 'https://api.igdb.com/v4/games' (length=29)\r\n  'content_type' => string 'application/json;charset=utf-8' (length=30)\r\n  'http_code' => int 200\r\n  'header_size' => int 870\r\n  'request_size' => int 224\r\n  'filetime' => int -1\r\n  'ssl_verify_result' => int 20\r\n  'redirect_count' => int 0\r\n  'total_time' => float 0.748895\r\n  'namelookup_time' => float 0.000705\r\n  'connect_time' => float 0.048049\r\n  'pretransfer_time' => float 0.088656\r\n  'size_upload' => float 46\r\n  'size_download' => float 73\r\n  'speed_download' => float 97\r\n  'speed_upload' => float 61\r\n  'download_content_length' => float 73\r\n  'upload_content_length' => float 46\r\n  'starttransfer_time' => float 0.088661\r\n  'redirect_time' => float 0\r\n  'redirect_url' => string '' (length=0)\r\n  'primary_ip' => string '104.22.65.239' (length=13)\r\n  'certinfo' =>\r\n    array (size=0)\r\n      empty\r\n  'primary_port' => int 443\r\n  'local_ip' => string '192.168.1.99' (length=12)\r\n  'local_port' => int 58813\r\n  'http_version' => int 3\r\n  'protocol' => int 2\r\n  'ssl_verifyresult' => int 0\r\n  'scheme' => string 'HTTPS' (length=5)\r\n  'appconnect_time_us' => int 88535\r\n  'connect_time_us' => int 48049\r\n  'namelookup_time_us' => int 705\r\n  'pretransfer_time_us' => int 88656\r\n  'redirect_time_us' => int 0\r\n  'starttransfer_time_us' => int 88661\r\n  'total_time_us' => int 748895\n</code></pre>"},"meta":{"revision":0,"created":1669928307763,"version":0},"$loki":33},{"id":"f3afbe35c","slug":"construct-url","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","7e40b0d15"],"title":"Construct URL","date":null,"timestamp":null,"body":{"stripped":"The method will construct the full URL for the request and will return the constructed URL as a string. If an invalid endpoint name passed to $endpoint an IGDBInvalidParameterException will be thrown.\n\nParameters:\n\n$endpoint: the endpoint to use (the name of the endpoint, not the path to it!). Possible values:\n\nage_rating\n\nalternative_name\n\nartwork\n\ncharacter_mug_shot\n\ncharacter\n\ncollection\n\ncompany_logo\n\ncompany_website\n\ncompany\n\ncover\n\nexternal_game\n\nfranchise\n\ngame_engine_logo\n\ngame_engine\n\ngame_mode\n\ngame_version_feature_value\n\ngame_version_feature\n\ngame_version\n\ngame_video\n\ngame\n\ngenre\n\ninvolved_company\n\nkeyword\n\nmultiplayer_mode\n\nmultiquery\n\nplatform_family\n\nplatform_logo\n\nplatform_version_company\n\nplatform_version_release_date\n\nplatform_version\n\nplatform_website\n\nplatform\n\nplayer_perspective\n\nrelease_date\n\nscreenshot\n\nsearch\n\ntheme\n\nwebsite\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: the full constructed URL to the IGDB Endpoint as a string.\n\n\n\nOutput:","markdown":"```php\r\npublic function construct_url(string $endpoint, boolean $count = false) throws IGDBInvalidParameterException: string\r\n```\r\n\r\nThe method will construct the full URL for the request and will return the constructed URL as a string. If an invalid endpoint name passed to `$endpoint` an `IGDBInvalidParameterException` will be thrown.\r\n\r\n**Parameters**:\r\n - `$endpoint`: the endpoint to use (the name of the endpoint, not the path to it!). Possible values:\r\n   - age_rating\r\n   - alternative_name\r\n   - artwork\r\n   - character_mug_shot\r\n   - character\r\n   - collection\r\n   - company_logo\r\n   - company_website\r\n   - company\r\n   - cover\r\n   - external_game\r\n   - franchise\r\n   - game_engine_logo\r\n   - game_engine\r\n   - game_mode\r\n   - game_version_feature_value\r\n   - game_version_feature\r\n   - game_version\r\n   - game_video\r\n   - game\r\n   - genre\r\n   - involved_company\r\n   - keyword\r\n   - multiplayer_mode\r\n   - multiquery\r\n   - platform_family\r\n   - platform_logo\r\n   - platform_version_company\r\n   - platform_version_release_date\r\n   - platform_version\r\n   - platform_website\r\n   - platform\r\n   - player_perspective\r\n   - release_date\r\n   - screenshot\r\n   - search\r\n   - theme\r\n   - website\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: the full constructed URL to the IGDB Endpoint as a string.\r\n\r\n```php\r\n<?php\r\n\r\n    // instantiating the wrapper\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n    try {\r\n        // constructing an url\r\n        $url = $igdb->construct_url(\"game\");\r\n\r\n        // constructing an url to get counts\r\n        $count_url = $igdb->construct_url(\"game\", true);\r\n\r\n        // showing the results\r\n        echo \"url: \" . $url;\r\n        echo \"count url: \" . $count_url;\r\n    } catch (IGDBInvalidParameterException $e) {\r\n        // an invalid parameter passed to the construct_url method\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\r\n```\r\n\r\nOutput:\r\n\r\n```text\r\nurl: https://api.igdb.com/v4/games\r\ncount url: https://api.igdb.com/v4/games/count\r\n```","html":"<pre><code class=\"language-php\">public function construct_url(string $endpoint, boolean $count = false) throws IGDBInvalidParameterException: string\n</code></pre>\n<p>The method will construct the full URL for the request and will return the constructed URL as a string. If an invalid endpoint name passed to <code>$endpoint</code> an <code>IGDBInvalidParameterException</code> will be thrown.</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$endpoint</code>: the endpoint to use (the name of the endpoint, not the path to it!). Possible values:\n<ul>\n<li>age_rating</li>\n<li>alternative_name</li>\n<li>artwork</li>\n<li>character_mug_shot</li>\n<li>character</li>\n<li>collection</li>\n<li>company_logo</li>\n<li>company_website</li>\n<li>company</li>\n<li>cover</li>\n<li>external_game</li>\n<li>franchise</li>\n<li>game_engine_logo</li>\n<li>game_engine</li>\n<li>game_mode</li>\n<li>game_version_feature_value</li>\n<li>game_version_feature</li>\n<li>game_version</li>\n<li>game_video</li>\n<li>game</li>\n<li>genre</li>\n<li>involved_company</li>\n<li>keyword</li>\n<li>multiplayer_mode</li>\n<li>multiquery</li>\n<li>platform_family</li>\n<li>platform_logo</li>\n<li>platform_version_company</li>\n<li>platform_version_release_date</li>\n<li>platform_version</li>\n<li>platform_website</li>\n<li>platform</li>\n<li>player_perspective</li>\n<li>release_date</li>\n<li>screenshot</li>\n<li>search</li>\n<li>theme</li>\n<li>website</li>\n</ul>\n</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: the full constructed URL to the IGDB Endpoint as a string.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // instantiating the wrapper\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n    try {\r\n        // constructing an url\r\n        $url = $igdb->construct_url(\"game\");\r\n\r\n        // constructing an url to get counts\r\n        $count_url = $igdb->construct_url(\"game\", true);\r\n\r\n        // showing the results\r\n        echo \"url: \" . $url;\r\n        echo \"count url: \" . $count_url;\r\n    } catch (IGDBInvalidParameterException $e) {\r\n        // an invalid parameter passed to the construct_url method\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\n</code></pre>\n<p>Output:</p>\n<pre><code class=\"language-text\">url: https://api.igdb.com/v4/games\r\ncount url: https://api.igdb.com/v4/games/count\n</code></pre>"},"meta":{"revision":0,"created":1669928307763,"version":0},"$loki":34},{"id":"b85ea71fd","slug":"close-curl-session","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","7e40b0d15"],"title":"Close CURL Session","date":null,"timestamp":null,"body":{"stripped":"You can close the CURL session handler manually if you need to.\n\nParameters: -\n\nReturns: -\n\nThe curl handler will be reinitialized automatically when a new request is sent to the IGDB API with any of the endpoint methods.","markdown":"```php\r\npublic function curl_close(): void\r\n```\r\n\r\nYou can close the CURL session handler manually if you need to.\r\n\r\n**Parameters**: -\r\n\r\n**Returns**: -\r\n\r\n> The curl handler will be [reinitialized](#reinitialize-curl-session) automatically when a new request is sent to the IGDB API with any of the endpoint methods.","html":"<pre><code class=\"language-php\">public function curl_close(): void\n</code></pre>\n<p>You can close the CURL session handler manually if you need to.</p>\n<p><strong>Parameters</strong>: -</p>\n<p><strong>Returns</strong>: -</p>\n<blockquote>\n<p>The curl handler will be <a href=\"#reinitialize-curl-session\">reinitialized</a> automatically when a new request is sent to the IGDB API with any of the endpoint methods.</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307763,"version":0},"$loki":35},{"id":"cf58ab3f1","slug":"reinitialize-curl-session","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","7e40b0d15"],"title":"Reinitialize CURL Session","date":null,"timestamp":null,"body":{"stripped":"After you closed the CURL session manually with curl_close() you can manually reinitialize the curl handler.\n\nParameters: -\n\nReturns: -\n\nBefore sending a request with an endpoint method, the wrapper will check the status of the curl handler. If it is closed, it will reinitialize it automatically.","markdown":"```php\r\npublic function curl_reinit() : void\r\n```\r\n\r\nAfter you closed the CURL session manually with [curl_close()](#close-curl-session) you can manually reinitialize the curl handler.\r\n\r\n**Parameters**: -\r\n\r\n**Returns**: -\r\n\r\n> Before sending a request with an endpoint method, the wrapper will check the status of the curl handler. If it is closed, it will reinitialize it automatically.","html":"<pre><code class=\"language-php\">public function curl_reinit() : void\n</code></pre>\n<p>After you closed the CURL session manually with <a href=\"#close-curl-session\">curl_close()</a> you can manually reinitialize the curl handler.</p>\n<p><strong>Parameters</strong>: -</p>\n<p><strong>Returns</strong>: -</p>\n<blockquote>\n<p>Before sending a request with an endpoint method, the wrapper will check the status of the curl handler. If it is closed, it will reinitialize it automatically.</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307763,"version":0},"$loki":36},{"id":"26ffa7f7e","slug":"handling-request-errors","level":2,"parent":"cbf8ecb78","parents":["cbf8ecb78"],"title":"Handling Request Errors","date":null,"timestamp":null,"body":{"stripped":"Your query may fail on the IGDB side. In this case the API will send back a non-successful response code indicating that something went wrong. When this happens an IGDBEndpointException can be caught to extract information about the issue. To catch these errors you have to enclose your endpoint method calls in a try...catch block.\n\n\n\nSince the query above is not valid, as there is no field called nonexistingfield on the game endpoint, the API will send a response with an error message and a non-successful response code. The result of the script above is:\n\n\n\nYou can also get some additional information about this request using the get_request_info() method.","markdown":"Your query may fail on the IGDB side. In this case the API will send back a non-successful response code indicating that something went wrong. When this happens an `IGDBEndpointException` can be caught to extract information about the issue. To catch these errors you have to enclose your [endpoint](#endpoints) method calls in a try...catch block.\r\n\r\n```php\r\n<?php\r\n\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n    // your query string with a field that doesn't exist\r\n    $query = 'search \"uncharted\"; fields nonexistingfield;';\r\n\r\n    try {\r\n        // executing the query\r\n        $games = $igdb->game($query);\r\n    } catch (IGDBEndpointException $e) {\r\n        // since the query contains a non-existing field, an error occured\r\n        // printing the response code and the error message\r\n        echo \"Response code: \" . $e->getResponseCode();\r\n        echo \"Message: \" . $e->getMessage();\r\n    }\r\n\r\n?>\r\n```\r\n\r\nSince the query above is not valid, as there is no field called `nonexistingfield` on the game endpoint, the API will send a response with an error message and a non-successful response code. The result of the script above is:\r\n\r\n```text\r\nResponse code: 400\r\nMessage: Invalid Field\r\n```\r\n\r\nYou can also get some additional information about this request using the [`get_request_info()`](#get-request-info) method.","html":"<p>Your query may fail on the IGDB side. In this case the API will send back a non-successful response code indicating that something went wrong. When this happens an <code>IGDBEndpointException</code> can be caught to extract information about the issue. To catch these errors you have to enclose your <a href=\"#endpoints\">endpoint</a> method calls in a try...catch block.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n    // your query string with a field that doesn't exist\r\n    $query = 'search \"uncharted\"; fields nonexistingfield;';\r\n\r\n    try {\r\n        // executing the query\r\n        $games = $igdb->game($query);\r\n    } catch (IGDBEndpointException $e) {\r\n        // since the query contains a non-existing field, an error occured\r\n        // printing the response code and the error message\r\n        echo \"Response code: \" . $e->getResponseCode();\r\n        echo \"Message: \" . $e->getMessage();\r\n    }\r\n\r\n?>\n</code></pre>\n<p>Since the query above is not valid, as there is no field called <code>nonexistingfield</code> on the game endpoint, the API will send a response with an error message and a non-successful response code. The result of the script above is:</p>\n<pre><code class=\"language-text\">Response code: 400\r\nMessage: Invalid Field\n</code></pre>\n<p>You can also get some additional information about this request using the <a href=\"#get-request-info\"><code>get_request_info()</code></a> method.</p>"},"meta":{"revision":0,"created":1669928307763,"version":0},"$loki":37},{"id":"39ddb466c","slug":"endpoints","level":2,"parent":"cbf8ecb78","parents":["cbf8ecb78"],"title":"Endpoints","date":null,"timestamp":null,"body":{"stripped":"Every endpoint method is named after the IGDB API endpoints using snake-casing naming convention. These methods are expecting at least one parameter, the $query itself. The second $count parameter is optional, it is false by default.\n\nParameters:\n\n$query: the query itself as an apicalypse string\n\n$count: a boolean value to whether return the records or the count of the records\n\n:tip To build your queries, give IGDB Query Builder a try!\n\nThese methods will return an array of objects decoded from IGDB response JSON when the $count parameter is false. Otherwise, it will execute a count query against the selected endpoint which will return an object with a count property holding the sum of the found items. The count queries can be filtered with where parameters.\n\nIGDBEndpointException is thrown if a non-successful response code is recieved from the IGDB API. To find out how to handle request errors, head to the Handle Request Errors section.\n\nPlease refer to the return values section for more details about the return values of these methods.","markdown":"Every endpoint method is named after the IGDB API endpoints using snake-casing naming convention. These methods are expecting at least one parameter, the `$query` itself. The second `$count` parameter is optional, it is `false` by default.\r\n\r\n**Parameters**:\r\n - `$query`: the query itself as an apicalypse string\r\n - `$count`: a `boolean` value to whether return the records or the count of the records\r\n\r\n>:tip To build your queries, give [IGDB Query Builder](#igdb-query-builder) a try!\r\n\r\nThese methods will return **an array of objects** decoded from IGDB response JSON when the `$count` parameter is false. Otherwise, it will execute a count query against the selected endpoint which will return an object with a `count` property holding the sum of the found items. The count queries can be filtered with [where](#where) parameters.\r\n\r\n`IGDBEndpointException` is thrown if a non-successful response code is recieved from the IGDB API. To find out how to handle request errors, head to the [Handle Request Errors](#handling-request-errors) section.\r\n\r\nPlease refer to the [return values section](#return-values) for more details about the return values of these methods.","html":"<p>Every endpoint method is named after the IGDB API endpoints using snake-casing naming convention. These methods are expecting at least one parameter, the <code>$query</code> itself. The second <code>$count</code> parameter is optional, it is <code>false</code> by default.</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: the query itself as an apicalypse string</li>\n<li><code>$count</code>: a <code>boolean</code> value to whether return the records or the count of the records</li>\n</ul>\n<blockquote>\n<p>:tip To build your queries, give <a href=\"#igdb-query-builder\">IGDB Query Builder</a> a try!</p>\n</blockquote>\n<p>These methods will return <strong>an array of objects</strong> decoded from IGDB response JSON when the <code>$count</code> parameter is false. Otherwise, it will execute a count query against the selected endpoint which will return an object with a <code>count</code> property holding the sum of the found items. The count queries can be filtered with <a href=\"#where\">where</a> parameters.</p>\n<p><code>IGDBEndpointException</code> is thrown if a non-successful response code is recieved from the IGDB API. To find out how to handle request errors, head to the <a href=\"#handling-request-errors\">Handle Request Errors</a> section.</p>\n<p>Please refer to the <a href=\"#return-values\">return values section</a> for more details about the return values of these methods.</p>"},"meta":{"revision":0,"created":1669928307763,"version":0},"$loki":38},{"id":"f03897b51","slug":"age-rating-content-description","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Age Rating Content Description","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Age Rating Content Description endpoint.\n\nEndpoint Description: The organisation behind a specific rating\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\ncategory (Category Enum)\n\nchecksum (uuid): Hash of the object\n\ndescription (String)\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function age_rating_content_description(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Age Rating Content Description](https://api-docs.igdb.com/#age-rating-content-description) endpoint.\r\n\r\n**Endpoint Description**: The organisation behind a specific rating\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Age Rating Content Description endpoint method\r\n    $igdb->age_rating_content_description($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `category` ([Category Enum](https://api-docs.igdb.com/#age-rating-content-description-enums))\r\n - `checksum` (uuid): Hash of the object\r\n - `description` (String)\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function age_rating_content_description(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#age-rating-content-description\" target=\"_blank\" rel=\"nofollow\">Age Rating Content Description</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: The organisation behind a specific rating</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Age Rating Content Description endpoint method\r\n    $igdb->age_rating_content_description($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>category</code> (<a href=\"https://api-docs.igdb.com/#age-rating-content-description-enums\" target=\"_blank\" rel=\"nofollow\">Category Enum</a>)</li>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>description</code> (String)</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307763,"version":0},"$loki":39},{"id":"fa75cae95","slug":"age-rating","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Age Rating","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Age Rating endpoint.\n\nEndpoint Description: Age Rating according to various rating organisations\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\ncategory (Category Enum): The organization that has issued a specific rating\n\nchecksum (uuid): Hash of the object\n\ncontent_descriptions (Reference ID for  Age Rating Content Description)\n\nrating (Rating Enum): The title of an age rating\n\nrating_cover_url (String): The url for  the image of a age rating\n\nsynopsis (String): A free text motivating a rating\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function age_rating(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Age Rating](https://api-docs.igdb.com/#age-rating) endpoint.\r\n\r\n**Endpoint Description**: Age Rating according to various rating organisations\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Age Rating endpoint method\r\n    $igdb->age_rating($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `category` ([Category Enum](https://api-docs.igdb.com/#age-rating-enums)): The organization that has issued a specific rating\r\n - `checksum` (uuid): Hash of the object\r\n - `content_descriptions` (Reference ID for [ Age Rating Content Description](https://api-docs.igdb.com/#age-rating-content-description))\r\n - `rating` ([Rating Enum](https://api-docs.igdb.com/#age-rating-enums)): The title of an age rating\r\n - `rating_cover_url` (String): The url for  the image of a age rating\r\n - `synopsis` (String): A free text motivating a rating\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function age_rating(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#age-rating\" target=\"_blank\" rel=\"nofollow\">Age Rating</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: Age Rating according to various rating organisations</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Age Rating endpoint method\r\n    $igdb->age_rating($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>category</code> (<a href=\"https://api-docs.igdb.com/#age-rating-enums\" target=\"_blank\" rel=\"nofollow\">Category Enum</a>): The organization that has issued a specific rating</li>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>content_descriptions</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#age-rating-content-description\" target=\"_blank\" rel=\"nofollow\"> Age Rating Content Description</a>)</li>\n<li><code>rating</code> (<a href=\"https://api-docs.igdb.com/#age-rating-enums\" target=\"_blank\" rel=\"nofollow\">Rating Enum</a>): The title of an age rating</li>\n<li><code>rating_cover_url</code> (String): The url for  the image of a age rating</li>\n<li><code>synopsis</code> (String): A free text motivating a rating</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307763,"version":0},"$loki":40},{"id":"025f08bd7","slug":"alternative-name","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Alternative Name","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Alternative Name endpoint.\n\nEndpoint Description: Alternative and international game titles\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nchecksum (uuid): Hash of the object\n\ncomment (String): A description of what kind of alternative name it is (Acronym, Working title, Japanese title etc)\n\ngame (Reference ID for Game): The game this alternative name is associated with\n\nname (String): An alternative name\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function alternative_name(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Alternative Name](https://api-docs.igdb.com/#alternative-name) endpoint.\r\n\r\n**Endpoint Description**: Alternative and international game titles\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Alternative Name endpoint method\r\n    $igdb->alternative_name($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `checksum` (uuid): Hash of the object\r\n - `comment` (String): A description of what kind of alternative name it is (Acronym, Working title, Japanese title etc)\r\n - `game` (Reference ID for [Game](https://api-docs.igdb.com/#game)): The game this alternative name is associated with\r\n - `name` (String): An alternative name\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function alternative_name(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#alternative-name\" target=\"_blank\" rel=\"nofollow\">Alternative Name</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: Alternative and international game titles</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Alternative Name endpoint method\r\n    $igdb->alternative_name($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>comment</code> (String): A description of what kind of alternative name it is (Acronym, Working title, Japanese title etc)</li>\n<li><code>game</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\">Game</a>): The game this alternative name is associated with</li>\n<li><code>name</code> (String): An alternative name</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307763,"version":0},"$loki":41},{"id":"c64ba844f","slug":"artwork","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Artwork","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Artwork endpoint.\n\nEndpoint Description: official artworks (resolution and aspect ratio may vary)\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nalpha_channel (boolean)\n\nanimated (boolean)\n\nchecksum (uuid): Hash of the object\n\ngame (Reference ID for Game): The game this artwork is associated with\n\nheight (Integer): The height of the image in pixels\n\nimage_id (String): The ID of the image used to construct an IGDB image link\n\nurl (String): The website address (URL) of the item\n\nwidth (Integer): The width of the image in pixels\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function artwork(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Artwork](https://api-docs.igdb.com/#artwork) endpoint.\r\n\r\n**Endpoint Description**: official artworks (resolution and aspect ratio may vary)\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Artwork endpoint method\r\n    $igdb->artwork($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `alpha_channel` (boolean)\r\n - `animated` (boolean)\r\n - `checksum` (uuid): Hash of the object\r\n - `game` (Reference ID for [Game](https://api-docs.igdb.com/#game)): The game this artwork is associated with\r\n - `height` (Integer): The height of the image in pixels\r\n - `image_id` (String): The ID of the image used to construct an IGDB image link\r\n - `url` (String): The website address (URL) of the item\r\n - `width` (Integer): The width of the image in pixels\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function artwork(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#artwork\" target=\"_blank\" rel=\"nofollow\">Artwork</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: official artworks (resolution and aspect ratio may vary)</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Artwork endpoint method\r\n    $igdb->artwork($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>alpha_channel</code> (boolean)</li>\n<li><code>animated</code> (boolean)</li>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>game</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\">Game</a>): The game this artwork is associated with</li>\n<li><code>height</code> (Integer): The height of the image in pixels</li>\n<li><code>image_id</code> (String): The ID of the image used to construct an IGDB image link</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n<li><code>width</code> (Integer): The width of the image in pixels</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307763,"version":0},"$loki":42},{"id":"189396ec0","slug":"character-mug-shot","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Character Mug Shot","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Character Mug Shot endpoint.\n\nEndpoint Description: Images depicting game characters\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nalpha_channel (boolean)\n\nanimated (boolean)\n\nchecksum (uuid): Hash of the object\n\nheight (Integer): The height of the image in pixels\n\nimage_id (String): The ID of the image used to construct an IGDB image link\n\nurl (String): The website address (URL) of the item\n\nwidth (Integer): The width of the image in pixels\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function character_mug_shot(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Character Mug Shot](https://api-docs.igdb.com/#character-mug-shot) endpoint.\r\n\r\n**Endpoint Description**: Images depicting game characters\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Character Mug Shot endpoint method\r\n    $igdb->character_mug_shot($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `alpha_channel` (boolean)\r\n - `animated` (boolean)\r\n - `checksum` (uuid): Hash of the object\r\n - `height` (Integer): The height of the image in pixels\r\n - `image_id` (String): The ID of the image used to construct an IGDB image link\r\n - `url` (String): The website address (URL) of the item\r\n - `width` (Integer): The width of the image in pixels\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function character_mug_shot(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#character-mug-shot\" target=\"_blank\" rel=\"nofollow\">Character Mug Shot</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: Images depicting game characters</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Character Mug Shot endpoint method\r\n    $igdb->character_mug_shot($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>alpha_channel</code> (boolean)</li>\n<li><code>animated</code> (boolean)</li>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>height</code> (Integer): The height of the image in pixels</li>\n<li><code>image_id</code> (String): The ID of the image used to construct an IGDB image link</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n<li><code>width</code> (Integer): The width of the image in pixels</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307763,"version":0},"$loki":43},{"id":"b216c3894","slug":"character","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Character","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Character endpoint.\n\nEndpoint Description: Video game characters\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nakas (Array of Strings): Alternative names for a character\n\nchecksum (uuid): Hash of the object\n\ncountry_name (String): A characters country of origin\n\ncreated_at (Unix Time Stamp): Date this was initially added to the IGDB database\n\ndescription (String): A text describing a character\n\ngames (Array of Game IDs)\n\ngender (Gender Enum)\n\nmug_shot (Reference ID for  Character Mug Shot): An image depicting a character\n\nname (String)\n\nslug (String): A url-safe, unique, lower-case version of the name\n\nspecies (Species Enum)\n\nupdated_at (Unix Time Stamp): The last date this entry was updated in the IGDB database\n\nurl (String): The website address (URL) of the item\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function character(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Character](https://api-docs.igdb.com/#character) endpoint.\r\n\r\n**Endpoint Description**: Video game characters\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Character endpoint method\r\n    $igdb->character($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `akas` (Array of Strings): Alternative names for a character\r\n - `checksum` (uuid): Hash of the object\r\n - `country_name` (String): A characters country of origin\r\n - `created_at` (Unix Time Stamp): Date this was initially added to the IGDB database\r\n - `description` (String): A text describing a character\r\n - `games` (Array of [Game](https://api-docs.igdb.com/#game) IDs)\r\n - `gender` ([Gender Enum](https://api-docs.igdb.com/#character-enums))\r\n - `mug_shot` (Reference ID for [ Character Mug Shot](https://api-docs.igdb.com/#character-mug-shot)): An image depicting a character\r\n - `name` (String)\r\n - `slug` (String): A url-safe, unique, lower-case version of the name\r\n - `species` ([Species Enum](https://api-docs.igdb.com/#character-enums))\r\n - `updated_at` (Unix Time Stamp): The last date this entry was updated in the IGDB database\r\n - `url` (String): The website address (URL) of the item\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function character(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#character\" target=\"_blank\" rel=\"nofollow\">Character</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: Video game characters</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Character endpoint method\r\n    $igdb->character($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>akas</code> (Array of Strings): Alternative names for a character</li>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>country_name</code> (String): A characters country of origin</li>\n<li><code>created_at</code> (Unix Time Stamp): Date this was initially added to the IGDB database</li>\n<li><code>description</code> (String): A text describing a character</li>\n<li><code>games</code> (Array of <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\">Game</a> IDs)</li>\n<li><code>gender</code> (<a href=\"https://api-docs.igdb.com/#character-enums\" target=\"_blank\" rel=\"nofollow\">Gender Enum</a>)</li>\n<li><code>mug_shot</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#character-mug-shot\" target=\"_blank\" rel=\"nofollow\"> Character Mug Shot</a>): An image depicting a character</li>\n<li><code>name</code> (String)</li>\n<li><code>slug</code> (String): A url-safe, unique, lower-case version of the name</li>\n<li><code>species</code> (<a href=\"https://api-docs.igdb.com/#character-enums\" target=\"_blank\" rel=\"nofollow\">Species Enum</a>)</li>\n<li><code>updated_at</code> (Unix Time Stamp): The last date this entry was updated in the IGDB database</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307763,"version":0},"$loki":44},{"id":"628aaf30c","slug":"collection","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Collection","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Collection endpoint.\n\nEndpoint Description: Collection, AKA Series\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nchecksum (uuid): Hash of the object\n\ncreated_at (Unix Time Stamp): Date this was initially added to the IGDB database\n\ngames (Array of Game IDs): The games that are associated with this collection\n\nname (String): Umbrella term for a collection of games\n\nslug (String): A url-safe, unique, lower-case version of the name\n\nupdated_at (Unix Time Stamp): The last date this entry was updated in the IGDB database\n\nurl (String): The website address (URL) of the item\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function collection(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Collection](https://api-docs.igdb.com/#collection) endpoint.\r\n\r\n**Endpoint Description**: Collection, AKA Series\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Collection endpoint method\r\n    $igdb->collection($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `checksum` (uuid): Hash of the object\r\n - `created_at` (Unix Time Stamp): Date this was initially added to the IGDB database\r\n - `games` (Array of [Game](https://api-docs.igdb.com/#game) IDs): The games that are associated with this collection\r\n - `name` (String): Umbrella term for a collection of games\r\n - `slug` (String): A url-safe, unique, lower-case version of the name\r\n - `updated_at` (Unix Time Stamp): The last date this entry was updated in the IGDB database\r\n - `url` (String): The website address (URL) of the item\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function collection(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#collection\" target=\"_blank\" rel=\"nofollow\">Collection</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: Collection, AKA Series</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Collection endpoint method\r\n    $igdb->collection($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>created_at</code> (Unix Time Stamp): Date this was initially added to the IGDB database</li>\n<li><code>games</code> (Array of <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\">Game</a> IDs): The games that are associated with this collection</li>\n<li><code>name</code> (String): Umbrella term for a collection of games</li>\n<li><code>slug</code> (String): A url-safe, unique, lower-case version of the name</li>\n<li><code>updated_at</code> (Unix Time Stamp): The last date this entry was updated in the IGDB database</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307764,"version":0},"$loki":45},{"id":"2c4aa3ef6","slug":"company-logo","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Company Logo","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Company Logo endpoint.\n\nEndpoint Description: The logos of developers and publishers\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nalpha_channel (boolean)\n\nanimated (boolean)\n\nchecksum (uuid): Hash of the object\n\nheight (Integer): The height of the image in pixels\n\nimage_id (String): The ID of the image used to construct an IGDB image link\n\nurl (String): The website address (URL) of the item\n\nwidth (Integer): The width of the image in pixels\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function company_logo(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Company Logo](https://api-docs.igdb.com/#company-logo) endpoint.\r\n\r\n**Endpoint Description**: The logos of developers and publishers\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Company Logo endpoint method\r\n    $igdb->company_logo($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `alpha_channel` (boolean)\r\n - `animated` (boolean)\r\n - `checksum` (uuid): Hash of the object\r\n - `height` (Integer): The height of the image in pixels\r\n - `image_id` (String): The ID of the image used to construct an IGDB image link\r\n - `url` (String): The website address (URL) of the item\r\n - `width` (Integer): The width of the image in pixels\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function company_logo(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#company-logo\" target=\"_blank\" rel=\"nofollow\">Company Logo</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: The logos of developers and publishers</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Company Logo endpoint method\r\n    $igdb->company_logo($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>alpha_channel</code> (boolean)</li>\n<li><code>animated</code> (boolean)</li>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>height</code> (Integer): The height of the image in pixels</li>\n<li><code>image_id</code> (String): The ID of the image used to construct an IGDB image link</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n<li><code>width</code> (Integer): The width of the image in pixels</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307764,"version":0},"$loki":46},{"id":"2fdeb4da1","slug":"company-website","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Company Website","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Company Website endpoint.\n\nEndpoint Description: Company Website\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\ncategory (Category Enum): The service this website links to\n\nchecksum (uuid): Hash of the object\n\ntrusted (boolean)\n\nurl (String): The website address (URL) of the item\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function company_website(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Company Website](https://api-docs.igdb.com/#company-website) endpoint.\r\n\r\n**Endpoint Description**: Company Website\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Company Website endpoint method\r\n    $igdb->company_website($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `category` ([Category Enum](https://api-docs.igdb.com/#company-website-enums)): The service this website links to\r\n - `checksum` (uuid): Hash of the object\r\n - `trusted` (boolean)\r\n - `url` (String): The website address (URL) of the item\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function company_website(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#company-website\" target=\"_blank\" rel=\"nofollow\">Company Website</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: Company Website</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Company Website endpoint method\r\n    $igdb->company_website($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>category</code> (<a href=\"https://api-docs.igdb.com/#company-website-enums\" target=\"_blank\" rel=\"nofollow\">Category Enum</a>): The service this website links to</li>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>trusted</code> (boolean)</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307764,"version":0},"$loki":47},{"id":"9daa061a7","slug":"company","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Company","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Company endpoint.\n\nEndpoint Description: Video game companies. Both publishers \\&amp; developers\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nchange_date (Unix Time Stamp): The data when a company got a new ID\n\nchange_date_category (Change Date Category Enum)\n\nchanged_company_id (Reference ID for  Company): The new ID for a company that has gone through a merger or restructuring\n\nchecksum (uuid): Hash of the object\n\ncountry (Integer): ISO 3166-1 country code\n\ncreated_at (Unix Time Stamp): Date this was initially added to the IGDB database\n\ndescription (String): A free text description of a company\n\ndeveloped (Reference ID for  Game): An array of games that a company has developed\n\nlogo (Reference ID for  Company Logo): The company\\&rsquo;s logo\n\nname (String)\n\nparent (Reference ID for  Company): A company with a controlling interest in a specific company\n\npublished (Reference ID for  Game): An array of games that a company has published\n\nslug (String): A url-safe, unique, lower-case version of the name\n\nstart_date (Unix Time Stamp): The date a company was founded\n\nstart_date_category (Start Date Category Enum)\n\nupdated_at (Unix Time Stamp): The last date this entry was updated in the IGDB database\n\nurl (String): The website address (URL) of the item\n\nwebsites (Reference ID for  Company Website): The companies official websites\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function company(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Company](https://api-docs.igdb.com/#company) endpoint.\r\n\r\n**Endpoint Description**: Video game companies. Both publishers &amp;amp; developers\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Company endpoint method\r\n    $igdb->company($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `change_date` (Unix Time Stamp): The data when a company got a new ID\r\n - `change_date_category` ([Change Date Category Enum](https://api-docs.igdb.com/#company-enums))\r\n - `changed_company_id` (Reference ID for [ Company](https://api-docs.igdb.com/#company)): The new ID for a company that has gone through a merger or restructuring\r\n - `checksum` (uuid): Hash of the object\r\n - `country` (Integer): ISO 3166-1 country code\r\n - `created_at` (Unix Time Stamp): Date this was initially added to the IGDB database\r\n - `description` (String): A free text description of a company\r\n - `developed` (Reference ID for [ Game](https://api-docs.igdb.com/#game)): An array of games that a company has developed\r\n - `logo` (Reference ID for [ Company Logo](https://api-docs.igdb.com/#company-logo)): The company&amp;rsquo;s logo\r\n - `name` (String)\r\n - `parent` (Reference ID for [ Company](https://api-docs.igdb.com/#company)): A company with a controlling interest in a specific company\r\n - `published` (Reference ID for [ Game](https://api-docs.igdb.com/#game)): An array of games that a company has published\r\n - `slug` (String): A url-safe, unique, lower-case version of the name\r\n - `start_date` (Unix Time Stamp): The date a company was founded\r\n - `start_date_category` ([Start Date Category Enum](https://api-docs.igdb.com/#company-enums))\r\n - `updated_at` (Unix Time Stamp): The last date this entry was updated in the IGDB database\r\n - `url` (String): The website address (URL) of the item\r\n - `websites` (Reference ID for [ Company Website](https://api-docs.igdb.com/#company-website)): The companies official websites\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function company(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#company\" target=\"_blank\" rel=\"nofollow\">Company</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: Video game companies. Both publishers &#x26;amp; developers</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Company endpoint method\r\n    $igdb->company($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>change_date</code> (Unix Time Stamp): The data when a company got a new ID</li>\n<li><code>change_date_category</code> (<a href=\"https://api-docs.igdb.com/#company-enums\" target=\"_blank\" rel=\"nofollow\">Change Date Category Enum</a>)</li>\n<li><code>changed_company_id</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#company\" target=\"_blank\" rel=\"nofollow\"> Company</a>): The new ID for a company that has gone through a merger or restructuring</li>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>country</code> (Integer): ISO 3166-1 country code</li>\n<li><code>created_at</code> (Unix Time Stamp): Date this was initially added to the IGDB database</li>\n<li><code>description</code> (String): A free text description of a company</li>\n<li><code>developed</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\"> Game</a>): An array of games that a company has developed</li>\n<li><code>logo</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#company-logo\" target=\"_blank\" rel=\"nofollow\"> Company Logo</a>): The company&#x26;rsquo;s logo</li>\n<li><code>name</code> (String)</li>\n<li><code>parent</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#company\" target=\"_blank\" rel=\"nofollow\"> Company</a>): A company with a controlling interest in a specific company</li>\n<li><code>published</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\"> Game</a>): An array of games that a company has published</li>\n<li><code>slug</code> (String): A url-safe, unique, lower-case version of the name</li>\n<li><code>start_date</code> (Unix Time Stamp): The date a company was founded</li>\n<li><code>start_date_category</code> (<a href=\"https://api-docs.igdb.com/#company-enums\" target=\"_blank\" rel=\"nofollow\">Start Date Category Enum</a>)</li>\n<li><code>updated_at</code> (Unix Time Stamp): The last date this entry was updated in the IGDB database</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n<li><code>websites</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#company-website\" target=\"_blank\" rel=\"nofollow\"> Company Website</a>): The companies official websites</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307764,"version":0},"$loki":48},{"id":"ca887de01","slug":"cover","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Cover","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Cover endpoint.\n\nEndpoint Description: The cover art of games\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nalpha_channel (boolean)\n\nanimated (boolean)\n\nchecksum (uuid): Hash of the object\n\ngame (Reference ID for Game): The game this cover is associated with\n\nheight (Integer): The height of the image in pixels\n\nimage_id (String): The ID of the image used to construct an IGDB image link\n\nurl (String): The website address (URL) of the item\n\nwidth (Integer): The width of the image in pixels\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function cover(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Cover](https://api-docs.igdb.com/#cover) endpoint.\r\n\r\n**Endpoint Description**: The cover art of games\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Cover endpoint method\r\n    $igdb->cover($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `alpha_channel` (boolean)\r\n - `animated` (boolean)\r\n - `checksum` (uuid): Hash of the object\r\n - `game` (Reference ID for [Game](https://api-docs.igdb.com/#game)): The game this cover is associated with\r\n - `height` (Integer): The height of the image in pixels\r\n - `image_id` (String): The ID of the image used to construct an IGDB image link\r\n - `url` (String): The website address (URL) of the item\r\n - `width` (Integer): The width of the image in pixels\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function cover(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#cover\" target=\"_blank\" rel=\"nofollow\">Cover</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: The cover art of games</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Cover endpoint method\r\n    $igdb->cover($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>alpha_channel</code> (boolean)</li>\n<li><code>animated</code> (boolean)</li>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>game</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\">Game</a>): The game this cover is associated with</li>\n<li><code>height</code> (Integer): The height of the image in pixels</li>\n<li><code>image_id</code> (String): The ID of the image used to construct an IGDB image link</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n<li><code>width</code> (Integer): The width of the image in pixels</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307764,"version":0},"$loki":49},{"id":"ee825c247","slug":"external-game","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"External Game","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the External Game endpoint.\n\nEndpoint Description: Game IDs on other services\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\ncategory (Category Enum): The id of the other service\n\nchecksum (uuid): Hash of the object\n\ncountries (Array of Integers): The ISO country code of the external game product.\n\ncreated_at (Unix Time Stamp): Date this was initially added to the IGDB database\n\ngame (Reference ID for Game): The IGDB ID of the game\n\nmedia (Media Enum): The media of the external game.\n\nname (String): The name of the game according to the other service\n\nplatform (Reference ID for Platform): The platform of the external game product.\n\nuid (String): The other services ID for this game\n\nupdated_at (Unix Time Stamp): The last date this entry was updated in the IGDB database\n\nurl (String): The website address (URL) of the item\n\nyear (Integer): The year in full (2018)\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function external_game(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [External Game](https://api-docs.igdb.com/#external-game) endpoint.\r\n\r\n**Endpoint Description**: Game IDs on other services\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // External Game endpoint method\r\n    $igdb->external_game($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `category` ([Category Enum](https://api-docs.igdb.com/#external-game-enums)): The id of the other service\r\n - `checksum` (uuid): Hash of the object\r\n - `countries` (Array of Integers): The ISO country code of the external game product.\r\n - `created_at` (Unix Time Stamp): Date this was initially added to the IGDB database\r\n - `game` (Reference ID for [Game](https://api-docs.igdb.com/#game)): The IGDB ID of the game\r\n - `media` ([Media Enum](https://api-docs.igdb.com/#external-game-enums)): The media of the external game.\r\n - `name` (String): The name of the game according to the other service\r\n - `platform` (Reference ID for [Platform](https://api-docs.igdb.com/#platform)): The platform of the external game product.\r\n - `uid` (String): The other services ID for this game\r\n - `updated_at` (Unix Time Stamp): The last date this entry was updated in the IGDB database\r\n - `url` (String): The website address (URL) of the item\r\n - `year` (Integer): The year in full (2018)\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function external_game(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#external-game\" target=\"_blank\" rel=\"nofollow\">External Game</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: Game IDs on other services</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // External Game endpoint method\r\n    $igdb->external_game($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>category</code> (<a href=\"https://api-docs.igdb.com/#external-game-enums\" target=\"_blank\" rel=\"nofollow\">Category Enum</a>): The id of the other service</li>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>countries</code> (Array of Integers): The ISO country code of the external game product.</li>\n<li><code>created_at</code> (Unix Time Stamp): Date this was initially added to the IGDB database</li>\n<li><code>game</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\">Game</a>): The IGDB ID of the game</li>\n<li><code>media</code> (<a href=\"https://api-docs.igdb.com/#external-game-enums\" target=\"_blank\" rel=\"nofollow\">Media Enum</a>): The media of the external game.</li>\n<li><code>name</code> (String): The name of the game according to the other service</li>\n<li><code>platform</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#platform\" target=\"_blank\" rel=\"nofollow\">Platform</a>): The platform of the external game product.</li>\n<li><code>uid</code> (String): The other services ID for this game</li>\n<li><code>updated_at</code> (Unix Time Stamp): The last date this entry was updated in the IGDB database</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n<li><code>year</code> (Integer): The year in full (2018)</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307764,"version":0},"$loki":50},{"id":"bff6e3096","slug":"franchise","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Franchise","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Franchise endpoint.\n\nEndpoint Description: A list of video game franchises such as Star Wars.\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nchecksum (uuid): Hash of the object\n\ncreated_at (Unix Time Stamp): Date this was initially added to the IGDB database\n\ngames (Array of Game IDs): The games that are associated with this franchise\n\nname (String): The name of the franchise\n\nslug (String): A url-safe, unique, lower-case version of the name\n\nupdated_at (Unix Time Stamp): The last date this entry was updated in the IGDB database\n\nurl (String): The website address (URL) of the item\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function franchise(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Franchise](https://api-docs.igdb.com/#franchise) endpoint.\r\n\r\n**Endpoint Description**: A list of video game franchises such as Star Wars.\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Franchise endpoint method\r\n    $igdb->franchise($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `checksum` (uuid): Hash of the object\r\n - `created_at` (Unix Time Stamp): Date this was initially added to the IGDB database\r\n - `games` (Array of [Game](https://api-docs.igdb.com/#game) IDs): The games that are associated with this franchise\r\n - `name` (String): The name of the franchise\r\n - `slug` (String): A url-safe, unique, lower-case version of the name\r\n - `updated_at` (Unix Time Stamp): The last date this entry was updated in the IGDB database\r\n - `url` (String): The website address (URL) of the item\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function franchise(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#franchise\" target=\"_blank\" rel=\"nofollow\">Franchise</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: A list of video game franchises such as Star Wars.</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Franchise endpoint method\r\n    $igdb->franchise($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>created_at</code> (Unix Time Stamp): Date this was initially added to the IGDB database</li>\n<li><code>games</code> (Array of <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\">Game</a> IDs): The games that are associated with this franchise</li>\n<li><code>name</code> (String): The name of the franchise</li>\n<li><code>slug</code> (String): A url-safe, unique, lower-case version of the name</li>\n<li><code>updated_at</code> (Unix Time Stamp): The last date this entry was updated in the IGDB database</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307764,"version":0},"$loki":51},{"id":"388aa0d96","slug":"game-engine-logo","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Game Engine Logo","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Game Engine Logo endpoint.\n\nEndpoint Description: The logos of game engines\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nalpha_channel (boolean)\n\nanimated (boolean)\n\nchecksum (uuid): Hash of the object\n\nheight (Integer): The height of the image in pixels\n\nimage_id (String): The ID of the image used to construct an IGDB image link\n\nurl (String): The website address (URL) of the item\n\nwidth (Integer): The width of the image in pixels\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function game_engine_logo(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Game Engine Logo](https://api-docs.igdb.com/#game-engine-logo) endpoint.\r\n\r\n**Endpoint Description**: The logos of game engines\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Game Engine Logo endpoint method\r\n    $igdb->game_engine_logo($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `alpha_channel` (boolean)\r\n - `animated` (boolean)\r\n - `checksum` (uuid): Hash of the object\r\n - `height` (Integer): The height of the image in pixels\r\n - `image_id` (String): The ID of the image used to construct an IGDB image link\r\n - `url` (String): The website address (URL) of the item\r\n - `width` (Integer): The width of the image in pixels\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function game_engine_logo(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#game-engine-logo\" target=\"_blank\" rel=\"nofollow\">Game Engine Logo</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: The logos of game engines</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Game Engine Logo endpoint method\r\n    $igdb->game_engine_logo($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>alpha_channel</code> (boolean)</li>\n<li><code>animated</code> (boolean)</li>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>height</code> (Integer): The height of the image in pixels</li>\n<li><code>image_id</code> (String): The ID of the image used to construct an IGDB image link</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n<li><code>width</code> (Integer): The width of the image in pixels</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307764,"version":0},"$loki":52},{"id":"e6f2bae0a","slug":"game-engine","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Game Engine","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Game Engine endpoint.\n\nEndpoint Description: Video game engines such as unreal engine.\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nchecksum (uuid): Hash of the object\n\ncompanies (Array of Company IDs): Companies who used this game engine\n\ncreated_at (Unix Time Stamp): Date this was initially added to the IGDB database\n\ndescription (String): Description of the game engine\n\nlogo (Reference ID for  Game Engine Logo): Logo of the game engine\n\nname (String): Name of the game engine\n\nplatforms (Array of Platform IDs): Platforms this game engine was deployed on\n\nslug (String): A url-safe, unique, lower-case version of the name\n\nupdated_at (Unix Time Stamp): The last date this entry was updated in the IGDB database\n\nurl (String): The website address (URL) of the item\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function game_engine(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Game Engine](https://api-docs.igdb.com/#game-engine) endpoint.\r\n\r\n**Endpoint Description**: Video game engines such as unreal engine.\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Game Engine endpoint method\r\n    $igdb->game_engine($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `checksum` (uuid): Hash of the object\r\n - `companies` (Array of [Company](https://api-docs.igdb.com/#company) IDs): Companies who used this game engine\r\n - `created_at` (Unix Time Stamp): Date this was initially added to the IGDB database\r\n - `description` (String): Description of the game engine\r\n - `logo` (Reference ID for [ Game Engine Logo](https://api-docs.igdb.com/#game-engine-logo)): Logo of the game engine\r\n - `name` (String): Name of the game engine\r\n - `platforms` (Array of [Platform](https://api-docs.igdb.com/#platform) IDs): Platforms this game engine was deployed on\r\n - `slug` (String): A url-safe, unique, lower-case version of the name\r\n - `updated_at` (Unix Time Stamp): The last date this entry was updated in the IGDB database\r\n - `url` (String): The website address (URL) of the item\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function game_engine(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#game-engine\" target=\"_blank\" rel=\"nofollow\">Game Engine</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: Video game engines such as unreal engine.</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Game Engine endpoint method\r\n    $igdb->game_engine($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>companies</code> (Array of <a href=\"https://api-docs.igdb.com/#company\" target=\"_blank\" rel=\"nofollow\">Company</a> IDs): Companies who used this game engine</li>\n<li><code>created_at</code> (Unix Time Stamp): Date this was initially added to the IGDB database</li>\n<li><code>description</code> (String): Description of the game engine</li>\n<li><code>logo</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game-engine-logo\" target=\"_blank\" rel=\"nofollow\"> Game Engine Logo</a>): Logo of the game engine</li>\n<li><code>name</code> (String): Name of the game engine</li>\n<li><code>platforms</code> (Array of <a href=\"https://api-docs.igdb.com/#platform\" target=\"_blank\" rel=\"nofollow\">Platform</a> IDs): Platforms this game engine was deployed on</li>\n<li><code>slug</code> (String): A url-safe, unique, lower-case version of the name</li>\n<li><code>updated_at</code> (Unix Time Stamp): The last date this entry was updated in the IGDB database</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307764,"version":0},"$loki":53},{"id":"59a7ea187","slug":"game-mode","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Game Mode","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Game Mode endpoint.\n\nEndpoint Description: Single player, Multiplayer etc\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nchecksum (uuid): Hash of the object\n\ncreated_at (Unix Time Stamp): Date this was initially added to the IGDB database\n\nname (String): The name of the game mode\n\nslug (String): A url-safe, unique, lower-case version of the name\n\nupdated_at (Unix Time Stamp): The last date this entry was updated in the IGDB database\n\nurl (String): The website address (URL) of the item\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function game_mode(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Game Mode](https://api-docs.igdb.com/#game-mode) endpoint.\r\n\r\n**Endpoint Description**: Single player, Multiplayer etc\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Game Mode endpoint method\r\n    $igdb->game_mode($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `checksum` (uuid): Hash of the object\r\n - `created_at` (Unix Time Stamp): Date this was initially added to the IGDB database\r\n - `name` (String): The name of the game mode\r\n - `slug` (String): A url-safe, unique, lower-case version of the name\r\n - `updated_at` (Unix Time Stamp): The last date this entry was updated in the IGDB database\r\n - `url` (String): The website address (URL) of the item\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function game_mode(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#game-mode\" target=\"_blank\" rel=\"nofollow\">Game Mode</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: Single player, Multiplayer etc</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Game Mode endpoint method\r\n    $igdb->game_mode($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>created_at</code> (Unix Time Stamp): Date this was initially added to the IGDB database</li>\n<li><code>name</code> (String): The name of the game mode</li>\n<li><code>slug</code> (String): A url-safe, unique, lower-case version of the name</li>\n<li><code>updated_at</code> (Unix Time Stamp): The last date this entry was updated in the IGDB database</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307764,"version":0},"$loki":54},{"id":"e09715b0c","slug":"game-version-feature-value","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Game Version Feature Value","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Game Version Feature Value endpoint.\n\nEndpoint Description: The bool/text value of the feature\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nchecksum (uuid): Hash of the object\n\ngame (Reference ID for Game): The version/edition this value refers to\n\ngame_feature (Reference ID for  Game Version Feature): The id of the game feature\n\nincluded_feature (Included Feature Enum): The boole value of this feature\n\nnote (String): The text value of this feature\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function game_version_feature_value(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Game Version Feature Value](https://api-docs.igdb.com/#game-version-feature-value) endpoint.\r\n\r\n**Endpoint Description**: The bool&#x2F;text value of the feature\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Game Version Feature Value endpoint method\r\n    $igdb->game_version_feature_value($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `checksum` (uuid): Hash of the object\r\n - `game` (Reference ID for [Game](https://api-docs.igdb.com/#game)): The version&#x2F;edition this value refers to\r\n - `game_feature` (Reference ID for [ Game Version Feature](https://api-docs.igdb.com/#game-version-feature)): The id of the game feature\r\n - `included_feature` ([Included Feature Enum](https://api-docs.igdb.com/#game-version-feature-value-enums)): The boole value of this feature\r\n - `note` (String): The text value of this feature\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function game_version_feature_value(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#game-version-feature-value\" target=\"_blank\" rel=\"nofollow\">Game Version Feature Value</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: The bool/text value of the feature</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Game Version Feature Value endpoint method\r\n    $igdb->game_version_feature_value($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>game</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\">Game</a>): The version/edition this value refers to</li>\n<li><code>game_feature</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game-version-feature\" target=\"_blank\" rel=\"nofollow\"> Game Version Feature</a>): The id of the game feature</li>\n<li><code>included_feature</code> (<a href=\"https://api-docs.igdb.com/#game-version-feature-value-enums\" target=\"_blank\" rel=\"nofollow\">Included Feature Enum</a>): The boole value of this feature</li>\n<li><code>note</code> (String): The text value of this feature</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307764,"version":0},"$loki":55},{"id":"4fcd96e5f","slug":"game-version-feature","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Game Version Feature","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Game Version Feature endpoint.\n\nEndpoint Description: Features and descriptions of what makes each version/edition different from the main game\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\ncategory (Category Enum): The category of the feature description\n\nchecksum (uuid): Hash of the object\n\ndescription (String): The description of the feature\n\nposition (Integer): Position of this feature in the list of features\n\ntitle (String): The title of the feature\n\nvalues (Reference ID for  Game Version Feature Value): The bool/text value of the feature\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function game_version_feature(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Game Version Feature](https://api-docs.igdb.com/#game-version-feature) endpoint.\r\n\r\n**Endpoint Description**: Features and descriptions of what makes each version&#x2F;edition different from the main game\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Game Version Feature endpoint method\r\n    $igdb->game_version_feature($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `category` ([Category Enum](https://api-docs.igdb.com/#game-version-feature-enums)): The category of the feature description\r\n - `checksum` (uuid): Hash of the object\r\n - `description` (String): The description of the feature\r\n - `position` (Integer): Position of this feature in the list of features\r\n - `title` (String): The title of the feature\r\n - `values` (Reference ID for [ Game Version Feature Value](https://api-docs.igdb.com/#game-version-feature-value)): The bool&#x2F;text value of the feature\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function game_version_feature(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#game-version-feature\" target=\"_blank\" rel=\"nofollow\">Game Version Feature</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: Features and descriptions of what makes each version/edition different from the main game</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Game Version Feature endpoint method\r\n    $igdb->game_version_feature($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>category</code> (<a href=\"https://api-docs.igdb.com/#game-version-feature-enums\" target=\"_blank\" rel=\"nofollow\">Category Enum</a>): The category of the feature description</li>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>description</code> (String): The description of the feature</li>\n<li><code>position</code> (Integer): Position of this feature in the list of features</li>\n<li><code>title</code> (String): The title of the feature</li>\n<li><code>values</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game-version-feature-value\" target=\"_blank\" rel=\"nofollow\"> Game Version Feature Value</a>): The bool/text value of the feature</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307764,"version":0},"$loki":56},{"id":"742a6b033","slug":"game-version","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Game Version","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Game Version endpoint.\n\nEndpoint Description: Details about game editions and versions.\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nchecksum (uuid): Hash of the object\n\ncreated_at (Unix Time Stamp): Date this was initially added to the IGDB database\n\nfeatures (Reference ID for  Game Version Feature): Features and descriptions of what makes each version/edition different from the main game\n\ngame (Reference ID for Game): The game these versions/editions are of\n\ngames (Array of Game IDs): Game Versions and Editions\n\nupdated_at (Unix Time Stamp): The last date this entry was updated in the IGDB database\n\nurl (String): The website address (URL) of the item\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function game_version(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Game Version](https://api-docs.igdb.com/#game-version) endpoint.\r\n\r\n**Endpoint Description**: Details about game editions and versions.\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Game Version endpoint method\r\n    $igdb->game_version($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `checksum` (uuid): Hash of the object\r\n - `created_at` (Unix Time Stamp): Date this was initially added to the IGDB database\r\n - `features` (Reference ID for [ Game Version Feature](https://api-docs.igdb.com/#game-version-feature)): Features and descriptions of what makes each version&#x2F;edition different from the main game\r\n - `game` (Reference ID for [Game](https://api-docs.igdb.com/#game)): The game these versions&#x2F;editions are of\r\n - `games` (Array of [Game](https://api-docs.igdb.com/#game) IDs): Game Versions and Editions\r\n - `updated_at` (Unix Time Stamp): The last date this entry was updated in the IGDB database\r\n - `url` (String): The website address (URL) of the item\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function game_version(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#game-version\" target=\"_blank\" rel=\"nofollow\">Game Version</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: Details about game editions and versions.</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Game Version endpoint method\r\n    $igdb->game_version($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>created_at</code> (Unix Time Stamp): Date this was initially added to the IGDB database</li>\n<li><code>features</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game-version-feature\" target=\"_blank\" rel=\"nofollow\"> Game Version Feature</a>): Features and descriptions of what makes each version/edition different from the main game</li>\n<li><code>game</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\">Game</a>): The game these versions/editions are of</li>\n<li><code>games</code> (Array of <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\">Game</a> IDs): Game Versions and Editions</li>\n<li><code>updated_at</code> (Unix Time Stamp): The last date this entry was updated in the IGDB database</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307764,"version":0},"$loki":57},{"id":"c476ac00e","slug":"game-video","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Game Video","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Game Video endpoint.\n\nEndpoint Description: A video associated with a game\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nchecksum (uuid): Hash of the object\n\ngame (Reference ID for Game): The game this video is associated with\n\nname (String): The name of the video\n\nvideo_id (String): The external ID of the video (usually youtube)\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function game_video(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Game Video](https://api-docs.igdb.com/#game-video) endpoint.\r\n\r\n**Endpoint Description**: A video associated with a game\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Game Video endpoint method\r\n    $igdb->game_video($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `checksum` (uuid): Hash of the object\r\n - `game` (Reference ID for [Game](https://api-docs.igdb.com/#game)): The game this video is associated with\r\n - `name` (String): The name of the video\r\n - `video_id` (String): The external ID of the video (usually youtube)\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function game_video(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#game-video\" target=\"_blank\" rel=\"nofollow\">Game Video</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: A video associated with a game</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Game Video endpoint method\r\n    $igdb->game_video($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>game</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\">Game</a>): The game this video is associated with</li>\n<li><code>name</code> (String): The name of the video</li>\n<li><code>video_id</code> (String): The external ID of the video (usually youtube)</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307764,"version":0},"$loki":58},{"id":"ca40df8fe","slug":"game","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Game","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Game endpoint.\n\nEndpoint Description: Video Games!\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nage_ratings (Reference ID for  Age Rating): The PEGI rating\n\naggregated_rating (Double): Rating based on external critic scores\n\naggregated_rating_count (Integer): Number of external critic scores\n\nalternative_names (Array of Alternative Name IDs): Alternative names for this game\n\nartworks (Array of Artwork IDs): Artworks of this game\n\nbundles (Reference ID for  Game): The bundles this game is a part of\n\ncategory (Category Enum): The category of this game\n\nchecksum (uuid): Hash of the object\n\ncollection (Reference ID for Collection): The series the game belongs to\n\ncover (Reference ID for Cover): The cover of this game\n\ncreated_at (Unix Time Stamp): Date this was initially added to the IGDB database\n\ndlcs (Reference ID for  Game): DLCs for this game\n\nexpansions (Reference ID for  Game): Expansions of this game\n\nexternal_games (Array of External Game IDs): External IDs this game has on other services\n\nfirst_release_date (Unix Time Stamp): The first release date for this game\n\nfollows (Integer): Number of people following a game\n\nfranchise (Reference ID for Franchise): The main franchise\n\nfranchises (Array of Franchise IDs): Other franchises the game belongs to\n\ngame_engines (Array of Game Engine IDs): The game engine used in this game\n\ngame_modes (Array of Game Mode IDs): Modes of gameplay\n\ngenres (Array of Genre IDs): Genres of the game\n\nhypes (Integer): Number of follows a game gets before release\n\ninvolved_companies (Array of Involved Company IDs): Companies who developed this game\n\nkeywords (Array of Keyword IDs): Associated keywords\n\nmultiplayer_modes (Array of Multiplayer Mode IDs): Multiplayer modes for this game\n\nname (String)\n\nparent_game (Reference ID for  Game): If a DLC, expansion or part of a bundle, this is the main game or bundle\n\nplatforms (Array of Platform IDs): Platforms this game was released on\n\nplayer_perspectives (Array of Player Perspective IDs): The main perspective of the player\n\nrating (Double): Average IGDB user rating\n\nrating_count (Integer): Total number of IGDB user ratings\n\nrelease_dates (Array of Release Date IDs): Release dates of this game\n\nscreenshots (Array of Screenshot IDs): Screenshots of this game\n\nsimilar_games (Reference ID for  Game): Similar games\n\nslug (String): A url-safe, unique, lower-case version of the name\n\nstandalone_expansions (Reference ID for  Game): Standalone expansions of this game\n\nstatus (Status Enum): The status of the games release\n\nstoryline (String): A short description of a games story\n\nsummary (String): A description of the game\n\ntags (Array of Tag Numbers): Related entities in the IGDB API\n\nthemes (Array of Theme IDs): Themes of the game\n\ntotal_rating (Double): Average rating based on both IGDB user and external critic scores\n\ntotal_rating_count (Integer): Total number of user and external critic scores\n\nupdated_at (Unix Time Stamp): The last date this entry was updated in the IGDB database\n\nurl (String): The website address (URL) of the item\n\nversion_parent (Reference ID for  Game): If a version, this is the main game\n\nversion_title (String): Title of this version (i.e Gold edition)\n\nvideos (Reference ID for  Game Video): Videos of this game\n\nwebsites (Reference ID for  Website): Websites associated with this game\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function game(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Game](https://api-docs.igdb.com/#game) endpoint.\r\n\r\n**Endpoint Description**: Video Games!\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Game endpoint method\r\n    $igdb->game($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `age_ratings` (Reference ID for [ Age Rating](https://api-docs.igdb.com/#age-rating)): The PEGI rating\r\n - `aggregated_rating` (Double): Rating based on external critic scores\r\n - `aggregated_rating_count` (Integer): Number of external critic scores\r\n - `alternative_names` (Array of [Alternative Name](https://api-docs.igdb.com/#alternative-name) IDs): Alternative names for this game\r\n - `artworks` (Array of [Artwork](https://api-docs.igdb.com/#artwork) IDs): Artworks of this game\r\n - `bundles` (Reference ID for [ Game](https://api-docs.igdb.com/#game)): The bundles this game is a part of\r\n - `category` ([Category Enum](https://api-docs.igdb.com/#game-enums)): The category of this game\r\n - `checksum` (uuid): Hash of the object\r\n - `collection` (Reference ID for [Collection](https://api-docs.igdb.com/#collection)): The series the game belongs to\r\n - `cover` (Reference ID for [Cover](https://api-docs.igdb.com/#cover)): The cover of this game\r\n - `created_at` (Unix Time Stamp): Date this was initially added to the IGDB database\r\n - `dlcs` (Reference ID for [ Game](https://api-docs.igdb.com/#game)): DLCs for this game\r\n - `expansions` (Reference ID for [ Game](https://api-docs.igdb.com/#game)): Expansions of this game\r\n - `external_games` (Array of [External Game](https://api-docs.igdb.com/#external-game) IDs): External IDs this game has on other services\r\n - `first_release_date` (Unix Time Stamp): The first release date for this game\r\n - `follows` (Integer): Number of people following a game\r\n - `franchise` (Reference ID for [Franchise](https://api-docs.igdb.com/#franchise)): The main franchise\r\n - `franchises` (Array of [Franchise](https://api-docs.igdb.com/#franchise) IDs): Other franchises the game belongs to\r\n - `game_engines` (Array of [Game Engine](https://api-docs.igdb.com/#game-engine) IDs): The game engine used in this game\r\n - `game_modes` (Array of [Game Mode](https://api-docs.igdb.com/#game-mode) IDs): Modes of gameplay\r\n - `genres` (Array of [Genre](https://api-docs.igdb.com/#genre) IDs): Genres of the game\r\n - `hypes` (Integer): Number of follows a game gets before release\r\n - `involved_companies` (Array of [Involved Company](https://api-docs.igdb.com/#involved-company) IDs): Companies who developed this game\r\n - `keywords` (Array of [Keyword](https://api-docs.igdb.com/#keyword) IDs): Associated keywords\r\n - `multiplayer_modes` (Array of [Multiplayer Mode](https://api-docs.igdb.com/#multiplayer-mode) IDs): Multiplayer modes for this game\r\n - `name` (String)\r\n - `parent_game` (Reference ID for [ Game](https://api-docs.igdb.com/#game)): If a DLC, expansion or part of a bundle, this is the main game or bundle\r\n - `platforms` (Array of [Platform](https://api-docs.igdb.com/#platform) IDs): Platforms this game was released on\r\n - `player_perspectives` (Array of [Player Perspective](https://api-docs.igdb.com/#player-perspective) IDs): The main perspective of the player\r\n - `rating` (Double): Average IGDB user rating\r\n - `rating_count` (Integer): Total number of IGDB user ratings\r\n - `release_dates` (Array of [Release Date](https://api-docs.igdb.com/#release-date) IDs): Release dates of this game\r\n - `screenshots` (Array of [Screenshot](https://api-docs.igdb.com/#screenshot) IDs): Screenshots of this game\r\n - `similar_games` (Reference ID for [ Game](https://api-docs.igdb.com/#game)): Similar games\r\n - `slug` (String): A url-safe, unique, lower-case version of the name\r\n - `standalone_expansions` (Reference ID for [ Game](https://api-docs.igdb.com/#game)): Standalone expansions of this game\r\n - `status` ([Status Enum](https://api-docs.igdb.com/#game-enums)): The status of the games release\r\n - `storyline` (String): A short description of a games story\r\n - `summary` (String): A description of the game\r\n - `tags` (Array of [Tag Numbers](https://api-docs.igdb.com/#tag-numbers)): Related entities in the IGDB API\r\n - `themes` (Array of [Theme](https://api-docs.igdb.com/#theme) IDs): Themes of the game\r\n - `total_rating` (Double): Average rating based on both IGDB user and external critic scores\r\n - `total_rating_count` (Integer): Total number of user and external critic scores\r\n - `updated_at` (Unix Time Stamp): The last date this entry was updated in the IGDB database\r\n - `url` (String): The website address (URL) of the item\r\n - `version_parent` (Reference ID for [ Game](https://api-docs.igdb.com/#game)): If a version, this is the main game\r\n - `version_title` (String): Title of this version (i.e Gold edition)\r\n - `videos` (Reference ID for [ Game Video](https://api-docs.igdb.com/#game-video)): Videos of this game\r\n - `websites` (Reference ID for [ Website](https://api-docs.igdb.com/#website)): Websites associated with this game\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function game(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\">Game</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: Video Games!</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Game endpoint method\r\n    $igdb->game($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>age_ratings</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#age-rating\" target=\"_blank\" rel=\"nofollow\"> Age Rating</a>): The PEGI rating</li>\n<li><code>aggregated_rating</code> (Double): Rating based on external critic scores</li>\n<li><code>aggregated_rating_count</code> (Integer): Number of external critic scores</li>\n<li><code>alternative_names</code> (Array of <a href=\"https://api-docs.igdb.com/#alternative-name\" target=\"_blank\" rel=\"nofollow\">Alternative Name</a> IDs): Alternative names for this game</li>\n<li><code>artworks</code> (Array of <a href=\"https://api-docs.igdb.com/#artwork\" target=\"_blank\" rel=\"nofollow\">Artwork</a> IDs): Artworks of this game</li>\n<li><code>bundles</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\"> Game</a>): The bundles this game is a part of</li>\n<li><code>category</code> (<a href=\"https://api-docs.igdb.com/#game-enums\" target=\"_blank\" rel=\"nofollow\">Category Enum</a>): The category of this game</li>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>collection</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#collection\" target=\"_blank\" rel=\"nofollow\">Collection</a>): The series the game belongs to</li>\n<li><code>cover</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#cover\" target=\"_blank\" rel=\"nofollow\">Cover</a>): The cover of this game</li>\n<li><code>created_at</code> (Unix Time Stamp): Date this was initially added to the IGDB database</li>\n<li><code>dlcs</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\"> Game</a>): DLCs for this game</li>\n<li><code>expansions</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\"> Game</a>): Expansions of this game</li>\n<li><code>external_games</code> (Array of <a href=\"https://api-docs.igdb.com/#external-game\" target=\"_blank\" rel=\"nofollow\">External Game</a> IDs): External IDs this game has on other services</li>\n<li><code>first_release_date</code> (Unix Time Stamp): The first release date for this game</li>\n<li><code>follows</code> (Integer): Number of people following a game</li>\n<li><code>franchise</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#franchise\" target=\"_blank\" rel=\"nofollow\">Franchise</a>): The main franchise</li>\n<li><code>franchises</code> (Array of <a href=\"https://api-docs.igdb.com/#franchise\" target=\"_blank\" rel=\"nofollow\">Franchise</a> IDs): Other franchises the game belongs to</li>\n<li><code>game_engines</code> (Array of <a href=\"https://api-docs.igdb.com/#game-engine\" target=\"_blank\" rel=\"nofollow\">Game Engine</a> IDs): The game engine used in this game</li>\n<li><code>game_modes</code> (Array of <a href=\"https://api-docs.igdb.com/#game-mode\" target=\"_blank\" rel=\"nofollow\">Game Mode</a> IDs): Modes of gameplay</li>\n<li><code>genres</code> (Array of <a href=\"https://api-docs.igdb.com/#genre\" target=\"_blank\" rel=\"nofollow\">Genre</a> IDs): Genres of the game</li>\n<li><code>hypes</code> (Integer): Number of follows a game gets before release</li>\n<li><code>involved_companies</code> (Array of <a href=\"https://api-docs.igdb.com/#involved-company\" target=\"_blank\" rel=\"nofollow\">Involved Company</a> IDs): Companies who developed this game</li>\n<li><code>keywords</code> (Array of <a href=\"https://api-docs.igdb.com/#keyword\" target=\"_blank\" rel=\"nofollow\">Keyword</a> IDs): Associated keywords</li>\n<li><code>multiplayer_modes</code> (Array of <a href=\"https://api-docs.igdb.com/#multiplayer-mode\" target=\"_blank\" rel=\"nofollow\">Multiplayer Mode</a> IDs): Multiplayer modes for this game</li>\n<li><code>name</code> (String)</li>\n<li><code>parent_game</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\"> Game</a>): If a DLC, expansion or part of a bundle, this is the main game or bundle</li>\n<li><code>platforms</code> (Array of <a href=\"https://api-docs.igdb.com/#platform\" target=\"_blank\" rel=\"nofollow\">Platform</a> IDs): Platforms this game was released on</li>\n<li><code>player_perspectives</code> (Array of <a href=\"https://api-docs.igdb.com/#player-perspective\" target=\"_blank\" rel=\"nofollow\">Player Perspective</a> IDs): The main perspective of the player</li>\n<li><code>rating</code> (Double): Average IGDB user rating</li>\n<li><code>rating_count</code> (Integer): Total number of IGDB user ratings</li>\n<li><code>release_dates</code> (Array of <a href=\"https://api-docs.igdb.com/#release-date\" target=\"_blank\" rel=\"nofollow\">Release Date</a> IDs): Release dates of this game</li>\n<li><code>screenshots</code> (Array of <a href=\"https://api-docs.igdb.com/#screenshot\" target=\"_blank\" rel=\"nofollow\">Screenshot</a> IDs): Screenshots of this game</li>\n<li><code>similar_games</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\"> Game</a>): Similar games</li>\n<li><code>slug</code> (String): A url-safe, unique, lower-case version of the name</li>\n<li><code>standalone_expansions</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\"> Game</a>): Standalone expansions of this game</li>\n<li><code>status</code> (<a href=\"https://api-docs.igdb.com/#game-enums\" target=\"_blank\" rel=\"nofollow\">Status Enum</a>): The status of the games release</li>\n<li><code>storyline</code> (String): A short description of a games story</li>\n<li><code>summary</code> (String): A description of the game</li>\n<li><code>tags</code> (Array of <a href=\"https://api-docs.igdb.com/#tag-numbers\" target=\"_blank\" rel=\"nofollow\">Tag Numbers</a>): Related entities in the IGDB API</li>\n<li><code>themes</code> (Array of <a href=\"https://api-docs.igdb.com/#theme\" target=\"_blank\" rel=\"nofollow\">Theme</a> IDs): Themes of the game</li>\n<li><code>total_rating</code> (Double): Average rating based on both IGDB user and external critic scores</li>\n<li><code>total_rating_count</code> (Integer): Total number of user and external critic scores</li>\n<li><code>updated_at</code> (Unix Time Stamp): The last date this entry was updated in the IGDB database</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n<li><code>version_parent</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\"> Game</a>): If a version, this is the main game</li>\n<li><code>version_title</code> (String): Title of this version (i.e Gold edition)</li>\n<li><code>videos</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game-video\" target=\"_blank\" rel=\"nofollow\"> Game Video</a>): Videos of this game</li>\n<li><code>websites</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#website\" target=\"_blank\" rel=\"nofollow\"> Website</a>): Websites associated with this game</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307765,"version":0},"$loki":59},{"id":"581f5663e","slug":"genre","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Genre","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Genre endpoint.\n\nEndpoint Description: Genres of video game\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nchecksum (uuid): Hash of the object\n\ncreated_at (Unix Time Stamp): Date this was initially added to the IGDB database\n\nname (String)\n\nslug (String): A url-safe, unique, lower-case version of the name\n\nupdated_at (Unix Time Stamp): The last date this entry was updated in the IGDB database\n\nurl (String): The website address (URL) of the item\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function genre(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Genre](https://api-docs.igdb.com/#genre) endpoint.\r\n\r\n**Endpoint Description**: Genres of video game\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Genre endpoint method\r\n    $igdb->genre($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `checksum` (uuid): Hash of the object\r\n - `created_at` (Unix Time Stamp): Date this was initially added to the IGDB database\r\n - `name` (String)\r\n - `slug` (String): A url-safe, unique, lower-case version of the name\r\n - `updated_at` (Unix Time Stamp): The last date this entry was updated in the IGDB database\r\n - `url` (String): The website address (URL) of the item\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function genre(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#genre\" target=\"_blank\" rel=\"nofollow\">Genre</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: Genres of video game</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Genre endpoint method\r\n    $igdb->genre($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>created_at</code> (Unix Time Stamp): Date this was initially added to the IGDB database</li>\n<li><code>name</code> (String)</li>\n<li><code>slug</code> (String): A url-safe, unique, lower-case version of the name</li>\n<li><code>updated_at</code> (Unix Time Stamp): The last date this entry was updated in the IGDB database</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307765,"version":0},"$loki":60},{"id":"d98174f87","slug":"involved-company","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Involved Company","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Involved Company endpoint.\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nchecksum (uuid): Hash of the object\n\ncompany (Reference ID for Company)\n\ncreated_at (Unix Time Stamp): Date this was initially added to the IGDB database\n\ndeveloper (boolean)\n\ngame (Reference ID for Game)\n\nporting (boolean)\n\npublisher (boolean)\n\nsupporting (boolean)\n\nupdated_at (Unix Time Stamp): The last date this entry was updated in the IGDB database\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function involved_company(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Involved Company](https://api-docs.igdb.com/#involved-company) endpoint.\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Involved Company endpoint method\r\n    $igdb->involved_company($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `checksum` (uuid): Hash of the object\r\n - `company` (Reference ID for [Company](https://api-docs.igdb.com/#company))\r\n - `created_at` (Unix Time Stamp): Date this was initially added to the IGDB database\r\n - `developer` (boolean)\r\n - `game` (Reference ID for [Game](https://api-docs.igdb.com/#game))\r\n - `porting` (boolean)\r\n - `publisher` (boolean)\r\n - `supporting` (boolean)\r\n - `updated_at` (Unix Time Stamp): The last date this entry was updated in the IGDB database\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function involved_company(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#involved-company\" target=\"_blank\" rel=\"nofollow\">Involved Company</a> endpoint.</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Involved Company endpoint method\r\n    $igdb->involved_company($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>company</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#company\" target=\"_blank\" rel=\"nofollow\">Company</a>)</li>\n<li><code>created_at</code> (Unix Time Stamp): Date this was initially added to the IGDB database</li>\n<li><code>developer</code> (boolean)</li>\n<li><code>game</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\">Game</a>)</li>\n<li><code>porting</code> (boolean)</li>\n<li><code>publisher</code> (boolean)</li>\n<li><code>supporting</code> (boolean)</li>\n<li><code>updated_at</code> (Unix Time Stamp): The last date this entry was updated in the IGDB database</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307765,"version":0},"$loki":61},{"id":"0cd823d95","slug":"keyword","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Keyword","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Keyword endpoint.\n\nEndpoint Description: Keywords are words or phrases that get tagged to a game such as “world war 2” or “steampunk”.\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nchecksum (uuid): Hash of the object\n\ncreated_at (Unix Time Stamp): Date this was initially added to the IGDB database\n\nname (String)\n\nslug (String): A url-safe, unique, lower-case version of the name\n\nupdated_at (Unix Time Stamp): The last date this entry was updated in the IGDB database\n\nurl (String): The website address (URL) of the item\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function keyword(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Keyword](https://api-docs.igdb.com/#keyword) endpoint.\r\n\r\n**Endpoint Description**: Keywords are words or phrases that get tagged to a game such as “world war 2” or “steampunk”.\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Keyword endpoint method\r\n    $igdb->keyword($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `checksum` (uuid): Hash of the object\r\n - `created_at` (Unix Time Stamp): Date this was initially added to the IGDB database\r\n - `name` (String)\r\n - `slug` (String): A url-safe, unique, lower-case version of the name\r\n - `updated_at` (Unix Time Stamp): The last date this entry was updated in the IGDB database\r\n - `url` (String): The website address (URL) of the item\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function keyword(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#keyword\" target=\"_blank\" rel=\"nofollow\">Keyword</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: Keywords are words or phrases that get tagged to a game such as “world war 2” or “steampunk”.</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Keyword endpoint method\r\n    $igdb->keyword($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>created_at</code> (Unix Time Stamp): Date this was initially added to the IGDB database</li>\n<li><code>name</code> (String)</li>\n<li><code>slug</code> (String): A url-safe, unique, lower-case version of the name</li>\n<li><code>updated_at</code> (Unix Time Stamp): The last date this entry was updated in the IGDB database</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307765,"version":0},"$loki":62},{"id":"73bf357c6","slug":"multiplayer-mode","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Multiplayer Mode","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Multiplayer Mode endpoint.\n\nEndpoint Description: Data about the supported multiplayer types\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\ncampaigncoop (boolean): True if the game supports campaign coop\n\nchecksum (uuid): Hash of the object\n\ndropin (boolean): True if the game supports drop in/out multiplayer\n\ngame (Reference ID for Game): The game this multiplayer mode is associated with\n\nlancoop (boolean): True if the game supports LAN coop\n\nofflinecoop (boolean): True if the game supports offline coop\n\nofflinecoopmax (Integer): Maximum number of offline players in offline coop\n\nofflinemax (Integer): Maximum number of players in offline multiplayer\n\nonlinecoop (boolean): True if the game supports online coop\n\nonlinecoopmax (Integer): Maximum number of online players in online coop\n\nonlinemax (Integer): Maximum number of players in online multiplayer\n\nplatform (Reference ID for Platform): The platform this multiplayer mode refers to\n\nsplitscreen (boolean): True if the game supports split screen, offline multiplayer\n\nsplitscreenonline (boolean): True if the game supports split screen, online multiplayer\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function multiplayer_mode(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Multiplayer Mode](https://api-docs.igdb.com/#multiplayer-mode) endpoint.\r\n\r\n**Endpoint Description**: Data about the supported multiplayer types\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Multiplayer Mode endpoint method\r\n    $igdb->multiplayer_mode($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `campaigncoop` (boolean): True if the game supports campaign coop\r\n - `checksum` (uuid): Hash of the object\r\n - `dropin` (boolean): True if the game supports drop in&#x2F;out multiplayer\r\n - `game` (Reference ID for [Game](https://api-docs.igdb.com/#game)): The game this multiplayer mode is associated with\r\n - `lancoop` (boolean): True if the game supports LAN coop\r\n - `offlinecoop` (boolean): True if the game supports offline coop\r\n - `offlinecoopmax` (Integer): Maximum number of offline players in offline coop\r\n - `offlinemax` (Integer): Maximum number of players in offline multiplayer\r\n - `onlinecoop` (boolean): True if the game supports online coop\r\n - `onlinecoopmax` (Integer): Maximum number of online players in online coop\r\n - `onlinemax` (Integer): Maximum number of players in online multiplayer\r\n - `platform` (Reference ID for [Platform](https://api-docs.igdb.com/#platform)): The platform this multiplayer mode refers to\r\n - `splitscreen` (boolean): True if the game supports split screen, offline multiplayer\r\n - `splitscreenonline` (boolean): True if the game supports split screen, online multiplayer\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function multiplayer_mode(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#multiplayer-mode\" target=\"_blank\" rel=\"nofollow\">Multiplayer Mode</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: Data about the supported multiplayer types</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Multiplayer Mode endpoint method\r\n    $igdb->multiplayer_mode($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>campaigncoop</code> (boolean): True if the game supports campaign coop</li>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>dropin</code> (boolean): True if the game supports drop in/out multiplayer</li>\n<li><code>game</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\">Game</a>): The game this multiplayer mode is associated with</li>\n<li><code>lancoop</code> (boolean): True if the game supports LAN coop</li>\n<li><code>offlinecoop</code> (boolean): True if the game supports offline coop</li>\n<li><code>offlinecoopmax</code> (Integer): Maximum number of offline players in offline coop</li>\n<li><code>offlinemax</code> (Integer): Maximum number of players in offline multiplayer</li>\n<li><code>onlinecoop</code> (boolean): True if the game supports online coop</li>\n<li><code>onlinecoopmax</code> (Integer): Maximum number of online players in online coop</li>\n<li><code>onlinemax</code> (Integer): Maximum number of players in online multiplayer</li>\n<li><code>platform</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#platform\" target=\"_blank\" rel=\"nofollow\">Platform</a>): The platform this multiplayer mode refers to</li>\n<li><code>splitscreen</code> (boolean): True if the game supports split screen, offline multiplayer</li>\n<li><code>splitscreenonline</code> (boolean): True if the game supports split screen, online multiplayer</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307765,"version":0},"$loki":63},{"id":"6a534e889","slug":"platform-family","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Platform Family","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Platform Family endpoint.\n\nEndpoint Description: A collection of closely related platforms\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nchecksum (uuid): Hash of the object\n\nname (String): The name of the platform family\n\nslug (String): A url-safe, unique, lower-case version of the name\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function platform_family(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Platform Family](https://api-docs.igdb.com/#platform-family) endpoint.\r\n\r\n**Endpoint Description**: A collection of closely related platforms\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Platform Family endpoint method\r\n    $igdb->platform_family($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `checksum` (uuid): Hash of the object\r\n - `name` (String): The name of the platform family\r\n - `slug` (String): A url-safe, unique, lower-case version of the name\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function platform_family(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#platform-family\" target=\"_blank\" rel=\"nofollow\">Platform Family</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: A collection of closely related platforms</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Platform Family endpoint method\r\n    $igdb->platform_family($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>name</code> (String): The name of the platform family</li>\n<li><code>slug</code> (String): A url-safe, unique, lower-case version of the name</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307765,"version":0},"$loki":64},{"id":"6ce7ddb87","slug":"platform-logo","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Platform Logo","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Platform Logo endpoint.\n\nEndpoint Description: Logo for a platform\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nalpha_channel (boolean)\n\nanimated (boolean)\n\nchecksum (uuid): Hash of the object\n\nheight (Integer): The height of the image in pixels\n\nimage_id (String): The ID of the image used to construct an IGDB image link\n\nurl (String): The website address (URL) of the item\n\nwidth (Integer): The width of the image in pixels\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function platform_logo(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Platform Logo](https://api-docs.igdb.com/#platform-logo) endpoint.\r\n\r\n**Endpoint Description**: Logo for a platform\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Platform Logo endpoint method\r\n    $igdb->platform_logo($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `alpha_channel` (boolean)\r\n - `animated` (boolean)\r\n - `checksum` (uuid): Hash of the object\r\n - `height` (Integer): The height of the image in pixels\r\n - `image_id` (String): The ID of the image used to construct an IGDB image link\r\n - `url` (String): The website address (URL) of the item\r\n - `width` (Integer): The width of the image in pixels\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function platform_logo(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#platform-logo\" target=\"_blank\" rel=\"nofollow\">Platform Logo</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: Logo for a platform</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Platform Logo endpoint method\r\n    $igdb->platform_logo($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>alpha_channel</code> (boolean)</li>\n<li><code>animated</code> (boolean)</li>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>height</code> (Integer): The height of the image in pixels</li>\n<li><code>image_id</code> (String): The ID of the image used to construct an IGDB image link</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n<li><code>width</code> (Integer): The width of the image in pixels</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307765,"version":0},"$loki":65},{"id":"df33810bf","slug":"platform-version-company","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Platform Version Company","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Platform Version Company endpoint.\n\nEndpoint Description: A platform developer\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nchecksum (uuid): Hash of the object\n\ncomment (String): Any notable comments about the developer\n\ncompany (Reference ID for Company): The company responsible for developing this platform version\n\ndeveloper (boolean)\n\nmanufacturer (boolean)\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function platform_version_company(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Platform Version Company](https://api-docs.igdb.com/#platform-version-company) endpoint.\r\n\r\n**Endpoint Description**: A platform developer\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Platform Version Company endpoint method\r\n    $igdb->platform_version_company($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `checksum` (uuid): Hash of the object\r\n - `comment` (String): Any notable comments about the developer\r\n - `company` (Reference ID for [Company](https://api-docs.igdb.com/#company)): The company responsible for developing this platform version\r\n - `developer` (boolean)\r\n - `manufacturer` (boolean)\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function platform_version_company(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#platform-version-company\" target=\"_blank\" rel=\"nofollow\">Platform Version Company</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: A platform developer</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Platform Version Company endpoint method\r\n    $igdb->platform_version_company($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>comment</code> (String): Any notable comments about the developer</li>\n<li><code>company</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#company\" target=\"_blank\" rel=\"nofollow\">Company</a>): The company responsible for developing this platform version</li>\n<li><code>developer</code> (boolean)</li>\n<li><code>manufacturer</code> (boolean)</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307765,"version":0},"$loki":66},{"id":"d57902cdf","slug":"platform-version-release-date","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Platform Version Release Date","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Platform Version Release Date endpoint.\n\nEndpoint Description: A handy endpoint that extends platform release dates. Used to dig deeper into release dates, platforms and versions.\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\ncategory (Category Enum): The format of the release date\n\nchecksum (uuid): Hash of the object\n\ncreated_at (Unix Time Stamp): Date this was initially added to the IGDB database\n\ndate (Unix Time Stamp): The release date\n\nhuman (String): A human readable version of the release date\n\nm (Integer): The month as an integer starting at 1 (January)\n\nplatform_version (Reference ID for Platform Version): The platform this release date is for\n\nregion (Region Enum): The region of the release\n\nupdated_at (Unix Time Stamp): The last date this entry was updated in the IGDB database\n\ny (Integer): The year in full (2018)\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function platform_version_release_date(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Platform Version Release Date](https://api-docs.igdb.com/#platform-version-release-date) endpoint.\r\n\r\n**Endpoint Description**: A handy endpoint that extends platform release dates. Used to dig deeper into release dates, platforms and versions.\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Platform Version Release Date endpoint method\r\n    $igdb->platform_version_release_date($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `category` ([Category Enum](https://api-docs.igdb.com/#platform-version-release-date-enums)): The format of the release date\r\n - `checksum` (uuid): Hash of the object\r\n - `created_at` (Unix Time Stamp): Date this was initially added to the IGDB database\r\n - `date` (Unix Time Stamp): The release date\r\n - `human` (String): A human readable version of the release date\r\n - `m` (Integer): The month as an integer starting at 1 (January)\r\n - `platform_version` (Reference ID for [Platform Version](https://api-docs.igdb.com/#platform-version)): The platform this release date is for\r\n - `region` ([Region Enum](https://api-docs.igdb.com/#platform-version-release-date-enums)): The region of the release\r\n - `updated_at` (Unix Time Stamp): The last date this entry was updated in the IGDB database\r\n - `y` (Integer): The year in full (2018)\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function platform_version_release_date(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#platform-version-release-date\" target=\"_blank\" rel=\"nofollow\">Platform Version Release Date</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: A handy endpoint that extends platform release dates. Used to dig deeper into release dates, platforms and versions.</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Platform Version Release Date endpoint method\r\n    $igdb->platform_version_release_date($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>category</code> (<a href=\"https://api-docs.igdb.com/#platform-version-release-date-enums\" target=\"_blank\" rel=\"nofollow\">Category Enum</a>): The format of the release date</li>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>created_at</code> (Unix Time Stamp): Date this was initially added to the IGDB database</li>\n<li><code>date</code> (Unix Time Stamp): The release date</li>\n<li><code>human</code> (String): A human readable version of the release date</li>\n<li><code>m</code> (Integer): The month as an integer starting at 1 (January)</li>\n<li><code>platform_version</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#platform-version\" target=\"_blank\" rel=\"nofollow\">Platform Version</a>): The platform this release date is for</li>\n<li><code>region</code> (<a href=\"https://api-docs.igdb.com/#platform-version-release-date-enums\" target=\"_blank\" rel=\"nofollow\">Region Enum</a>): The region of the release</li>\n<li><code>updated_at</code> (Unix Time Stamp): The last date this entry was updated in the IGDB database</li>\n<li><code>y</code> (Integer): The year in full (2018)</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307765,"version":0},"$loki":67},{"id":"12af2f35e","slug":"platform-version","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Platform Version","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Platform Version endpoint.\n\nEndpoint Description: \\<code>https://api.igdb.com/v4/platform_versions\\</code>\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nchecksum (uuid): Hash of the object\n\ncompanies (Reference ID for  Platform Version Company): Who developed this platform version\n\nconnectivity (String): The network capabilities\n\ncpu (String): The integrated control processing unit\n\ngraphics (String): The graphics chipset\n\nmain_manufacturer (Reference ID for  Platform Version Company): Who manufactured this version of the platform\n\nmedia (String): The type of media this version accepted\n\nmemory (String): How much memory there is\n\nname (String): The name of the platform version\n\nos (String): The operating system installed on the platform version\n\noutput (String): The output video rate\n\nplatform_logo (Reference ID for Platform Logo): The logo of this platform version\n\nplatform_version_release_dates (Array of Platform Version Release Date IDs): When this platform was released\n\nresolutions (String): The maximum resolution\n\nslug (String): A url-safe, unique, lower-case version of the name\n\nsound (String): The sound chipset\n\nstorage (String): How much storage there is\n\nsummary (String): A short summary\n\nurl (String): The website address (URL) of the item\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function platform_version(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Platform Version](https://api-docs.igdb.com/#platform-version) endpoint.\r\n\r\n**Endpoint Description**: &lt;code&gt;https:&#x2F;&#x2F;api.igdb.com&#x2F;v4&#x2F;platform_versions&lt;&#x2F;code&gt;\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Platform Version endpoint method\r\n    $igdb->platform_version($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `checksum` (uuid): Hash of the object\r\n - `companies` (Reference ID for [ Platform Version Company](https://api-docs.igdb.com/#platform-version-company)): Who developed this platform version\r\n - `connectivity` (String): The network capabilities\r\n - `cpu` (String): The integrated control processing unit\r\n - `graphics` (String): The graphics chipset\r\n - `main_manufacturer` (Reference ID for [ Platform Version Company](https://api-docs.igdb.com/#platform-version-company)): Who manufactured this version of the platform\r\n - `media` (String): The type of media this version accepted\r\n - `memory` (String): How much memory there is\r\n - `name` (String): The name of the platform version\r\n - `os` (String): The operating system installed on the platform version\r\n - `output` (String): The output video rate\r\n - `platform_logo` (Reference ID for [Platform Logo](https://api-docs.igdb.com/#platform-logo)): The logo of this platform version\r\n - `platform_version_release_dates` (Array of [Platform Version Release Date](https://api-docs.igdb.com/#platform-version-release-date) IDs): When this platform was released\r\n - `resolutions` (String): The maximum resolution\r\n - `slug` (String): A url-safe, unique, lower-case version of the name\r\n - `sound` (String): The sound chipset\r\n - `storage` (String): How much storage there is\r\n - `summary` (String): A short summary\r\n - `url` (String): The website address (URL) of the item\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function platform_version(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#platform-version\" target=\"_blank\" rel=\"nofollow\">Platform Version</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: &#x3C;code><a href=\"https://api.igdb.com/v4/platform_versions%3C/code\" target=\"_blank\" rel=\"nofollow\">https://api.igdb.com/v4/platform_versions&#x3C;/code</a>></p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Platform Version endpoint method\r\n    $igdb->platform_version($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>companies</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#platform-version-company\" target=\"_blank\" rel=\"nofollow\"> Platform Version Company</a>): Who developed this platform version</li>\n<li><code>connectivity</code> (String): The network capabilities</li>\n<li><code>cpu</code> (String): The integrated control processing unit</li>\n<li><code>graphics</code> (String): The graphics chipset</li>\n<li><code>main_manufacturer</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#platform-version-company\" target=\"_blank\" rel=\"nofollow\"> Platform Version Company</a>): Who manufactured this version of the platform</li>\n<li><code>media</code> (String): The type of media this version accepted</li>\n<li><code>memory</code> (String): How much memory there is</li>\n<li><code>name</code> (String): The name of the platform version</li>\n<li><code>os</code> (String): The operating system installed on the platform version</li>\n<li><code>output</code> (String): The output video rate</li>\n<li><code>platform_logo</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#platform-logo\" target=\"_blank\" rel=\"nofollow\">Platform Logo</a>): The logo of this platform version</li>\n<li><code>platform_version_release_dates</code> (Array of <a href=\"https://api-docs.igdb.com/#platform-version-release-date\" target=\"_blank\" rel=\"nofollow\">Platform Version Release Date</a> IDs): When this platform was released</li>\n<li><code>resolutions</code> (String): The maximum resolution</li>\n<li><code>slug</code> (String): A url-safe, unique, lower-case version of the name</li>\n<li><code>sound</code> (String): The sound chipset</li>\n<li><code>storage</code> (String): How much storage there is</li>\n<li><code>summary</code> (String): A short summary</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307765,"version":0},"$loki":68},{"id":"dfbe9e5c1","slug":"platform-website","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Platform Website","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Platform Website endpoint.\n\nEndpoint Description: The main website for the platform\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\ncategory (Category Enum): The service this website links to\n\nchecksum (uuid): Hash of the object\n\ntrusted (boolean)\n\nurl (String): The website address (URL) of the item\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function platform_website(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Platform Website](https://api-docs.igdb.com/#platform-website) endpoint.\r\n\r\n**Endpoint Description**: The main website for the platform\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Platform Website endpoint method\r\n    $igdb->platform_website($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `category` ([Category Enum](https://api-docs.igdb.com/#platform-website-enums)): The service this website links to\r\n - `checksum` (uuid): Hash of the object\r\n - `trusted` (boolean)\r\n - `url` (String): The website address (URL) of the item\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function platform_website(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#platform-website\" target=\"_blank\" rel=\"nofollow\">Platform Website</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: The main website for the platform</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Platform Website endpoint method\r\n    $igdb->platform_website($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>category</code> (<a href=\"https://api-docs.igdb.com/#platform-website-enums\" target=\"_blank\" rel=\"nofollow\">Category Enum</a>): The service this website links to</li>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>trusted</code> (boolean)</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307765,"version":0},"$loki":69},{"id":"afa136fe1","slug":"platform","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Platform","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Platform endpoint.\n\nEndpoint Description: The hardware used to run the game or game delivery network\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nabbreviation (String): An abbreviation of the platform name\n\nalternative_name (String): An alternative name for the platform\n\ncategory (Category Enum): A physical or virtual category of the platform\n\nchecksum (uuid): Hash of the object\n\ncreated_at (Unix Time Stamp): Date this was initially added to the IGDB database\n\ngeneration (Integer): The generation of the platform\n\nname (String): The name of the platform\n\nplatform_family (Reference ID for Platform Family): The family of platforms this one belongs to\n\nplatform_logo (Reference ID for Platform Logo): The logo of the first Version of this platform\n\nslug (String): A url-safe, unique, lower-case version of the name\n\nsummary (String): The summary of the first Version of this platform\n\nupdated_at (Unix Time Stamp): The last date this entry was updated in the IGDB database\n\nurl (String): The website address (URL) of the item\n\nversions (Reference ID for  Platform Version): Associated versions of this platform\n\nwebsites (Reference ID for  Platform Website): The main website\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function platform(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Platform](https://api-docs.igdb.com/#platform) endpoint.\r\n\r\n**Endpoint Description**: The hardware used to run the game or game delivery network\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Platform endpoint method\r\n    $igdb->platform($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `abbreviation` (String): An abbreviation of the platform name\r\n - `alternative_name` (String): An alternative name for the platform\r\n - `category` ([Category Enum](https://api-docs.igdb.com/#platform-enums)): A physical or virtual category of the platform\r\n - `checksum` (uuid): Hash of the object\r\n - `created_at` (Unix Time Stamp): Date this was initially added to the IGDB database\r\n - `generation` (Integer): The generation of the platform\r\n - `name` (String): The name of the platform\r\n - `platform_family` (Reference ID for [Platform Family](https://api-docs.igdb.com/#platform-family)): The family of platforms this one belongs to\r\n - `platform_logo` (Reference ID for [Platform Logo](https://api-docs.igdb.com/#platform-logo)): The logo of the first Version of this platform\r\n - `slug` (String): A url-safe, unique, lower-case version of the name\r\n - `summary` (String): The summary of the first Version of this platform\r\n - `updated_at` (Unix Time Stamp): The last date this entry was updated in the IGDB database\r\n - `url` (String): The website address (URL) of the item\r\n - `versions` (Reference ID for [ Platform Version](https://api-docs.igdb.com/#platform-version)): Associated versions of this platform\r\n - `websites` (Reference ID for [ Platform Website](https://api-docs.igdb.com/#platform-website)): The main website\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function platform(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#platform\" target=\"_blank\" rel=\"nofollow\">Platform</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: The hardware used to run the game or game delivery network</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Platform endpoint method\r\n    $igdb->platform($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>abbreviation</code> (String): An abbreviation of the platform name</li>\n<li><code>alternative_name</code> (String): An alternative name for the platform</li>\n<li><code>category</code> (<a href=\"https://api-docs.igdb.com/#platform-enums\" target=\"_blank\" rel=\"nofollow\">Category Enum</a>): A physical or virtual category of the platform</li>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>created_at</code> (Unix Time Stamp): Date this was initially added to the IGDB database</li>\n<li><code>generation</code> (Integer): The generation of the platform</li>\n<li><code>name</code> (String): The name of the platform</li>\n<li><code>platform_family</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#platform-family\" target=\"_blank\" rel=\"nofollow\">Platform Family</a>): The family of platforms this one belongs to</li>\n<li><code>platform_logo</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#platform-logo\" target=\"_blank\" rel=\"nofollow\">Platform Logo</a>): The logo of the first Version of this platform</li>\n<li><code>slug</code> (String): A url-safe, unique, lower-case version of the name</li>\n<li><code>summary</code> (String): The summary of the first Version of this platform</li>\n<li><code>updated_at</code> (Unix Time Stamp): The last date this entry was updated in the IGDB database</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n<li><code>versions</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#platform-version\" target=\"_blank\" rel=\"nofollow\"> Platform Version</a>): Associated versions of this platform</li>\n<li><code>websites</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#platform-website\" target=\"_blank\" rel=\"nofollow\"> Platform Website</a>): The main website</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307765,"version":0},"$loki":70},{"id":"8d4865eb6","slug":"player-perspective","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Player Perspective","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Player Perspective endpoint.\n\nEndpoint Description: Player perspectives describe the view/perspective of the player in a video game.\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nchecksum (uuid): Hash of the object\n\ncreated_at (Unix Time Stamp): Date this was initially added to the IGDB database\n\nname (String)\n\nslug (String): A url-safe, unique, lower-case version of the name\n\nupdated_at (Unix Time Stamp): The last date this entry was updated in the IGDB database\n\nurl (String): The website address (URL) of the item\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function player_perspective(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Player Perspective](https://api-docs.igdb.com/#player-perspective) endpoint.\r\n\r\n**Endpoint Description**: Player perspectives describe the view&#x2F;perspective of the player in a video game.\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Player Perspective endpoint method\r\n    $igdb->player_perspective($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `checksum` (uuid): Hash of the object\r\n - `created_at` (Unix Time Stamp): Date this was initially added to the IGDB database\r\n - `name` (String)\r\n - `slug` (String): A url-safe, unique, lower-case version of the name\r\n - `updated_at` (Unix Time Stamp): The last date this entry was updated in the IGDB database\r\n - `url` (String): The website address (URL) of the item\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function player_perspective(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#player-perspective\" target=\"_blank\" rel=\"nofollow\">Player Perspective</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: Player perspectives describe the view/perspective of the player in a video game.</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Player Perspective endpoint method\r\n    $igdb->player_perspective($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>created_at</code> (Unix Time Stamp): Date this was initially added to the IGDB database</li>\n<li><code>name</code> (String)</li>\n<li><code>slug</code> (String): A url-safe, unique, lower-case version of the name</li>\n<li><code>updated_at</code> (Unix Time Stamp): The last date this entry was updated in the IGDB database</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307765,"version":0},"$loki":71},{"id":"278f02d00","slug":"release-date","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Release Date","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Release Date endpoint.\n\nEndpoint Description: A handy endpoint that extends game release dates. Used to dig deeper into release dates, platforms and versions.\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\ncategory (Category Enum): The format category of the release date\n\nchecksum (uuid): Hash of the object\n\ncreated_at (Unix Time Stamp): Date this was initially added to the IGDB database\n\ndate (Unix Time Stamp): The date of the release\n\ngame (Reference ID for Game)\n\nhuman (String): A human readable representation of the date\n\nm (Integer): The month as an integer starting at 1 (January)\n\nplatform (Reference ID for Platform): The platform of the release\n\nregion (Region Enum): The region of the release\n\nupdated_at (Unix Time Stamp): The last date this entry was updated in the IGDB database\n\ny (Integer): The year in full (2018)\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function release_date(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Release Date](https://api-docs.igdb.com/#release-date) endpoint.\r\n\r\n**Endpoint Description**: A handy endpoint that extends game release dates. Used to dig deeper into release dates, platforms and versions.\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Release Date endpoint method\r\n    $igdb->release_date($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `category` ([Category Enum](https://api-docs.igdb.com/#release-date-enums)): The format category of the release date\r\n - `checksum` (uuid): Hash of the object\r\n - `created_at` (Unix Time Stamp): Date this was initially added to the IGDB database\r\n - `date` (Unix Time Stamp): The date of the release\r\n - `game` (Reference ID for [Game](https://api-docs.igdb.com/#game))\r\n - `human` (String): A human readable representation of the date\r\n - `m` (Integer): The month as an integer starting at 1 (January)\r\n - `platform` (Reference ID for [Platform](https://api-docs.igdb.com/#platform)): The platform of the release\r\n - `region` ([Region Enum](https://api-docs.igdb.com/#release-date-enums)): The region of the release\r\n - `updated_at` (Unix Time Stamp): The last date this entry was updated in the IGDB database\r\n - `y` (Integer): The year in full (2018)\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function release_date(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#release-date\" target=\"_blank\" rel=\"nofollow\">Release Date</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: A handy endpoint that extends game release dates. Used to dig deeper into release dates, platforms and versions.</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Release Date endpoint method\r\n    $igdb->release_date($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>category</code> (<a href=\"https://api-docs.igdb.com/#release-date-enums\" target=\"_blank\" rel=\"nofollow\">Category Enum</a>): The format category of the release date</li>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>created_at</code> (Unix Time Stamp): Date this was initially added to the IGDB database</li>\n<li><code>date</code> (Unix Time Stamp): The date of the release</li>\n<li><code>game</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\">Game</a>)</li>\n<li><code>human</code> (String): A human readable representation of the date</li>\n<li><code>m</code> (Integer): The month as an integer starting at 1 (January)</li>\n<li><code>platform</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#platform\" target=\"_blank\" rel=\"nofollow\">Platform</a>): The platform of the release</li>\n<li><code>region</code> (<a href=\"https://api-docs.igdb.com/#release-date-enums\" target=\"_blank\" rel=\"nofollow\">Region Enum</a>): The region of the release</li>\n<li><code>updated_at</code> (Unix Time Stamp): The last date this entry was updated in the IGDB database</li>\n<li><code>y</code> (Integer): The year in full (2018)</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307765,"version":0},"$loki":72},{"id":"013a4f3cc","slug":"screenshot","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Screenshot","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Screenshot endpoint.\n\nEndpoint Description: Screenshots of games\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nalpha_channel (boolean)\n\nanimated (boolean)\n\nchecksum (uuid): Hash of the object\n\ngame (Reference ID for Game): The game this video is associated with\n\nheight (Integer): The height of the image in pixels\n\nimage_id (String): The ID of the image used to construct an IGDB image link\n\nurl (String): The website address (URL) of the item\n\nwidth (Integer): The width of the image in pixels\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function screenshot(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Screenshot](https://api-docs.igdb.com/#screenshot) endpoint.\r\n\r\n**Endpoint Description**: Screenshots of games\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Screenshot endpoint method\r\n    $igdb->screenshot($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `alpha_channel` (boolean)\r\n - `animated` (boolean)\r\n - `checksum` (uuid): Hash of the object\r\n - `game` (Reference ID for [Game](https://api-docs.igdb.com/#game)): The game this video is associated with\r\n - `height` (Integer): The height of the image in pixels\r\n - `image_id` (String): The ID of the image used to construct an IGDB image link\r\n - `url` (String): The website address (URL) of the item\r\n - `width` (Integer): The width of the image in pixels\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function screenshot(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#screenshot\" target=\"_blank\" rel=\"nofollow\">Screenshot</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: Screenshots of games</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Screenshot endpoint method\r\n    $igdb->screenshot($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>alpha_channel</code> (boolean)</li>\n<li><code>animated</code> (boolean)</li>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>game</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\">Game</a>): The game this video is associated with</li>\n<li><code>height</code> (Integer): The height of the image in pixels</li>\n<li><code>image_id</code> (String): The ID of the image used to construct an IGDB image link</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n<li><code>width</code> (Integer): The width of the image in pixels</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307766,"version":0},"$loki":73},{"id":"5050aa4ba","slug":"search-ii","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Search","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Search endpoint.\n\nEndpoint Description: \\<code>https://api.igdb.com/v4/search\\</code>\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nalternative_name (String)\n\ncharacter (Reference ID for Character)\n\nchecksum (uuid): Hash of the object\n\ncollection (Reference ID for Collection)\n\ncompany (Reference ID for Company)\n\ndescription (String)\n\ngame (Reference ID for Game)\n\nname (String)\n\nplatform (Reference ID for Platform)\n\npublished_at (Unix Time Stamp): The date this item was initially published by the third party\n\ntest_dummy (Reference ID for Test Dummy)\n\ntheme (Reference ID for Theme)\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function search(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Search](https://api-docs.igdb.com/#search) endpoint.\r\n\r\n**Endpoint Description**: &lt;code&gt;https:&#x2F;&#x2F;api.igdb.com&#x2F;v4&#x2F;search&lt;&#x2F;code&gt;\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Search endpoint method\r\n    $igdb->search($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `alternative_name` (String)\r\n - `character` (Reference ID for [Character](https://api-docs.igdb.com/#character))\r\n - `checksum` (uuid): Hash of the object\r\n - `collection` (Reference ID for [Collection](https://api-docs.igdb.com/#collection))\r\n - `company` (Reference ID for [Company](https://api-docs.igdb.com/#company))\r\n - `description` (String)\r\n - `game` (Reference ID for [Game](https://api-docs.igdb.com/#game))\r\n - `name` (String)\r\n - `platform` (Reference ID for [Platform](https://api-docs.igdb.com/#platform))\r\n - `published_at` (Unix Time Stamp): The date this item was initially published by the third party\r\n - `test_dummy` (Reference ID for [Test Dummy](https://api-docs.igdb.com/#test-dummy))\r\n - `theme` (Reference ID for [Theme](https://api-docs.igdb.com/#theme))\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function search(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#search\" target=\"_blank\" rel=\"nofollow\">Search</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: &#x3C;code><a href=\"https://api.igdb.com/v4/search%3C/code\" target=\"_blank\" rel=\"nofollow\">https://api.igdb.com/v4/search&#x3C;/code</a>></p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Search endpoint method\r\n    $igdb->search($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>alternative_name</code> (String)</li>\n<li><code>character</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#character\" target=\"_blank\" rel=\"nofollow\">Character</a>)</li>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>collection</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#collection\" target=\"_blank\" rel=\"nofollow\">Collection</a>)</li>\n<li><code>company</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#company\" target=\"_blank\" rel=\"nofollow\">Company</a>)</li>\n<li><code>description</code> (String)</li>\n<li><code>game</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\">Game</a>)</li>\n<li><code>name</code> (String)</li>\n<li><code>platform</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#platform\" target=\"_blank\" rel=\"nofollow\">Platform</a>)</li>\n<li><code>published_at</code> (Unix Time Stamp): The date this item was initially published by the third party</li>\n<li><code>test_dummy</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#test-dummy\" target=\"_blank\" rel=\"nofollow\">Test Dummy</a>)</li>\n<li><code>theme</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#theme\" target=\"_blank\" rel=\"nofollow\">Theme</a>)</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307766,"version":0},"$loki":74},{"id":"f26a19421","slug":"theme","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Theme","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Theme endpoint.\n\nEndpoint Description: Video game themes\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\nchecksum (uuid): Hash of the object\n\ncreated_at (Unix Time Stamp): Date this was initially added to the IGDB database\n\nname (String)\n\nslug (String): A url-safe, unique, lower-case version of the name\n\nupdated_at (Unix Time Stamp): The last date this entry was updated in the IGDB database\n\nurl (String): The website address (URL) of the item\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function theme(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Theme](https://api-docs.igdb.com/#theme) endpoint.\r\n\r\n**Endpoint Description**: Video game themes\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Theme endpoint method\r\n    $igdb->theme($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `checksum` (uuid): Hash of the object\r\n - `created_at` (Unix Time Stamp): Date this was initially added to the IGDB database\r\n - `name` (String)\r\n - `slug` (String): A url-safe, unique, lower-case version of the name\r\n - `updated_at` (Unix Time Stamp): The last date this entry was updated in the IGDB database\r\n - `url` (String): The website address (URL) of the item\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function theme(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#theme\" target=\"_blank\" rel=\"nofollow\">Theme</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: Video game themes</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Theme endpoint method\r\n    $igdb->theme($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>created_at</code> (Unix Time Stamp): Date this was initially added to the IGDB database</li>\n<li><code>name</code> (String)</li>\n<li><code>slug</code> (String): A url-safe, unique, lower-case version of the name</li>\n<li><code>updated_at</code> (Unix Time Stamp): The last date this entry was updated in the IGDB database</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307766,"version":0},"$loki":75},{"id":"41bcdb9ad","slug":"website","level":3,"parent":"cbf8ecb78","parents":["cbf8ecb78","39ddb466c"],"title":"Website","date":null,"timestamp":null,"body":{"stripped":"Fetching data from IGDB API using the Website endpoint.\n\nEndpoint Description: A website url, usually associated with a game\n\nParameters:\n\n$query: an apicalypse formatted query String\n\n$count: whether the request should return the number of matches instead of the actual resultset\n\nReturns: either the resultset as an array of objects, or a single object with a count property. Depends on the second $count parameter.\n\n\n\nFields in response\n\ncategory (Category Enum): The service this website links to\n\nchecksum (uuid): Hash of the object\n\ngame (Reference ID for Game): The game this website is associated with\n\ntrusted (boolean)\n\nurl (String): The website address (URL) of the item\n\nFor more information on return values, refer to the return values section!","markdown":"```php\r\npublic function website(string $query, boolean $count = false) throws IGDBEndpointException: mixed\r\n```\r\n\r\nFetching data from IGDB API using the [Website](https://api-docs.igdb.com/#website) endpoint.\r\n\r\n**Endpoint Description**: A website url, usually associated with a game\r\n\r\n**Parameters**:\r\n - `$query`: an apicalypse formatted query String\r\n - `$count`: whether the request should return the number of matches instead of the actual resultset\r\n\r\n**Returns**: either the resultset as an array of objects, or a single object with a count property. Depends on the second `$count` parameter.\r\n\r\n```php\r\n<?php\r\n\r\n    // Website endpoint method\r\n    $igdb->website($query, $count);\r\n\r\n?>\r\n```\r\n\r\n**Fields in response**\r\n - `category` ([Category Enum](https://api-docs.igdb.com/#website-enums)): The service this website links to\r\n - `checksum` (uuid): Hash of the object\r\n - `game` (Reference ID for [Game](https://api-docs.igdb.com/#game)): The game this website is associated with\r\n - `trusted` (boolean)\r\n - `url` (String): The website address (URL) of the item\r\n\r\n> For more information on return values, refer to the [return values section](#return-values)!","html":"<pre><code class=\"language-php\">public function website(string $query, boolean $count = false) throws IGDBEndpointException: mixed\n</code></pre>\n<p>Fetching data from IGDB API using the <a href=\"https://api-docs.igdb.com/#website\" target=\"_blank\" rel=\"nofollow\">Website</a> endpoint.</p>\n<p><strong>Endpoint Description</strong>: A website url, usually associated with a game</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$query</code>: an apicalypse formatted query String</li>\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\n</ul>\n<p><strong>Returns</strong>: either the resultset as an array of objects, or a single object with a count property. Depends on the second <code>$count</code> parameter.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // Website endpoint method\r\n    $igdb->website($query, $count);\r\n\r\n?>\n</code></pre>\n<p><strong>Fields in response</strong></p>\n<ul>\n<li><code>category</code> (<a href=\"https://api-docs.igdb.com/#website-enums\" target=\"_blank\" rel=\"nofollow\">Category Enum</a>): The service this website links to</li>\n<li><code>checksum</code> (uuid): Hash of the object</li>\n<li><code>game</code> (Reference ID for <a href=\"https://api-docs.igdb.com/#game\" target=\"_blank\" rel=\"nofollow\">Game</a>): The game this website is associated with</li>\n<li><code>trusted</code> (boolean)</li>\n<li><code>url</code> (String): The website address (URL) of the item</li>\n</ul>\n<blockquote>\n<p>For more information on return values, refer to the <a href=\"#return-values\">return values section</a>!</p>\n</blockquote>"},"meta":{"revision":0,"created":1669928307766,"version":0},"$loki":76},{"id":"ee3135ed2","slug":"multiquery","level":2,"parent":"cbf8ecb78","parents":["cbf8ecb78"],"title":"MultiQuery","date":null,"timestamp":null,"body":{"stripped":"This method executes a query against the multiquery endpoint. With this functionality one is able to execute multiple queries in a single request.\n\n:warning If you are using the Query Builder to construct your queries, the parameters name and endpoint are mandatory! There is also a third optional parameter count. If any of the mandatory parameters are missing for the multiquery, an IGDBInvalidParameterException is thrown! Please refer to the build method for more information!\n\nParameters\n\n$queries: an array of apicalypse formatted multiquery query strings.\n\nReturns: the response from the IGDB endpoint. The result object can vary depending on your query.\n\n\n\nThe result of the query:","markdown":"```php\r\npublic function multiquery(array $queries) throws IGDBEndpointException, IGDBInvalidParameterException: mixed\r\n```\r\n\r\nThis method executes a query against the `multiquery` endpoint. With this functionality one is able to execute multiple queries in a single request.\r\n\r\n> :warning If you are using the [Query Builder](#igdb-query-builder) to construct your queries, the parameters [`name`](#name) and [`endpoint`](#endpoint) are **mandatory**! There is also a third optional parameter [`count`](#count). If any of the mandatory parameters are missing for the multiquery, an `IGDBInvalidParameterException` is thrown! Please refer to the [`build`](#building-the-query) method for more information!\r\n\r\n**Parameters**\r\n - `$queries`: an array of apicalypse formatted multiquery query strings.\r\n\r\n**Returns**: the response from the IGDB endpoint. The result object can vary depending on your query.\r\n\r\n```php\r\n<?php\r\n\r\n    // importing the wrapper\r\n    require_once \"class.igdb.php\";\r\n\r\n    // instantiate the wrapper\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n    // query builder for the main game\r\n    $main_builder = new IGDBQueryBuilder();\r\n\r\n    // query builder for the bundles\r\n    $bundle_builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        // building the main game query\r\n        $main = $main_builder\r\n            ->name(\"Main Game\")\r\n            ->endpoint(\"game\")\r\n            ->fields(\"id,name\")\r\n            ->where(\"id = 25076\")\r\n            ->build(true);\r\n\r\n        // building the bundle query\r\n        $bundle = $bundle_builder\r\n            ->name(\"Bundles\")\r\n            ->endpoint(\"game\")\r\n            ->fields(\"id,name,version_parent,category\")\r\n            ->where(\"version_parent = 25076\")\r\n            ->where(\"category = 0\")\r\n            ->build(true);\r\n\r\n        // the query can be passed as a string too\r\n\r\n        // $main = \"query games \\\"Main Game\\\" {\r\n        //     fields id,name;\r\n        //     where id = 25076;\r\n        // };\";\r\n\r\n        // $bundle = \"query games \\\"Bundles\\\" {\r\n        //     fields id,name,version_parent,category;\r\n        //     where version_parent = 25076 & category = 0;\r\n        // };\";\r\n\r\n        // passing the queries to the multiquery method as an array of strings\r\n        var_dump(\r\n            $igdb->multiquery(\r\n                array($main, $bundle)\r\n            )\r\n        );\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // a builder property is invalid\r\n        echo $e->getMessage();\r\n    } catch (IGDBEndpointException $e) {\r\n        // something went wront with the query\r\n        echo $e->getMessage();\r\n    }\r\n?>\r\n```\r\nThe result of the query:\r\n\r\n```text\r\narray (size=2)\r\n  0 =>\r\n    object(stdClass)[4]\r\n      public 'name' => string 'Main Game' (length=9)\r\n      public 'result' =>\r\n        array (size=1)\r\n          0 =>\r\n            object(stdClass)[5]\r\n              public 'id' => int 25076\r\n              public 'name' => string 'Red Dead Redemption 2' (length=21)\r\n  1 =>\r\n    object(stdClass)[6]\r\n      public 'name' => string 'Bundles' (length=7)\r\n      public 'result' =>\r\n        array (size=3)\r\n          0 =>\r\n            object(stdClass)[7]\r\n              public 'id' => int 103207\r\n              public 'category' => int 0\r\n              public 'name' => string 'Red Dead Redemption 2: Collector's Box' (length=38)\r\n              public 'version_parent' => int 25076\r\n          1 =>\r\n            object(stdClass)[8]\r\n              public 'id' => int 103206\r\n              public 'category' => int 0\r\n              public 'name' => string 'Red dead Redemption 2: Ultimate Edition' (length=39)\r\n              public 'version_parent' => int 25076\r\n          2 =>\r\n            object(stdClass)[9]\r\n              public 'id' => int 103205\r\n              public 'category' => int 0\r\n              public 'name' => string 'Red Dead Redemption 2: Special Edition' (length=38)\r\n              public 'version_parent' => int 25076\r\n```","html":"<pre><code class=\"language-php\">public function multiquery(array $queries) throws IGDBEndpointException, IGDBInvalidParameterException: mixed\n</code></pre>\n<p>This method executes a query against the <code>multiquery</code> endpoint. With this functionality one is able to execute multiple queries in a single request.</p>\n<blockquote>\n<p>:warning If you are using the <a href=\"#igdb-query-builder\">Query Builder</a> to construct your queries, the parameters <a href=\"#name\"><code>name</code></a> and <a href=\"#endpoint\"><code>endpoint</code></a> are <strong>mandatory</strong>! There is also a third optional parameter <a href=\"#count\"><code>count</code></a>. If any of the mandatory parameters are missing for the multiquery, an <code>IGDBInvalidParameterException</code> is thrown! Please refer to the <a href=\"#building-the-query\"><code>build</code></a> method for more information!</p>\n</blockquote>\n<p><strong>Parameters</strong></p>\n<ul>\n<li><code>$queries</code>: an array of apicalypse formatted multiquery query strings.</li>\n</ul>\n<p><strong>Returns</strong>: the response from the IGDB endpoint. The result object can vary depending on your query.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // importing the wrapper\r\n    require_once \"class.igdb.php\";\r\n\r\n    // instantiate the wrapper\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n    // query builder for the main game\r\n    $main_builder = new IGDBQueryBuilder();\r\n\r\n    // query builder for the bundles\r\n    $bundle_builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        // building the main game query\r\n        $main = $main_builder\r\n            ->name(\"Main Game\")\r\n            ->endpoint(\"game\")\r\n            ->fields(\"id,name\")\r\n            ->where(\"id = 25076\")\r\n            ->build(true);\r\n\r\n        // building the bundle query\r\n        $bundle = $bundle_builder\r\n            ->name(\"Bundles\")\r\n            ->endpoint(\"game\")\r\n            ->fields(\"id,name,version_parent,category\")\r\n            ->where(\"version_parent = 25076\")\r\n            ->where(\"category = 0\")\r\n            ->build(true);\r\n\r\n        // the query can be passed as a string too\r\n\r\n        // $main = \"query games \\\"Main Game\\\" {\r\n        //     fields id,name;\r\n        //     where id = 25076;\r\n        // };\";\r\n\r\n        // $bundle = \"query games \\\"Bundles\\\" {\r\n        //     fields id,name,version_parent,category;\r\n        //     where version_parent = 25076 &#x26; category = 0;\r\n        // };\";\r\n\r\n        // passing the queries to the multiquery method as an array of strings\r\n        var_dump(\r\n            $igdb->multiquery(\r\n                array($main, $bundle)\r\n            )\r\n        );\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // a builder property is invalid\r\n        echo $e->getMessage();\r\n    } catch (IGDBEndpointException $e) {\r\n        // something went wront with the query\r\n        echo $e->getMessage();\r\n    }\r\n?>\n</code></pre>\n<p>The result of the query:</p>\n<pre><code class=\"language-text\">array (size=2)\r\n  0 =>\r\n    object(stdClass)[4]\r\n      public 'name' => string 'Main Game' (length=9)\r\n      public 'result' =>\r\n        array (size=1)\r\n          0 =>\r\n            object(stdClass)[5]\r\n              public 'id' => int 25076\r\n              public 'name' => string 'Red Dead Redemption 2' (length=21)\r\n  1 =>\r\n    object(stdClass)[6]\r\n      public 'name' => string 'Bundles' (length=7)\r\n      public 'result' =>\r\n        array (size=3)\r\n          0 =>\r\n            object(stdClass)[7]\r\n              public 'id' => int 103207\r\n              public 'category' => int 0\r\n              public 'name' => string 'Red Dead Redemption 2: Collector's Box' (length=38)\r\n              public 'version_parent' => int 25076\r\n          1 =>\r\n            object(stdClass)[8]\r\n              public 'id' => int 103206\r\n              public 'category' => int 0\r\n              public 'name' => string 'Red dead Redemption 2: Ultimate Edition' (length=39)\r\n              public 'version_parent' => int 25076\r\n          2 =>\r\n            object(stdClass)[9]\r\n              public 'id' => int 103205\r\n              public 'category' => int 0\r\n              public 'name' => string 'Red Dead Redemption 2: Special Edition' (length=38)\r\n              public 'version_parent' => int 25076\n</code></pre>"},"meta":{"revision":0,"created":1669928307766,"version":0},"$loki":77},{"id":"50f872617","slug":"return-values","level":2,"parent":"cbf8ecb78","parents":["cbf8ecb78"],"title":"Return Values","date":null,"timestamp":null,"body":{"stripped":"Every endpoint method can return two different type of results, depending on the second parameter passed to them.\n\nBy default the second $count parameter is a boolean false. this means, that the query will be executed against the IGDB, returning a $result array of objects.\n\n\n\nThe result of the query above:\n\n\n\nIf you pass a boolean true as a second parameter, then you will get an object with a count property containing the item count from the selected endpoint filtered by the $query filters.\n\n\n\nThe result of the query above:\n\n\n\nThe result object's properties will vary depending on the provided field list in the $query. From the example result above you can see, the result holds an array, containing two elements. Every element of the result array is an object, containing properties with name of the fields from the fields parameter.","markdown":"Every endpoint method can return two different type of results, depending on the second parameter passed to them.\r\n\r\nBy default the second `$count` parameter is a boolean `false`. this means, that the query will be executed against the IGDB, returning a `$result` **array of objects**.\r\n\r\n```php\r\n<?php\r\n\r\n    // a query against the game endpoint without a $count parameter\r\n    $igdb->game(\"fields id,name; where id = (1,2);\");\r\n\r\n?>\r\n```\r\n\r\nThe result of the query above:\r\n\r\n```text\r\narray (size=2)\r\n    0 =>\r\n        object(stdClass)[2]\r\n        public 'id' => int 1\r\n        public 'name' => string 'Thief II: The Metal Age' (length=23)\r\n    1 =>\r\n        object(stdClass)[3]\r\n        public 'id' => int 2\r\n        public 'name' => string 'Thief: The Dark Project' (length=23)\r\n```\r\n\r\nIf you pass a boolean `true` as a second parameter, then you will get an object with a `count` property containing the item count from the selected endpoint filtered by the `$query` filters.\r\n\r\n```php\r\n<?php\r\n    // a query against the game endpoint with a second true parameter\r\n    // note the second boolean true parameter\r\n    $igdb->game(\"fields id,name; where id = (1,2);\", true);\r\n\r\n?>\r\n```\r\n\r\nThe result of the query above:\r\n```text\r\nobject(stdClass)[3]\r\n    public 'count' => int 2\r\n```\r\n\r\nThe result object's properties will vary depending on the provided field list in the `$query`. From the example result above you can see, the result holds an array, containing two elements. Every element of the result array is an object, containing properties with name of the fields from the `fields` parameter.","html":"<p>Every endpoint method can return two different type of results, depending on the second parameter passed to them.</p>\n<p>By default the second <code>$count</code> parameter is a boolean <code>false</code>. this means, that the query will be executed against the IGDB, returning a <code>$result</code> <strong>array of objects</strong>.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // a query against the game endpoint without a $count parameter\r\n    $igdb->game(\"fields id,name; where id = (1,2);\");\r\n\r\n?>\n</code></pre>\n<p>The result of the query above:</p>\n<pre><code class=\"language-text\">array (size=2)\r\n    0 =>\r\n        object(stdClass)[2]\r\n        public 'id' => int 1\r\n        public 'name' => string 'Thief II: The Metal Age' (length=23)\r\n    1 =>\r\n        object(stdClass)[3]\r\n        public 'id' => int 2\r\n        public 'name' => string 'Thief: The Dark Project' (length=23)\n</code></pre>\n<p>If you pass a boolean <code>true</code> as a second parameter, then you will get an object with a <code>count</code> property containing the item count from the selected endpoint filtered by the <code>$query</code> filters.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n    // a query against the game endpoint with a second true parameter\r\n    // note the second boolean true parameter\r\n    $igdb->game(\"fields id,name; where id = (1,2);\", true);\r\n\r\n?>\n</code></pre>\n<p>The result of the query above:</p>\n<pre><code class=\"language-text\">object(stdClass)[3]\r\n    public 'count' => int 2\n</code></pre>\n<p>The result object's properties will vary depending on the provided field list in the <code>$query</code>. From the example result above you can see, the result holds an array, containing two elements. Every element of the result array is an object, containing properties with name of the fields from the <code>fields</code> parameter.</p>"},"meta":{"revision":0,"created":1669928307766,"version":0},"$loki":78},{"id":"120f8ce2a","slug":"igdb-utils","level":1,"parent":null,"parents":[],"title":"IGDB Utils","date":null,"timestamp":1650326202000,"body":{"stripped":"A utility class to help with some tasks.\n\nThe methods in this class are static, therefore you can use them with the double colon syntax.","markdown":"A utility class to help with some tasks.\r\n\r\n> The methods in this class are [static](https://www.php.net/manual/en/language.oop5.static.php), therefore you can use them with the double colon syntax.","html":"<p>A utility class to help with some tasks.</p>\n<blockquote>\n<p>The methods in this class are <a href=\"https://www.php.net/manual/en/language.oop5.static.php\" target=\"_blank\" rel=\"nofollow\">static</a>, therefore you can use them with the double colon syntax.</p>\n</blockquote>"},"icon":"fa-tools","overview":"Utility tools for making the job easier with the IGDB API","meta":{"revision":0,"created":1669928307766,"version":0},"$loki":79},{"id":"d4710fac5","slug":"authenticate","level":2,"parent":"120f8ce2a","parents":["120f8ce2a"],"title":"Authenticate","date":null,"timestamp":null,"body":{"stripped":"A helper method to generate your access_token. This method will send a post request to the Twitch API with your client_id and client_secret.\n\nParameters:\n\n$client_id: your client id\n\n$client_secret: the client secret generated by twitch\n\nRetunrs: an object decoded from the response from the Twitch API containing three keys: access_token, expires_in and token_type.\n\nIf a non-successful response is recieved from Twitch, an Exception is thrown.\n\n\n\nThe output of the method will contain your new access_token:","markdown":"```php\r\npublic static function authenticate(string $client_id, string $client_secret) throws Exception: object\r\n```\r\n\r\nA helper method to generate your `access_token`. This method will send a post request to the Twitch API with your `client_id` and `client_secret`.\r\n\r\n**Parameters**:\r\n - `$client_id`: your client id\r\n - `$client_secret`: the client secret generated by twitch\r\n\r\n**Retunrs**: an object decoded from the response from the Twitch API containing three keys: `access_token`, `expires_in` and `token_type`.\r\n\r\nIf a non-successful response is recieved from Twitch, an `Exception` is thrown.\r\n\r\n```php\r\n<?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n    try {\r\n        var_dump(IGDBUtils::authenticate(\"{client_id}\", \"{client_secret}\"));\r\n    } catch (Exception $e) {\r\n        // something went wrong\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\r\n```\r\n\r\nThe output of the method will contain your new `access_token`:\r\n\r\n```text\r\nobject(stdClass)[1]\r\n  public 'access_token' => string 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' (length=30)\r\n  public 'expires_in' => int 5269900\r\n  public 'token_type' => string 'bearer' (length=6)\r\n```","html":"<pre><code class=\"language-php\">public static function authenticate(string $client_id, string $client_secret) throws Exception: object\n</code></pre>\n<p>A helper method to generate your <code>access_token</code>. This method will send a post request to the Twitch API with your <code>client_id</code> and <code>client_secret</code>.</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$client_id</code>: your client id</li>\n<li><code>$client_secret</code>: the client secret generated by twitch</li>\n</ul>\n<p><strong>Retunrs</strong>: an object decoded from the response from the Twitch API containing three keys: <code>access_token</code>, <code>expires_in</code> and <code>token_type</code>.</p>\n<p>If a non-successful response is recieved from Twitch, an <code>Exception</code> is thrown.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n    try {\r\n        var_dump(IGDBUtils::authenticate(\"{client_id}\", \"{client_secret}\"));\r\n    } catch (Exception $e) {\r\n        // something went wrong\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\n</code></pre>\n<p>The output of the method will contain your new <code>access_token</code>:</p>\n<pre><code class=\"language-text\">object(stdClass)[1]\r\n  public 'access_token' => string 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' (length=30)\r\n  public 'expires_in' => int 5269900\r\n  public 'token_type' => string 'bearer' (length=6)\n</code></pre>"},"meta":{"revision":0,"created":1669928307766,"version":0},"$loki":80},{"id":"55a6a5dff","slug":"image-url","level":2,"parent":"120f8ce2a","parents":["120f8ce2a"],"title":"Image URL","date":null,"timestamp":null,"body":{"stripped":"Get the URL of a specific sized image for a record.\n\nParameters:\n\n$image_id: the image_id of the image. Each image in the database has it's own id and image_id fields. You must use the image_id field!\n\n$size: the required size. Possible sizes:\n\ncover_small\n\ncover_small\\_2x\n\nscreenshot_med\n\nscreenshot_med\\_2x\n\ncover_big\n\ncover_big\\_2x\n\nlogo_med\n\nlogo_med\\_2x\n\nscreenshot_big\n\nscreenshot_big\\_2x\n\nscreenshot_huge\n\nscreenshot_huge\\_2x\n\nthumb\n\nthumb\\_2x\n\nmicro\n\nmicro\\_2x\n\n720p\n\n720p\\_2x\n\n1080p\n\n1080p\\_2x\n\nIf an invalid second parameter is passed, an IGDBInvalidParameterException will be thrown.\n\n\n\nThe script above will produce the output below:\n\n\n\nOn the last line you can see the 720p version of the image which is a valid url.","markdown":"```php\r\npublic static function image_url(string $image_id, string $size) throws IGDBInvalidParameterException: string\r\n```\r\n\r\nGet the URL of a specific sized image for a record.\r\n\r\n**Parameters**:\r\n - `$image_id`: the `image_id` of the image. Each image in the database has it's own `id` and `image_id` fields. You **must** use the `image_id` field!\r\n - `$size`: the required size. Possible sizes:\r\n   - cover_small\r\n   - cover_small_2x\r\n   - screenshot_med\r\n   - screenshot_med_2x\r\n   - cover_big\r\n   - cover_big_2x\r\n   - logo_med\r\n   - logo_med_2x\r\n   - screenshot_big\r\n   - screenshot_big_2x\r\n   - screenshot_huge\r\n   - screenshot_huge_2x\r\n   - thumb\r\n   - thumb_2x\r\n   - micro\r\n   - micro_2x\r\n   - 720p\r\n   - 720p_2x\r\n   - 1080p\r\n   - 1080p_2x\r\n\r\nIf an invalid second parameter is passed, an `IGDBInvalidParameterException` will be thrown.\r\n\r\n```php\r\n<?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        $result = $igdb->game(\r\n            $builder\r\n                ->fields(\"id, name, artworks.*\")\r\n                ->search(\"uncharted 4\")\r\n                ->limit(1)\r\n                ->build()\r\n        );\r\n\r\n        var_dump($result);\r\n\r\n        // processing the first result's first artwork\r\n        echo \"720p version: \" . IGDBUtils::image_url($result[0]->artworks[0]->image_id, \"720p\");\r\n    } catch (IGDBInvalidParameterException $e) {\r\n        // invalid parameter passed to the builder\r\n        echo $e->getMessage();\r\n    } catch (IGDBEndpointException $e) {\r\n        // failed query\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\r\n```\r\n\r\nThe script above will produce the output below:\r\n\r\n```text\r\narray (size=1)\r\n  0 =>\r\n    object(stdClass)[3]\r\n      public 'id' => int 7331\r\n      public 'artworks' =>\r\n        array (size=5)\r\n          0 =>\r\n            object(stdClass)[4]\r\n              public 'id' => int 6303\r\n              public 'alpha_channel' => boolean false\r\n              public 'animated' => boolean false\r\n              public 'game' => int 7331\r\n              public 'height' => int 1059\r\n              public 'image_id' => string 'ar4v3' (length=5)\r\n              public 'url' => string '//images.igdb.com/igdb/image/upload/t_thumb/ar4v3.jpg' (length=53)\r\n              public 'width' => int 1500\r\n              public 'checksum' => string 'ded76617-94df-a813-28cb-feffebeb9d36' (length=36)\r\n          1 =>\r\n            object(stdClass)[5]\r\n              public 'id' => int 6304\r\n              public 'alpha_channel' => boolean false\r\n              public 'animated' => boolean false\r\n              public 'game' => int 7331\r\n              public 'height' => int 1059\r\n              public 'image_id' => string 'ar4v4' (length=5)\r\n              public 'url' => string '//images.igdb.com/igdb/image/upload/t_thumb/ar4v4.jpg' (length=53)\r\n              public 'width' => int 1500\r\n              public 'checksum' => string '5655acde-a94d-8aa5-8c35-2ef4bc2e965d' (length=36)\r\n          2 =>\r\n            object(stdClass)[6]\r\n              public 'id' => int 6305\r\n              public 'alpha_channel' => boolean false\r\n              public 'animated' => boolean false\r\n              public 'game' => int 7331\r\n              public 'height' => int 1060\r\n              public 'image_id' => string 'ar4v5' (length=5)\r\n              public 'url' => string '//images.igdb.com/igdb/image/upload/t_thumb/ar4v5.jpg' (length=53)\r\n              public 'width' => int 1500\r\n              public 'checksum' => string '30441489-b264-70d7-2d26-86b7c1eb3d3a' (length=36)\r\n          3 =>\r\n            object(stdClass)[7]\r\n              public 'id' => int 6306\r\n              public 'alpha_channel' => boolean false\r\n              public 'animated' => boolean false\r\n              public 'game' => int 7331\r\n              public 'height' => int 1060\r\n              public 'image_id' => string 'ar4v6' (length=5)\r\n              public 'url' => string '//images.igdb.com/igdb/image/upload/t_thumb/ar4v6.jpg' (length=53)\r\n              public 'width' => int 1500\r\n              public 'checksum' => string 'e8629a83-2452-ec8c-2388-f42c6ec21de5' (length=36)\r\n          4 =>\r\n            object(stdClass)[8]\r\n              public 'id' => int 6307\r\n              public 'alpha_channel' => boolean false\r\n              public 'animated' => boolean false\r\n              public 'game' => int 7331\r\n              public 'height' => int 1060\r\n              public 'image_id' => string 'ar4v7' (length=5)\r\n              public 'url' => string '//images.igdb.com/igdb/image/upload/t_thumb/ar4v7.jpg' (length=53)\r\n              public 'width' => int 1500\r\n              public 'checksum' => string 'e0b49da1-76dd-a863-b499-30b7f0ae0c78' (length=36)\r\n      public 'name' => string 'Uncharted 4: A Thief's End' (length=26)\r\n720p version: https://images.igdb.com/igdb/image/upload/t_720p/ar4v3.jpg\r\n```\r\n\r\nOn the last line you can see the 720p version of the image which is a valid url.","html":"<pre><code class=\"language-php\">public static function image_url(string $image_id, string $size) throws IGDBInvalidParameterException: string\n</code></pre>\n<p>Get the URL of a specific sized image for a record.</p>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code>$image_id</code>: the <code>image_id</code> of the image. Each image in the database has it's own <code>id</code> and <code>image_id</code> fields. You <strong>must</strong> use the <code>image_id</code> field!</li>\n<li><code>$size</code>: the required size. Possible sizes:\n<ul>\n<li>cover_small</li>\n<li>cover_small_2x</li>\n<li>screenshot_med</li>\n<li>screenshot_med_2x</li>\n<li>cover_big</li>\n<li>cover_big_2x</li>\n<li>logo_med</li>\n<li>logo_med_2x</li>\n<li>screenshot_big</li>\n<li>screenshot_big_2x</li>\n<li>screenshot_huge</li>\n<li>screenshot_huge_2x</li>\n<li>thumb</li>\n<li>thumb_2x</li>\n<li>micro</li>\n<li>micro_2x</li>\n<li>720p</li>\n<li>720p_2x</li>\n<li>1080p</li>\n<li>1080p_2x</li>\n</ul>\n</li>\n</ul>\n<p>If an invalid second parameter is passed, an <code>IGDBInvalidParameterException</code> will be thrown.</p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    require_once \"class.igdb.php\";\r\n\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        $result = $igdb->game(\r\n            $builder\r\n                ->fields(\"id, name, artworks.*\")\r\n                ->search(\"uncharted 4\")\r\n                ->limit(1)\r\n                ->build()\r\n        );\r\n\r\n        var_dump($result);\r\n\r\n        // processing the first result's first artwork\r\n        echo \"720p version: \" . IGDBUtils::image_url($result[0]->artworks[0]->image_id, \"720p\");\r\n    } catch (IGDBInvalidParameterException $e) {\r\n        // invalid parameter passed to the builder\r\n        echo $e->getMessage();\r\n    } catch (IGDBEndpointException $e) {\r\n        // failed query\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\n</code></pre>\n<p>The script above will produce the output below:</p>\n<pre><code class=\"language-text\">array (size=1)\r\n  0 =>\r\n    object(stdClass)[3]\r\n      public 'id' => int 7331\r\n      public 'artworks' =>\r\n        array (size=5)\r\n          0 =>\r\n            object(stdClass)[4]\r\n              public 'id' => int 6303\r\n              public 'alpha_channel' => boolean false\r\n              public 'animated' => boolean false\r\n              public 'game' => int 7331\r\n              public 'height' => int 1059\r\n              public 'image_id' => string 'ar4v3' (length=5)\r\n              public 'url' => string '//images.igdb.com/igdb/image/upload/t_thumb/ar4v3.jpg' (length=53)\r\n              public 'width' => int 1500\r\n              public 'checksum' => string 'ded76617-94df-a813-28cb-feffebeb9d36' (length=36)\r\n          1 =>\r\n            object(stdClass)[5]\r\n              public 'id' => int 6304\r\n              public 'alpha_channel' => boolean false\r\n              public 'animated' => boolean false\r\n              public 'game' => int 7331\r\n              public 'height' => int 1059\r\n              public 'image_id' => string 'ar4v4' (length=5)\r\n              public 'url' => string '//images.igdb.com/igdb/image/upload/t_thumb/ar4v4.jpg' (length=53)\r\n              public 'width' => int 1500\r\n              public 'checksum' => string '5655acde-a94d-8aa5-8c35-2ef4bc2e965d' (length=36)\r\n          2 =>\r\n            object(stdClass)[6]\r\n              public 'id' => int 6305\r\n              public 'alpha_channel' => boolean false\r\n              public 'animated' => boolean false\r\n              public 'game' => int 7331\r\n              public 'height' => int 1060\r\n              public 'image_id' => string 'ar4v5' (length=5)\r\n              public 'url' => string '//images.igdb.com/igdb/image/upload/t_thumb/ar4v5.jpg' (length=53)\r\n              public 'width' => int 1500\r\n              public 'checksum' => string '30441489-b264-70d7-2d26-86b7c1eb3d3a' (length=36)\r\n          3 =>\r\n            object(stdClass)[7]\r\n              public 'id' => int 6306\r\n              public 'alpha_channel' => boolean false\r\n              public 'animated' => boolean false\r\n              public 'game' => int 7331\r\n              public 'height' => int 1060\r\n              public 'image_id' => string 'ar4v6' (length=5)\r\n              public 'url' => string '//images.igdb.com/igdb/image/upload/t_thumb/ar4v6.jpg' (length=53)\r\n              public 'width' => int 1500\r\n              public 'checksum' => string 'e8629a83-2452-ec8c-2388-f42c6ec21de5' (length=36)\r\n          4 =>\r\n            object(stdClass)[8]\r\n              public 'id' => int 6307\r\n              public 'alpha_channel' => boolean false\r\n              public 'animated' => boolean false\r\n              public 'game' => int 7331\r\n              public 'height' => int 1060\r\n              public 'image_id' => string 'ar4v7' (length=5)\r\n              public 'url' => string '//images.igdb.com/igdb/image/upload/t_thumb/ar4v7.jpg' (length=53)\r\n              public 'width' => int 1500\r\n              public 'checksum' => string 'e0b49da1-76dd-a863-b499-30b7f0ae0c78' (length=36)\r\n      public 'name' => string 'Uncharted 4: A Thief's End' (length=26)\r\n720p version: https://images.igdb.com/igdb/image/upload/t_720p/ar4v3.jpg\n</code></pre>\n<p>On the last line you can see the 720p version of the image which is a valid url.</p>"},"meta":{"revision":0,"created":1669928307766,"version":0},"$loki":81},{"id":"7c0fcd6a3","slug":"examples","level":1,"parent":null,"parents":[],"title":"Examples","date":null,"timestamp":1669925801000,"body":{"stripped":"The examples in this section will try to cover most of the use cases of the wrapper.\n\n:tip To see your own tokens in the example codes set them up on the home page as described in Using the documentation section!","markdown":"The examples in this section will try to cover most of the use cases of the wrapper.\r\n\r\n>:tip To see your own tokens in the example codes set them up on the home page as described in [Using the documentation section](#using-the-documentation)!","html":"<p>The examples in this section will try to cover most of the use cases of the wrapper.</p>\n<blockquote>\n<p>:tip To see your own tokens in the example codes set them up on the home page as described in <a href=\"#using-the-documentation\">Using the documentation section</a>!</p>\n</blockquote>"},"icon":"fa-code","overview":"Working examples, covering most of the functionalities of the wrapper","meta":{"revision":0,"created":1669928307766,"version":0},"$loki":82},{"id":"5cb86b26a","slug":"basic-example","level":2,"parent":"7c0fcd6a3","parents":["7c0fcd6a3"],"title":"Basic Example","date":null,"timestamp":null,"body":{"stripped":"A basic example to send your apicalypse query to the IGDB API.\n\nMake sure to place your endpoint method calls in a try...catch block to be able to catch errors!\n\nCode\n\n\n\nResult","markdown":"A basic example to send your apicalypse query to the IGDB API.\r\n\r\n> Make sure to place your [endpoint method](#endpoints) calls in a try...catch block to be able to catch errors!\r\n\r\n**Code**\r\n\r\n```php\r\n<?php\r\n\r\n    // importing the wrapper\r\n    require 'class.igdb.php';\r\n\r\n    // instantiating the wrapper\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n    // your query string\r\n    $query = 'search \"uncharted\"; fields id,name,cover; limit 5; offset 10;';\r\n\r\n    try {\r\n        // executing the query\r\n        $games = $igdb->game($query);\r\n\r\n        // showing the results\r\n        var_dump($games);\r\n    } catch (IGDBEnpointException $e) {\r\n        // a non-successful response recieved from the IGDB API\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\r\n```\r\n\r\n**Result**\r\n\r\n```text\r\narray (size=5)\r\n  0 =>\r\n    object(stdClass)[3]\r\n      public 'id' => int 125062\r\n      public 'cover' => int 83686\r\n      public 'name' => string 'Uncharted Ocean: Set Sail' (length=25)\r\n  1 =>\r\n    object(stdClass)[4]\r\n      public 'id' => int 19583\r\n      public 'cover' => int 15883\r\n      public 'name' => string 'Uncharted: Fight for Fortune' (length=28)\r\n  2 =>\r\n    object(stdClass)[5]\r\n      public 'id' => int 26193\r\n      public 'cover' => int 85149\r\n      public 'name' => string 'Uncharted: The Lost Legacy' (length=26)\r\n  3 =>\r\n    object(stdClass)[6]\r\n      public 'id' => int 19609\r\n      public 'cover' => int 85164\r\n      public 'name' => string 'Uncharted: Fortune Hunter' (length=25)\r\n  4 =>\r\n    object(stdClass)[7]\r\n      public 'id' => int 7331\r\n      public 'cover' => int 81917\r\n      public 'name' => string 'Uncharted 4: A Thief's End' (length=26)\r\n```","html":"<p>A basic example to send your apicalypse query to the IGDB API.</p>\n<blockquote>\n<p>Make sure to place your <a href=\"#endpoints\">endpoint method</a> calls in a try...catch block to be able to catch errors!</p>\n</blockquote>\n<p><strong>Code</strong></p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // importing the wrapper\r\n    require 'class.igdb.php';\r\n\r\n    // instantiating the wrapper\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n    // your query string\r\n    $query = 'search \"uncharted\"; fields id,name,cover; limit 5; offset 10;';\r\n\r\n    try {\r\n        // executing the query\r\n        $games = $igdb->game($query);\r\n\r\n        // showing the results\r\n        var_dump($games);\r\n    } catch (IGDBEnpointException $e) {\r\n        // a non-successful response recieved from the IGDB API\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\n</code></pre>\n<p><strong>Result</strong></p>\n<pre><code class=\"language-text\">array (size=5)\r\n  0 =>\r\n    object(stdClass)[3]\r\n      public 'id' => int 125062\r\n      public 'cover' => int 83686\r\n      public 'name' => string 'Uncharted Ocean: Set Sail' (length=25)\r\n  1 =>\r\n    object(stdClass)[4]\r\n      public 'id' => int 19583\r\n      public 'cover' => int 15883\r\n      public 'name' => string 'Uncharted: Fight for Fortune' (length=28)\r\n  2 =>\r\n    object(stdClass)[5]\r\n      public 'id' => int 26193\r\n      public 'cover' => int 85149\r\n      public 'name' => string 'Uncharted: The Lost Legacy' (length=26)\r\n  3 =>\r\n    object(stdClass)[6]\r\n      public 'id' => int 19609\r\n      public 'cover' => int 85164\r\n      public 'name' => string 'Uncharted: Fortune Hunter' (length=25)\r\n  4 =>\r\n    object(stdClass)[7]\r\n      public 'id' => int 7331\r\n      public 'cover' => int 81917\r\n      public 'name' => string 'Uncharted 4: A Thief's End' (length=26)\n</code></pre>"},"meta":{"revision":0,"created":1669928307767,"version":0},"$loki":83},{"id":"f92a74ec1","slug":"using-the-query-builder","level":2,"parent":"7c0fcd6a3","parents":["7c0fcd6a3"],"title":"Using the Query Builder","date":null,"timestamp":null,"body":{"stripped":"An example to see how to use the IGDB Query Builder to build the query strings.\n\nMake sure to place your query builder configuration and endpoint method calls in a try...catch block to be able to catch errors!\n\nCode\n\n\n\nResult","markdown":"An example to see how to use the [IGDB Query Builder](#igdb-query-builder) to build the query strings.\r\n\r\n> Make sure to place your [query builder configuration](#configuring-methods) and [endpoint method](#endpoints) calls in a try...catch block to be able to catch errors!\r\n\r\n**Code**\r\n\r\n```php\r\n<?php\r\n\r\n    // importing the wrapper\r\n    require 'class.igdb.php';\r\n\r\n    // instantiating the wrapper\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n    // instantiate the query builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        // building the query\r\n        $query = $builder\r\n            // searching for games LIKE uncharted\r\n            ->search(\"uncharted\")\r\n            // we want to see these fields in the results\r\n            ->fields(\"id, name, cover\")\r\n            // we only need maximum 5 results per query (pagination)\r\n            ->limit(5)\r\n            // we would like to show the third page; fetch the results from the tenth element (pagination)\r\n            ->offset(10)\r\n            // process the configuration and return a string\r\n            ->build();\r\n\r\n        // executing the query\r\n        $games = $igdb->game($query);\r\n\r\n        // showing the results\r\n        var_dump($games);\r\n    } catch (IGDBInvalidParameterException $e) {\r\n        // an invalid parameter is passed to the query builder\r\n        echo $e->getMessage();\r\n    } catch (IGDBEnpointException $e) {\r\n        // a non-successful response recieved from the IGDB API\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\r\n```\r\n\r\n**Result**\r\n\r\n```text\r\narray (size=5)\r\n  0 =>\r\n    object(stdClass)[3]\r\n      public 'id' => int 125062\r\n      public 'cover' => int 83686\r\n      public 'name' => string 'Uncharted Ocean: Set Sail' (length=25)\r\n  1 =>\r\n    object(stdClass)[4]\r\n      public 'id' => int 19583\r\n      public 'cover' => int 15883\r\n      public 'name' => string 'Uncharted: Fight for Fortune' (length=28)\r\n  2 =>\r\n    object(stdClass)[5]\r\n      public 'id' => int 26193\r\n      public 'cover' => int 85149\r\n      public 'name' => string 'Uncharted: The Lost Legacy' (length=26)\r\n  3 =>\r\n    object(stdClass)[6]\r\n      public 'id' => int 19609\r\n      public 'cover' => int 85164\r\n      public 'name' => string 'Uncharted: Fortune Hunter' (length=25)\r\n  4 =>\r\n    object(stdClass)[7]\r\n      public 'id' => int 7331\r\n      public 'cover' => int 81917\r\n      public 'name' => string 'Uncharted 4: A Thief's End' (length=26)\r\n```","html":"<p>An example to see how to use the <a href=\"#igdb-query-builder\">IGDB Query Builder</a> to build the query strings.</p>\n<blockquote>\n<p>Make sure to place your <a href=\"#configuring-methods\">query builder configuration</a> and <a href=\"#endpoints\">endpoint method</a> calls in a try...catch block to be able to catch errors!</p>\n</blockquote>\n<p><strong>Code</strong></p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // importing the wrapper\r\n    require 'class.igdb.php';\r\n\r\n    // instantiating the wrapper\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n    // instantiate the query builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        // building the query\r\n        $query = $builder\r\n            // searching for games LIKE uncharted\r\n            ->search(\"uncharted\")\r\n            // we want to see these fields in the results\r\n            ->fields(\"id, name, cover\")\r\n            // we only need maximum 5 results per query (pagination)\r\n            ->limit(5)\r\n            // we would like to show the third page; fetch the results from the tenth element (pagination)\r\n            ->offset(10)\r\n            // process the configuration and return a string\r\n            ->build();\r\n\r\n        // executing the query\r\n        $games = $igdb->game($query);\r\n\r\n        // showing the results\r\n        var_dump($games);\r\n    } catch (IGDBInvalidParameterException $e) {\r\n        // an invalid parameter is passed to the query builder\r\n        echo $e->getMessage();\r\n    } catch (IGDBEnpointException $e) {\r\n        // a non-successful response recieved from the IGDB API\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\n</code></pre>\n<p><strong>Result</strong></p>\n<pre><code class=\"language-text\">array (size=5)\r\n  0 =>\r\n    object(stdClass)[3]\r\n      public 'id' => int 125062\r\n      public 'cover' => int 83686\r\n      public 'name' => string 'Uncharted Ocean: Set Sail' (length=25)\r\n  1 =>\r\n    object(stdClass)[4]\r\n      public 'id' => int 19583\r\n      public 'cover' => int 15883\r\n      public 'name' => string 'Uncharted: Fight for Fortune' (length=28)\r\n  2 =>\r\n    object(stdClass)[5]\r\n      public 'id' => int 26193\r\n      public 'cover' => int 85149\r\n      public 'name' => string 'Uncharted: The Lost Legacy' (length=26)\r\n  3 =>\r\n    object(stdClass)[6]\r\n      public 'id' => int 19609\r\n      public 'cover' => int 85164\r\n      public 'name' => string 'Uncharted: Fortune Hunter' (length=25)\r\n  4 =>\r\n    object(stdClass)[7]\r\n      public 'id' => int 7331\r\n      public 'cover' => int 81917\r\n      public 'name' => string 'Uncharted 4: A Thief's End' (length=26)\n</code></pre>"},"meta":{"revision":0,"created":1669928307767,"version":0},"$loki":84},{"id":"a9903112b","slug":"query-builder-with-options","level":2,"parent":"7c0fcd6a3","parents":["7c0fcd6a3"],"title":"Query Builder with Options","date":null,"timestamp":null,"body":{"stripped":"The IGDB Query Builder still supports the legacy $options array to parameterize the query.\n\n:warning Using the Builder this way is not recommended as this functionality may be removed in future versions. Use the builder approach instead.\n\nCode\n\n\n\nResult","markdown":"The [IGDB Query Builder](#igdb-query-builder) still supports the legacy `$options` array to parameterize the query.\r\n\r\n>:warning Using the Builder this way is not recommended as this functionality may be removed in future versions. Use the [builder approach](#builder-approach) instead.\r\n\r\n**Code**\r\n\r\n```php\r\n<?php\r\n\r\n    // importing the wrapper\r\n    require_once \"class.igdb.php\";\r\n\r\n    // instantiating the wrapper\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n    // instantiating the builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    // creating the options array\r\n    $options = array(\r\n        // searching for games LIKE uncharted\r\n        \"search\" => \"uncharted\",\r\n        // we want to see these fields in the results\r\n        \"fields\" => array(\"id\", \"name\", \"cover\"),\r\n        // we only need maximum 5 results per query (pagination)\r\n        \"limit\" => 5,\r\n        // we would like to show the third page; fetch the results from the tenth element (pagination)\r\n        \"offset\" => 10\r\n    );\r\n\r\n    try {\r\n        // adding your $options array with the options method\r\n        $builder->options($options);\r\n\r\n        // building the query\r\n        $query = $builder->build();\r\n\r\n        // executing the query\r\n        $games = $igdb->game($query);\r\n\r\n        // showing the results\r\n        var_dump($games);\r\n    } catch (IGDBInvalidParameterException $e) {\r\n        // an invalid parameter is passed to the query builder\r\n        echo $e->getMessage();\r\n    } catch (IGDBEnpointException $e) {\r\n        // a non-successful response recieved from the IGDB API\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\r\n```\r\n\r\n**Result**\r\n\r\n```text\r\narray (size=5)\r\n  0 =>\r\n    object(stdClass)[3]\r\n      public 'id' => int 125062\r\n      public 'cover' => int 83686\r\n      public 'name' => string 'Uncharted Ocean: Set Sail' (length=25)\r\n  1 =>\r\n    object(stdClass)[4]\r\n      public 'id' => int 19583\r\n      public 'cover' => int 15883\r\n      public 'name' => string 'Uncharted: Fight for Fortune' (length=28)\r\n  2 =>\r\n    object(stdClass)[5]\r\n      public 'id' => int 26193\r\n      public 'cover' => int 85149\r\n      public 'name' => string 'Uncharted: The Lost Legacy' (length=26)\r\n  3 =>\r\n    object(stdClass)[6]\r\n      public 'id' => int 19609\r\n      public 'cover' => int 85164\r\n      public 'name' => string 'Uncharted: Fortune Hunter' (length=25)\r\n  4 =>\r\n    object(stdClass)[7]\r\n      public 'id' => int 7331\r\n      public 'cover' => int 81917\r\n      public 'name' => string 'Uncharted 4: A Thief's End' (length=26)\r\n```","html":"<p>The <a href=\"#igdb-query-builder\">IGDB Query Builder</a> still supports the legacy <code>$options</code> array to parameterize the query.</p>\n<blockquote>\n<p>:warning Using the Builder this way is not recommended as this functionality may be removed in future versions. Use the <a href=\"#builder-approach\">builder approach</a> instead.</p>\n</blockquote>\n<p><strong>Code</strong></p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // importing the wrapper\r\n    require_once \"class.igdb.php\";\r\n\r\n    // instantiating the wrapper\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n    // instantiating the builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    // creating the options array\r\n    $options = array(\r\n        // searching for games LIKE uncharted\r\n        \"search\" => \"uncharted\",\r\n        // we want to see these fields in the results\r\n        \"fields\" => array(\"id\", \"name\", \"cover\"),\r\n        // we only need maximum 5 results per query (pagination)\r\n        \"limit\" => 5,\r\n        // we would like to show the third page; fetch the results from the tenth element (pagination)\r\n        \"offset\" => 10\r\n    );\r\n\r\n    try {\r\n        // adding your $options array with the options method\r\n        $builder->options($options);\r\n\r\n        // building the query\r\n        $query = $builder->build();\r\n\r\n        // executing the query\r\n        $games = $igdb->game($query);\r\n\r\n        // showing the results\r\n        var_dump($games);\r\n    } catch (IGDBInvalidParameterException $e) {\r\n        // an invalid parameter is passed to the query builder\r\n        echo $e->getMessage();\r\n    } catch (IGDBEnpointException $e) {\r\n        // a non-successful response recieved from the IGDB API\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\n</code></pre>\n<p><strong>Result</strong></p>\n<pre><code class=\"language-text\">array (size=5)\r\n  0 =>\r\n    object(stdClass)[3]\r\n      public 'id' => int 125062\r\n      public 'cover' => int 83686\r\n      public 'name' => string 'Uncharted Ocean: Set Sail' (length=25)\r\n  1 =>\r\n    object(stdClass)[4]\r\n      public 'id' => int 19583\r\n      public 'cover' => int 15883\r\n      public 'name' => string 'Uncharted: Fight for Fortune' (length=28)\r\n  2 =>\r\n    object(stdClass)[5]\r\n      public 'id' => int 26193\r\n      public 'cover' => int 85149\r\n      public 'name' => string 'Uncharted: The Lost Legacy' (length=26)\r\n  3 =>\r\n    object(stdClass)[6]\r\n      public 'id' => int 19609\r\n      public 'cover' => int 85164\r\n      public 'name' => string 'Uncharted: Fortune Hunter' (length=25)\r\n  4 =>\r\n    object(stdClass)[7]\r\n      public 'id' => int 7331\r\n      public 'cover' => int 81917\r\n      public 'name' => string 'Uncharted 4: A Thief's End' (length=26)\n</code></pre>"},"meta":{"revision":0,"created":1669928307767,"version":0},"$loki":85},{"id":"44ae467fe","slug":"counting-results","level":2,"parent":"7c0fcd6a3","parents":["7c0fcd6a3"],"title":"Counting Results","date":null,"timestamp":null,"body":{"stripped":"An example to count the matched records.\n\nWhen true is passed as the second parameter, the return value will be an object with a single property called count. For more details on the return values of the endpoint methods please refer to the return values section.\n\nCode\n\n\n\nResult","markdown":"An example to count the matched records.\r\n\r\n> When `true` is passed as the second parameter, the return value will be an object with a single property called `count`. For more details on the return values of the endpoint methods please refer to the [return values section](#return-values).\r\n\r\n**Code**\r\n\r\n```php\r\n<?php\r\n\r\n    // importing the wrapper\r\n    require 'class.igdb.php';\r\n\r\n    // instantiating the wrapper\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n    // instantiate the query builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        // building the query\r\n        $query = $builder\r\n            // setting a filter to fetch games with rating greater than 75\r\n            ->where(\r\n                array(\r\n                    'field' => 'rating',\r\n                    'postfix' => '>',\r\n                    'value' => 75\r\n                )\r\n            )\r\n            // process the configuration and return a string\r\n            ->build();\r\n\r\n        // executing the query\r\n        // note the second true parameter\r\n        $game_count = $igdb->game($query, true);\r\n\r\n        // showing the results\r\n        var_dump($game_count);\r\n    } catch (IGDBInvalidParameterException $e) {\r\n        // an invalid parameter is passed to the query builder\r\n        echo $e->getMessage();\r\n    } catch (IGDBEnpointException $e) {\r\n        // a non-successful response recieved from the IGDB API\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\r\n```\r\n\r\n**Result**\r\n\r\n```text\r\nobject(stdClass)[3]\r\n  public 'count' => int 8081\r\n```","html":"<p>An example to count the matched records.</p>\n<blockquote>\n<p>When <code>true</code> is passed as the second parameter, the return value will be an object with a single property called <code>count</code>. For more details on the return values of the endpoint methods please refer to the <a href=\"#return-values\">return values section</a>.</p>\n</blockquote>\n<p><strong>Code</strong></p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // importing the wrapper\r\n    require 'class.igdb.php';\r\n\r\n    // instantiating the wrapper\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n    // instantiate the query builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        // building the query\r\n        $query = $builder\r\n            // setting a filter to fetch games with rating greater than 75\r\n            ->where(\r\n                array(\r\n                    'field' => 'rating',\r\n                    'postfix' => '>',\r\n                    'value' => 75\r\n                )\r\n            )\r\n            // process the configuration and return a string\r\n            ->build();\r\n\r\n        // executing the query\r\n        // note the second true parameter\r\n        $game_count = $igdb->game($query, true);\r\n\r\n        // showing the results\r\n        var_dump($game_count);\r\n    } catch (IGDBInvalidParameterException $e) {\r\n        // an invalid parameter is passed to the query builder\r\n        echo $e->getMessage();\r\n    } catch (IGDBEnpointException $e) {\r\n        // a non-successful response recieved from the IGDB API\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\n</code></pre>\n<p><strong>Result</strong></p>\n<pre><code class=\"language-text\">object(stdClass)[3]\r\n  public 'count' => int 8081\n</code></pre>"},"meta":{"revision":0,"created":1669928307767,"version":0},"$loki":86},{"id":"e94af0ae1","slug":"expander","level":2,"parent":"7c0fcd6a3","parents":["7c0fcd6a3"],"title":"Expander","date":null,"timestamp":null,"body":{"stripped":"Some fields are actually ids pointing to other endpoints. The expander feature is a convenient way to go into these other endpoints and access more information from them in the same query, instead of having to do multiple queries.\n\nCode\n\n\n\nResult","markdown":"Some fields are actually ids pointing to other endpoints. The expander feature is a convenient way to go into these other endpoints and access more information from them in the same query, instead of having to do multiple queries.\r\n\r\n**Code**\r\n\r\n```php\r\n<?php\r\n\r\n    // importing the wrapper\r\n    require 'class.igdb.php';\r\n\r\n    // instantiating the wrapper\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n    // instantiate the query builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        // building the query\r\n        $query = $builder\r\n            // fetching the first 2 games by id 1 and 2\r\n            ->id(array(1,2))\r\n            // fields can be expanded with a dot followed by the fields you want to access from a certain endpoint\r\n            ->fields(array(\"name\", \"themes.url\", \"themes.name\"))\r\n            // process the configuration and return a string\r\n            ->build();\r\n\r\n        // executing the query\r\n        $game_count = $igdb->game($query);\r\n\r\n        // showing the results\r\n        var_dump($game_count);\r\n    } catch (IGDBInvalidParameterException $e) {\r\n        // an invalid parameter is passed to the query builder\r\n        echo $e->getMessage();\r\n    } catch (IGDBEnpointException $e) {\r\n        // a non-successful response recieved from the IGDB API\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\r\n```\r\n\r\n**Result**\r\n\r\n```text\r\narray (size=2)\r\n  0 =>\r\n    object(stdClass)[3]\r\n      public 'id' => int 1\r\n      public 'name' => string 'Thief II: The Metal Age' (length=23)\r\n      public 'themes' =>\r\n        array (size=3)\r\n          0 =>\r\n            object(stdClass)[4]\r\n              public 'id' => int 1\r\n              public 'name' => string 'Action' (length=6)\r\n              public 'url' => string 'https://www.igdb.com/themes/action' (length=34)\r\n          1 =>\r\n            object(stdClass)[5]\r\n              public 'id' => int 17\r\n              public 'name' => string 'Fantasy' (length=7)\r\n              public 'url' => string 'https://www.igdb.com/themes/fantasy' (length=35)\r\n          2 =>\r\n            object(stdClass)[6]\r\n              public 'id' => int 23\r\n              public 'name' => string 'Stealth' (length=7)\r\n              public 'url' => string 'https://www.igdb.com/themes/stealth' (length=35)\r\n  1 =>\r\n    object(stdClass)[7]\r\n      public 'id' => int 2\r\n      public 'name' => string 'Thief: The Dark Project' (length=23)\r\n      public 'themes' =>\r\n        array (size=3)\r\n          0 =>\r\n            object(stdClass)[8]\r\n              public 'id' => int 1\r\n              public 'name' => string 'Action' (length=6)\r\n              public 'url' => string 'https://www.igdb.com/themes/action' (length=34)\r\n          1 =>\r\n            object(stdClass)[9]\r\n              public 'id' => int 17\r\n              public 'name' => string 'Fantasy' (length=7)\r\n              public 'url' => string 'https://www.igdb.com/themes/fantasy' (length=35)\r\n          2 =>\r\n            object(stdClass)[10]\r\n              public 'id' => int 23\r\n              public 'name' => string 'Stealth' (length=7)\r\n              public 'url' => string 'https://www.igdb.com/themes/stealth' (length=35)\r\n```","html":"<p>Some fields are actually ids pointing to other endpoints. The expander feature is a convenient way to go into these other endpoints and access more information from them in the same query, instead of having to do multiple queries.</p>\n<p><strong>Code</strong></p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // importing the wrapper\r\n    require 'class.igdb.php';\r\n\r\n    // instantiating the wrapper\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n    // instantiate the query builder\r\n    $builder = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        // building the query\r\n        $query = $builder\r\n            // fetching the first 2 games by id 1 and 2\r\n            ->id(array(1,2))\r\n            // fields can be expanded with a dot followed by the fields you want to access from a certain endpoint\r\n            ->fields(array(\"name\", \"themes.url\", \"themes.name\"))\r\n            // process the configuration and return a string\r\n            ->build();\r\n\r\n        // executing the query\r\n        $game_count = $igdb->game($query);\r\n\r\n        // showing the results\r\n        var_dump($game_count);\r\n    } catch (IGDBInvalidParameterException $e) {\r\n        // an invalid parameter is passed to the query builder\r\n        echo $e->getMessage();\r\n    } catch (IGDBEnpointException $e) {\r\n        // a non-successful response recieved from the IGDB API\r\n        echo $e->getMessage();\r\n    }\r\n\r\n?>\n</code></pre>\n<p><strong>Result</strong></p>\n<pre><code class=\"language-text\">array (size=2)\r\n  0 =>\r\n    object(stdClass)[3]\r\n      public 'id' => int 1\r\n      public 'name' => string 'Thief II: The Metal Age' (length=23)\r\n      public 'themes' =>\r\n        array (size=3)\r\n          0 =>\r\n            object(stdClass)[4]\r\n              public 'id' => int 1\r\n              public 'name' => string 'Action' (length=6)\r\n              public 'url' => string 'https://www.igdb.com/themes/action' (length=34)\r\n          1 =>\r\n            object(stdClass)[5]\r\n              public 'id' => int 17\r\n              public 'name' => string 'Fantasy' (length=7)\r\n              public 'url' => string 'https://www.igdb.com/themes/fantasy' (length=35)\r\n          2 =>\r\n            object(stdClass)[6]\r\n              public 'id' => int 23\r\n              public 'name' => string 'Stealth' (length=7)\r\n              public 'url' => string 'https://www.igdb.com/themes/stealth' (length=35)\r\n  1 =>\r\n    object(stdClass)[7]\r\n      public 'id' => int 2\r\n      public 'name' => string 'Thief: The Dark Project' (length=23)\r\n      public 'themes' =>\r\n        array (size=3)\r\n          0 =>\r\n            object(stdClass)[8]\r\n              public 'id' => int 1\r\n              public 'name' => string 'Action' (length=6)\r\n              public 'url' => string 'https://www.igdb.com/themes/action' (length=34)\r\n          1 =>\r\n            object(stdClass)[9]\r\n              public 'id' => int 17\r\n              public 'name' => string 'Fantasy' (length=7)\r\n              public 'url' => string 'https://www.igdb.com/themes/fantasy' (length=35)\r\n          2 =>\r\n            object(stdClass)[10]\r\n              public 'id' => int 23\r\n              public 'name' => string 'Stealth' (length=7)\r\n              public 'url' => string 'https://www.igdb.com/themes/stealth' (length=35)\n</code></pre>"},"meta":{"revision":0,"created":1669928307767,"version":0},"$loki":87},{"id":"87e391b38","slug":"multiquery-ii","level":2,"parent":"7c0fcd6a3","parents":["7c0fcd6a3"],"title":"MultiQuery","date":null,"timestamp":null,"body":{"stripped":"Using multiquery multiple queries can be executed against the IGDB database using a single query. The multiquery method expects an array of multiquery query strings.\n\n:info Using the build method with a boolean true parameter, a query will be returned with a multiquery syntax.\n\nCode\n\n\n\nResult","markdown":"Using multiquery multiple queries can be executed against the IGDB database using a single query. The multiquery method expects an array of multiquery query strings.\r\n\r\n>:info Using the [`build`](#building-the-query) method with a boolean `true` parameter, a query will be returned with a multiquery syntax.\r\n\r\n**Code**\r\n\r\n```php\r\n<?php\r\n\r\n    // importing the wrapper\r\n    require_once \"class.igdb.php\";\r\n\r\n    // instantiate the wrapper\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n    // query builder for the main game\r\n    $main = new IGDBQueryBuilder();\r\n\r\n    // query builder for the bundles\r\n    $bundle = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        // configuring the main query\r\n        $main\r\n            ->name(\"Main Game\")\r\n            ->endpoint(\"game\")\r\n            ->fields(\"id,name\")\r\n            ->where(\"id = 25076\");\r\n\r\n        // configuring the bundle query\r\n        $bundle\r\n            ->name(\"Bundles\")\r\n            ->endpoint(\"game\")\r\n            ->fields(\"id,name,version_parent,category\")\r\n            ->where(\"version_parent = 25076\")\r\n            ->where(\"category = 0\");\r\n\r\n        var_dump(\r\n            $igdb->multiquery(\r\n                array(\r\n                    $main->build(true),\r\n                    $bundle->build(true)\r\n                )\r\n            )\r\n        );\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // a builder property is invalid\r\n        echo $e->getMessage();\r\n    } catch (IGDBEndpointException $e) {\r\n        // something went wront with the query\r\n        echo $e->getMessage();\r\n    }\r\n?>\r\n```\r\n\r\n**Result**\r\n\r\n```text\r\narray (size=2)\r\n  0 =>\r\n    object(stdClass)[4]\r\n      public 'name' => string 'Main Game' (length=9)\r\n      public 'result' =>\r\n        array (size=1)\r\n          0 =>\r\n            object(stdClass)[5]\r\n              public 'id' => int 25076\r\n              public 'name' => string 'Red Dead Redemption 2' (length=21)\r\n  1 =>\r\n    object(stdClass)[6]\r\n      public 'name' => string 'Bundles' (length=7)\r\n      public 'result' =>\r\n        array (size=3)\r\n          0 =>\r\n            object(stdClass)[7]\r\n              public 'id' => int 103205\r\n              public 'category' => int 0\r\n              public 'name' => string 'Red Dead Redemption 2: Special Edition' (length=38)\r\n              public 'version_parent' => int 25076\r\n          1 =>\r\n            object(stdClass)[8]\r\n              public 'id' => int 103207\r\n              public 'category' => int 0\r\n              public 'name' => string 'Red Dead Redemption 2: Collector's Box' (length=38)\r\n              public 'version_parent' => int 25076\r\n          2 =>\r\n            object(stdClass)[9]\r\n              public 'id' => int 103206\r\n              public 'category' => int 0\r\n              public 'name' => string 'Red dead Redemption 2: Ultimate Edition' (length=39)\r\n              public 'version_parent' => int 25076\r\n```","html":"<p>Using multiquery multiple queries can be executed against the IGDB database using a single query. The multiquery method expects an array of multiquery query strings.</p>\n<blockquote>\n<p>:info Using the <a href=\"#building-the-query\"><code>build</code></a> method with a boolean <code>true</code> parameter, a query will be returned with a multiquery syntax.</p>\n</blockquote>\n<p><strong>Code</strong></p>\n<pre><code class=\"language-php\">&#x3C;?php\r\n\r\n    // importing the wrapper\r\n    require_once \"class.igdb.php\";\r\n\r\n    // instantiate the wrapper\r\n    $igdb = new IGDB(\"{client_id}\", \"{access_token}\");\r\n\r\n    // query builder for the main game\r\n    $main = new IGDBQueryBuilder();\r\n\r\n    // query builder for the bundles\r\n    $bundle = new IGDBQueryBuilder();\r\n\r\n    try {\r\n        // configuring the main query\r\n        $main\r\n            ->name(\"Main Game\")\r\n            ->endpoint(\"game\")\r\n            ->fields(\"id,name\")\r\n            ->where(\"id = 25076\");\r\n\r\n        // configuring the bundle query\r\n        $bundle\r\n            ->name(\"Bundles\")\r\n            ->endpoint(\"game\")\r\n            ->fields(\"id,name,version_parent,category\")\r\n            ->where(\"version_parent = 25076\")\r\n            ->where(\"category = 0\");\r\n\r\n        var_dump(\r\n            $igdb->multiquery(\r\n                array(\r\n                    $main->build(true),\r\n                    $bundle->build(true)\r\n                )\r\n            )\r\n        );\r\n    } catch (IGDBInvaliParameterException $e) {\r\n        // a builder property is invalid\r\n        echo $e->getMessage();\r\n    } catch (IGDBEndpointException $e) {\r\n        // something went wront with the query\r\n        echo $e->getMessage();\r\n    }\r\n?>\n</code></pre>\n<p><strong>Result</strong></p>\n<pre><code class=\"language-text\">array (size=2)\r\n  0 =>\r\n    object(stdClass)[4]\r\n      public 'name' => string 'Main Game' (length=9)\r\n      public 'result' =>\r\n        array (size=1)\r\n          0 =>\r\n            object(stdClass)[5]\r\n              public 'id' => int 25076\r\n              public 'name' => string 'Red Dead Redemption 2' (length=21)\r\n  1 =>\r\n    object(stdClass)[6]\r\n      public 'name' => string 'Bundles' (length=7)\r\n      public 'result' =>\r\n        array (size=3)\r\n          0 =>\r\n            object(stdClass)[7]\r\n              public 'id' => int 103205\r\n              public 'category' => int 0\r\n              public 'name' => string 'Red Dead Redemption 2: Special Edition' (length=38)\r\n              public 'version_parent' => int 25076\r\n          1 =>\r\n            object(stdClass)[8]\r\n              public 'id' => int 103207\r\n              public 'category' => int 0\r\n              public 'name' => string 'Red Dead Redemption 2: Collector's Box' (length=38)\r\n              public 'version_parent' => int 25076\r\n          2 =>\r\n            object(stdClass)[9]\r\n              public 'id' => int 103206\r\n              public 'category' => int 0\r\n              public 'name' => string 'Red dead Redemption 2: Ultimate Edition' (length=39)\r\n              public 'version_parent' => int 25076\n</code></pre>"},"meta":{"revision":0,"created":1669928307767,"version":0},"$loki":88},{"id":"74d88cc7c","slug":"change-log","level":1,"parent":null,"parents":[],"title":"Change Log","date":null,"timestamp":1650388071000,"body":{"stripped":"","markdown":"","html":""},"icon":"fa-clipboard-list","overview":"Changes, updates, notes.","meta":{"revision":0,"created":1669928307767,"version":0},"$loki":89},{"id":"d74910aa1","slug":"v4-3-1---april-19--2022","level":2,"parent":"74d88cc7c","parents":["74d88cc7c"],"title":"v4.3.1 - April 19, 2022","date":null,"timestamp":null,"body":{"stripped":"IGDBEndpointException\n\nAdded a getResponseCode() to fetch http response code from IGDB API\n\nAdded sections to the documentation:\n\nHandling Errors\n\nHandling Builder Errors\n\nHandling Request Errors","markdown":"- IGDBEndpointException\r\n   - Added a `getResponseCode()` to fetch http response code from IGDB API\r\n - Added sections to the documentation:\r\n   - [Handling Errors](#handling-errors)\r\n   - [Handling Builder Errors](#handling-builder-errors)\r\n   - [Handling Request Errors](#handling-request-errors)","html":"<ul>\n<li>IGDBEndpointException\n<ul>\n<li>Added a <code>getResponseCode()</code> to fetch http response code from IGDB API</li>\n</ul>\n</li>\n<li>Added sections to the documentation:\n<ul>\n<li><a href=\"#handling-errors\">Handling Errors</a></li>\n<li><a href=\"#handling-builder-errors\">Handling Builder Errors</a></li>\n<li><a href=\"#handling-request-errors\">Handling Request Errors</a></li>\n</ul>\n</li>\n</ul>"},"meta":{"revision":0,"created":1669928307767,"version":0},"$loki":90},{"id":"423a0698c","slug":"v4-3-0---august-19--2021","level":2,"parent":"74d88cc7c","parents":["74d88cc7c"],"title":"v4.3.0 - August 19, 2021","date":null,"timestamp":null,"body":{"stripped":"IGDBQueryBuilder: three new properties introduced for multiquery:\n\nname\n\nendpoint\n\ncount\n\nIGDBQueryBuilder: build method signature updated\n\nIGDBWrapper: multiquery updated to accept array of queries","markdown":"- IGDBQueryBuilder: three new properties introduced for multiquery:\r\n  - [name](#name)\r\n  - [endpoint](#endpoint)\r\n  - [count](#count)\r\n - IGDBQueryBuilder: [build method](#building-the-query) signature updated\r\n - IGDBWrapper: [multiquery](#multiquery) updated to accept array of queries","html":"<ul>\n<li>IGDBQueryBuilder: three new properties introduced for multiquery:\n<ul>\n<li><a href=\"#name\">name</a></li>\n<li><a href=\"#endpoint\">endpoint</a></li>\n<li><a href=\"#count\">count</a></li>\n</ul>\n</li>\n<li>IGDBQueryBuilder: <a href=\"#building-the-query\">build method</a> signature updated</li>\n<li>IGDBWrapper: <a href=\"#multiquery\">multiquery</a> updated to accept array of queries</li>\n</ul>"},"meta":{"revision":0,"created":1669928307767,"version":0},"$loki":91},{"id":"5d1b0cbde","slug":"v4-2-0---may-22--2021","level":2,"parent":"74d88cc7c","parents":["74d88cc7c"],"title":"v4.2.0 - May 22, 2021","date":null,"timestamp":null,"body":{"stripped":"IGDBQueryBuilder: Moved the $options array parsing to the options() method\n\nIGDBQueryBuilder: reset() method added","markdown":"- IGDBQueryBuilder: Moved the `$options` array parsing to the [`options()`](#options) method\r\n - IGDBQueryBuilder: [`reset()`](#reset) method added","html":"<ul>\n<li>IGDBQueryBuilder: Moved the <code>$options</code> array parsing to the <a href=\"#options\"><code>options()</code></a> method</li>\n<li>IGDBQueryBuilder: <a href=\"#reset\"><code>reset()</code></a> method added</li>\n</ul>"},"meta":{"revision":0,"created":1669928307767,"version":0},"$loki":92},{"id":"372e281b6","slug":"v4-1-2---may-20--2021","level":2,"parent":"74d88cc7c","parents":["74d88cc7c"],"title":"v4.1.2 - May 20, 2021","date":null,"timestamp":null,"body":{"stripped":"Minor updates to the readme","markdown":"- Minor updates to the readme","html":"<ul>\n<li>Minor updates to the readme</li>\n</ul>"},"meta":{"revision":0,"created":1669928307767,"version":0},"$loki":93},{"id":"2701c9d2a","slug":"v4-1-1---may-20--2021","level":2,"parent":"74d88cc7c","parents":["74d88cc7c"],"title":"v4.1.1 - May 20, 2021","date":null,"timestamp":null,"body":{"stripped":"Removed a debugging var_dump from the IGDB Wrapper\n\nUpdated the documentation with a Query Builder example with $options array","markdown":"- Removed a debugging var_dump from the IGDB Wrapper\r\n - Updated the documentation with a [Query Builder example](#query-builder-with-options) with `$options` array","html":"<ul>\n<li>Removed a debugging var_dump from the IGDB Wrapper</li>\n<li>Updated the documentation with a <a href=\"#query-builder-with-options\">Query Builder example</a> with <code>$options</code> array</li>\n</ul>"},"meta":{"revision":0,"created":1669928307767,"version":0},"$loki":94},{"id":"76abab623","slug":"v4-1-0---may-15--2021","level":2,"parent":"74d88cc7c","parents":["74d88cc7c"],"title":"v4.1.0 - May 15, 2021","date":null,"timestamp":null,"body":{"stripped":"The wrapper got a brand new documentation!\n\nIntroduced the IGDBQueryBuilder class\n\nIntroduced the IGDB Utils class\n\nIntroduced IGDBEndpointException and IGDBInvalidParameterException classes\n\nThe wrapper endpoint methods no longer accepts $options, only apicalypse query strings","markdown":"- The wrapper got a brand new documentation!\r\n - Introduced the [IGDBQueryBuilder](#igdb-query-builder) class\r\n - Introduced the [IGDB Utils](#igdb-utils) class\r\n - Introduced `IGDBEndpointException` and `IGDBInvalidParameterException` classes\r\n - The wrapper [endpoint methods](#endpoints) no longer accepts `$options`, only [apicalypse query strings](https://api-docs.igdb.com/#apicalypse-1)","html":"<ul>\n<li>The wrapper got a brand new documentation!</li>\n<li>Introduced the <a href=\"#igdb-query-builder\">IGDBQueryBuilder</a> class</li>\n<li>Introduced the <a href=\"#igdb-utils\">IGDB Utils</a> class</li>\n<li>Introduced <code>IGDBEndpointException</code> and <code>IGDBInvalidParameterException</code> classes</li>\n<li>The wrapper <a href=\"#endpoints\">endpoint methods</a> no longer accepts <code>$options</code>, only <a href=\"https://api-docs.igdb.com/#apicalypse-1\" target=\"_blank\" rel=\"nofollow\">apicalypse query strings</a></li>\n</ul>"},"meta":{"revision":0,"created":1669928307767,"version":0},"$loki":95},{"id":"e65278b7c","slug":"v4-0-2---april-28--2021","level":2,"parent":"74d88cc7c","parents":["74d88cc7c"],"title":"v4.0.2 - April 28, 2021","date":null,"timestamp":null,"body":{"stripped":"Updated error response handling from IGDB","markdown":"- Updated error response handling from IGDB","html":"<ul>\n<li>Updated error response handling from IGDB</li>\n</ul>"},"meta":{"revision":0,"created":1669928307767,"version":0},"$loki":96},{"id":"013a9637f","slug":"v4-0-1---february-18--2021","level":2,"parent":"74d88cc7c","parents":["74d88cc7c"],"title":"v4.0.1 - February 18, 2021","date":null,"timestamp":null,"body":{"stripped":"Minor updates to the Readme","markdown":"- Minor updates to the Readme","html":"<ul>\n<li>Minor updates to the Readme</li>\n</ul>"},"meta":{"revision":0,"created":1669928307767,"version":0},"$loki":97},{"id":"b7b4054c7","slug":"v4-0-0---october-20--2020","level":2,"parent":"74d88cc7c","parents":["74d88cc7c"],"title":"v4.0.0 - October 20, 2020","date":null,"timestamp":null,"body":{"stripped":"IGDB Api v4 compatibility update\n\nUpdated Class constructor to accept the new tokens from Twitch\n\nRemoved API KEY\n\nRemoved IGDB::api_status() method\n\nRemoved Endpoint methods according to the IGDB Changes\n\nRenamed methods:\n\n\\_init_curl() => \\_curl_init()\n\nclose_curl() => curl_close()\n\nreinit_curl() => curl_reinit()\n\nUpdated endpoint methods to accept apicalypse strings as well\n\nImplemented Multiquery","markdown":"- **IGDB Api v4 compatibility update**\r\n - Updated Class constructor to accept the new tokens from Twitch\r\n - Removed API KEY\r\n - Removed `IGDB::api_status()` method\r\n - Removed Endpoint methods according to the [IGDB Changes](https://api-docs.igdb.com/#breaking-changes)\r\n - Renamed methods:\r\n   - `_init_curl() => _curl_init()`\r\n   - `close_curl() => curl_close()`\r\n   - `reinit_curl() => curl_reinit()`\r\n - Updated endpoint methods to accept apicalypse strings as well\r\n - Implemented [Multiquery](#multiquery)","html":"<ul>\n<li><strong>IGDB Api v4 compatibility update</strong></li>\n<li>Updated Class constructor to accept the new tokens from Twitch</li>\n<li>Removed API KEY</li>\n<li>Removed <code>IGDB::api_status()</code> method</li>\n<li>Removed Endpoint methods according to the <a href=\"https://api-docs.igdb.com/#breaking-changes\" target=\"_blank\" rel=\"nofollow\">IGDB Changes</a></li>\n<li>Renamed methods:\n<ul>\n<li><code>_init_curl() => _curl_init()</code></li>\n<li><code>close_curl() => curl_close()</code></li>\n<li><code>reinit_curl() => curl_reinit()</code></li>\n</ul>\n</li>\n<li>Updated endpoint methods to accept apicalypse strings as well</li>\n<li>Implemented <a href=\"#multiquery\">Multiquery</a></li>\n</ul>"},"meta":{"revision":0,"created":1669928307768,"version":0},"$loki":98},{"id":"298de2665","slug":"v2-0-3---september-17--2020","level":2,"parent":"74d88cc7c","parents":["74d88cc7c"],"title":"v2.0.3 - September 17, 2020","date":null,"timestamp":null,"body":{"stripped":"Fixed a bug with the where filter (#6 Issues with slug field)","markdown":"- Fixed a bug with the `where` filter ([#6 Issues with slug field](https://github.com/enisz/igdb/issues/6))","html":"<ul>\n<li>Fixed a bug with the <code>where</code> filter (<a href=\"https://github.com/enisz/igdb/issues/6\" target=\"_blank\" rel=\"nofollow\">#6 Issues with slug field</a>)</li>\n</ul>"},"meta":{"revision":0,"created":1669928307768,"version":0},"$loki":99},{"id":"d080d682a","slug":"v2-0-2---february-03--2020","level":2,"parent":"74d88cc7c","parents":["74d88cc7c"],"title":"v2.0.2 - February 03, 2020","date":null,"timestamp":null,"body":{"stripped":"Fixing inaccurate information in the Readme","markdown":"- Fixing inaccurate information in the Readme","html":"<ul>\n<li>Fixing inaccurate information in the Readme</li>\n</ul>"},"meta":{"revision":0,"created":1669928307768,"version":0},"$loki":100},{"id":"11add3eb9","slug":"v2-0-1---january-27--2020","level":2,"parent":"74d88cc7c","parents":["74d88cc7c"],"title":"v2.0.1 - January 27, 2020","date":null,"timestamp":null,"body":{"stripped":"Minor changes / fixes in the Readme\n\nAdded method \\_construct_url\n\nUpdated every endpoint method to construct the endpoint url's different","markdown":"- Minor changes / fixes in the Readme\r\n - Added method [`_construct_url`](#constructing-urls)\r\n - Updated every endpoint method to construct the endpoint url's different","html":"<ul>\n<li>Minor changes / fixes in the Readme</li>\n<li>Added method <a href=\"#constructing-urls\"><code>_construct_url</code></a></li>\n<li>Updated every endpoint method to construct the endpoint url's different</li>\n</ul>"},"meta":{"revision":0,"created":1669928307768,"version":0},"$loki":101},{"id":"2358c7d63","slug":"v2-0-0---december-04--2019","level":2,"parent":"74d88cc7c","parents":["74d88cc7c"],"title":"v2.0.0 - December 04, 2019","date":null,"timestamp":null,"body":{"stripped":"IGDB Api v3 compatibility update\n\nRemoved expander parameter\n\nRenamed parameter filter to where\n\nRenamed parameter order to sort\n\nRemoved multiple methods:\n\n\\_stringify_options\n\n\\_construct_url\n\ncount\n\ncustom_query\n\nAdded method apicalypse\n\nAdded method api_status\n\nUpdated every endpoint method (removed $execute, added $count)","markdown":"- **IGDB Api v3 compatibility update**\r\n - Removed `expander` parameter\r\n - Renamed parameter `filter` to `where`\r\n - Renamed parameter `order` to `sort`\r\n - Removed multiple methods:\r\n    - `_stringify_options`\r\n    - `_construct_url`\r\n    - `count`\r\n    - `custom_query`\r\n - Added method [`apicalypse`](#convert-options-to-apicalypse-query-string)\r\n - Added method [`api_status`](#get-the-status-of-your-api-key)\r\n - Updated every [endpoint method](#endpoints) (removed `$execute`, added `$count`)","html":"<ul>\n<li><strong>IGDB Api v3 compatibility update</strong></li>\n<li>Removed <code>expander</code> parameter</li>\n<li>Renamed parameter <code>filter</code> to <code>where</code></li>\n<li>Renamed parameter <code>order</code> to <code>sort</code></li>\n<li>Removed multiple methods:\n<ul>\n<li><code>_stringify_options</code></li>\n<li><code>_construct_url</code></li>\n<li><code>count</code></li>\n<li><code>custom_query</code></li>\n</ul>\n</li>\n<li>Added method <a href=\"#convert-options-to-apicalypse-query-string\"><code>apicalypse</code></a></li>\n<li>Added method <a href=\"#get-the-status-of-your-api-key\"><code>api_status</code></a></li>\n<li>Updated every <a href=\"#endpoints\">endpoint method</a> (removed <code>$execute</code>, added <code>$count</code>)</li>\n</ul>"},"meta":{"revision":0,"created":1669928307768,"version":0},"$loki":102},{"id":"3749efed7","slug":"v1-0-5---march-11--2019","level":2,"parent":"74d88cc7c","parents":["74d88cc7c"],"title":"v1.0.5 - March 11, 2019","date":null,"timestamp":null,"body":{"stripped":"Fixed a bug at the request's error handling\n\npublic IGDB::get_request_info() public method added","markdown":"- Fixed a bug at the request's error handling\r\n - [``public IGDB::get_request_info()``](#get-request-information) public method added","html":"<ul>\n<li>Fixed a bug at the request's error handling</li>\n<li><a href=\"#get-request-information\"><code>public IGDB::get_request_info()</code></a> public method added</li>\n</ul>"},"meta":{"revision":0,"created":1669928307768,"version":0},"$loki":103},{"id":"a6c838800","slug":"v1-0-4---march-25--2018","level":2,"parent":"74d88cc7c","parents":["74d88cc7c"],"title":"v1.0.4 - March 25, 2018","date":null,"timestamp":null,"body":{"stripped":"Default properties has been removed.\n\nset_default public method has been removed.","markdown":"- Default properties has been removed.\r\n - set\\_default public method has been removed.","html":"<ul>\n<li>Default properties has been removed.</li>\n<li>set_default public method has been removed.</li>\n</ul>"},"meta":{"revision":0,"created":1669928307768,"version":0},"$loki":104},{"id":"8997784b5","slug":"v1-0-3---march-18--2018","level":2,"parent":"74d88cc7c","parents":["74d88cc7c"],"title":"v1.0.3 - March 18, 2018","date":null,"timestamp":null,"body":{"stripped":"Providing either search or id parameter in the options array are not mandatory anymore.\n\nProviding fields parameter when using expander is not mandatory anymore.\n\nOrdering parameter 'order' in the options array has been renamed to 'direction'. Refer to the order section of the options parameters.\n\nImplemented count method. Refer to the count section of the Readme.\n\nExample count.php has been added.\n\nUpdated Readme","markdown":"- Providing either search or id parameter in the options array are not mandatory anymore.\r\n - Providing fields parameter when using expander is not mandatory anymore.\r\n - Ordering parameter 'order' in the options array has been renamed to 'direction'. Refer to the [order](#order) section of the [options parameters](#options-parameters).\r\n - Implemented count method. Refer to the [count](#count) section of the Readme.\r\n - Example _count.php_ has been added.\r\n - Updated Readme","html":"<ul>\n<li>Providing either search or id parameter in the options array are not mandatory anymore.</li>\n<li>Providing fields parameter when using expander is not mandatory anymore.</li>\n<li>Ordering parameter 'order' in the options array has been renamed to 'direction'. Refer to the <a href=\"#order\">order</a> section of the <a href=\"#options-parameters\">options parameters</a>.</li>\n<li>Implemented count method. Refer to the <a href=\"#count\">count</a> section of the Readme.</li>\n<li>Example <em>count.php</em> has been added.</li>\n<li>Updated Readme</li>\n</ul>"},"meta":{"revision":0,"created":1669928307768,"version":0},"$loki":105},{"id":"b0a9baf6a","slug":"v1-0-2---march-17--2018","level":2,"parent":"74d88cc7c","parents":["74d88cc7c"],"title":"v1.0.2 - March 17, 2018","date":null,"timestamp":null,"body":{"stripped":"Modified the constructor to ask only for the API Key. The API URL has been changed to be fix for every user (by IGDB).\n\nThe API URL and KEY setter and getter methods has been removed.\n\nThe API URL and KEY validator methods has been removed.\n\nNew method for order parameter constructing has been implemented.\n\nStringify Options method is private again. Use the updated endpoint methods instead.\n\nUpdated Endpoint Methods to accept a second optional parameter to return the constructed URL instead of executing the query.\n\nbasic.php example file has been renamed to basic.example.php.\n\norder.php example has been added.\n\norder_subfilter.php example has been added.\n\nAll example files has been modified with the updated constructor.","markdown":"- Modified the [constructor](#initializing-class) to ask only for the API Key. The API URL has been changed to be fix for every user (by IGDB).\r\n - The API URL and KEY setter and getter methods has been removed.\r\n - The API URL and KEY validator methods has been removed.\r\n - New method for order parameter constructing has been implemented.\r\n - [Stringify Options](#stringify-options) method is private again. Use the updated endpoint methods instead.\r\n - Updated [Endpoint Methods](#endpoints) to accept a second optional parameter to return the constructed URL instead of executing the query.\r\n - _basic.php_ example file has been renamed to _basic.example.php_.\r\n - _order.php_ example has been added.\r\n - _order_subfilter.php_ example has been added.\r\n - All example files has been modified with the updated constructor.","html":"<ul>\n<li>Modified the <a href=\"#initializing-class\">constructor</a> to ask only for the API Key. The API URL has been changed to be fix for every user (by IGDB).</li>\n<li>The API URL and KEY setter and getter methods has been removed.</li>\n<li>The API URL and KEY validator methods has been removed.</li>\n<li>New method for order parameter constructing has been implemented.</li>\n<li><a href=\"#stringify-options\">Stringify Options</a> method is private again. Use the updated endpoint methods instead.</li>\n<li>Updated <a href=\"#endpoints\">Endpoint Methods</a> to accept a second optional parameter to return the constructed URL instead of executing the query.</li>\n<li><em>basic.php</em> example file has been renamed to <em>basic.example.php</em>.</li>\n<li><em>order.php</em> example has been added.</li>\n<li><em>order_subfilter.php</em> example has been added.</li>\n<li>All example files has been modified with the updated constructor.</li>\n</ul>"},"meta":{"revision":0,"created":1669928307768,"version":0},"$loki":106},{"id":"58de9f080","slug":"v1-0-1---march-16--2018","level":2,"parent":"74d88cc7c","parents":["74d88cc7c"],"title":"v1.0.1 - March 16, 2018","date":null,"timestamp":null,"body":{"stripped":"Added Changes section to the ReadMe.\n\nFixed filter parameter constructing; the parameter input has been changed.\n\nAdded example snippets to the Options Parameters section.\n\nAdded example file filter_multiple_criteria.php\n\nAdded example file filter_single_criteria.php","markdown":"- Added [Changes](#changes) section to the ReadMe.\r\n - Fixed [filter parameter](#filters) constructing; the parameter input has been changed.\r\n - Added example snippets to the [Options Parameters](#options-parameters) section.\r\n - Added example file _filter_multiple_criteria.php_\r\n - Added example file _filter_single_criteria.php_","html":"<ul>\n<li>Added <a href=\"#changes\">Changes</a> section to the ReadMe.</li>\n<li>Fixed <a href=\"#filters\">filter parameter</a> constructing; the parameter input has been changed.</li>\n<li>Added example snippets to the <a href=\"#options-parameters\">Options Parameters</a> section.</li>\n<li>Added example file <em>filter_multiple_criteria.php</em></li>\n<li>Added example file <em>filter_single_criteria.php</em></li>\n</ul>"},"meta":{"revision":0,"created":1669928307768,"version":0},"$loki":107}],"idIndex":null,"binaryIndices":{},"constraints":null,"uniqueNames":[],"transforms":{},"objType":"templates","dirty":true,"cachedIndex":null,"cachedBinaryIndex":null,"cachedData":null,"adaptiveBinaryIndices":true,"transactional":false,"cloneObjects":false,"cloneMethod":"parse-stringify","asyncListeners":false,"disableMeta":false,"disableChangesApi":true,"disableDeltaChangesApi":true,"autoupdate":false,"serializableIndices":true,"disableFreeze":true,"ttl":null,"maxId":107,"DynamicViews":[],"events":{"insert":[],"update":[],"pre-insert":[],"pre-update":[],"close":[],"flushbuffer":[],"error":[],"delete":[null],"warning":[null]},"changes":[],"dirtyIds":[]}],"databaseVersion":1.5,"engineVersion":1.5,"autosave":false,"autosaveInterval":5000,"autosaveHandle":null,"throttledSaves":true,"options":{"env":"BROWSER","persistenceMethod":"memory","serializationMethod":"normal","destructureDelimiter":"$<\n"},"persistenceMethod":"memory","persistenceAdapter":null,"verbose":false,"events":{"init":[null],"loaded":[],"flushChanges":[],"close":[],"changes":[],"warning":[]},"ENV":"BROWSER"}