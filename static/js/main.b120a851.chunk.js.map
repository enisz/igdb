{"version":3,"sources":["hooks/useBodyClass.js","utils/Database.js","hooks/useUserTokens.js","pages/HomePage.js","pages/DocumentPage.js","App.js","reportWebVitals.js","index.js"],"names":["addBodyClass","className","document","body","classList","add","removeBodyClass","remove","useBodyClass","useEffect","Array","map","database","Lokijs","env","persistenceMethod","loadJSONObject","Datasource","useUserTokens","_clientId","localStorage","getItem","sessionStorage","_accessToken","useState","clientId","setClientId","accessToken","setAccessToken","storeTokens","setStoreTokens","removeItem","setItem","HomePage","topics","setTopics","getCollection","find","aria-hidden","action","method","type","placeholder","name","value","href","data-size","data-show-count","aria-label","data-href","data-width","data-layout","data-action","data-share","target","title","rel","autocomplete","onSubmit","event","preventDefault","htmlFor","style","fontWeight","id","fontFamily","onChange","checked","onClick","length","topic","card","icon","color","overview","to","DocumentPage","params","useParams","paragraphs","setParagraphs","setTopic","theme","setTheme","topicId","topicInfo","findOne","generateStructure","parent","getParagraphs","setTimeout","window","jQuery","scrollspy","offset","on","e","this","hash","scrollTo","HighlightJS","highlightAll","structure","submenu","i","current","next","level","push","Object","keys","output","HtmlToReactParser","HtmlToReact","Parser","processingInstructions","shouldProcessNode","node","processNode","children","Md5","substr","data","replace","ProcessNodeDefinitions","React","processDefaultNode","undefined","parseWithInstructions","html","subitem","sections","link","paragraph","menu","buildMenu","App","from","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b120a851.chunk.js","sourcesContent":["import {useEffect} from 'react';\n\nconst addBodyClass = className => document.body.classList.add(className);\nconst removeBodyClass = className => document.body.classList.remove(className);\n\nexport default function useBodyClass(className) {\n    useEffect(\n        () => {\n            // Set up\n            className instanceof Array ? className.map(addBodyClass) : addBodyClass(className);\n\n            // Clean up\n            return () => {\n                className instanceof Array\n                    ? className.map(removeBodyClass)\n                    : removeBodyClass(className);\n            };\n        },\n        [className]\n    );\n}","import Lokijs from 'lokijs';\nimport Datasource from '../assets/datasource/database.json';\n\nlet database = new Lokijs(\"WrapperDocsDB\", { env : \"BROWSER\", persistenceMethod : \"memory\"});\ndatabase.loadJSONObject(Datasource);\n\n//export const loadDatabase = path => {\n//    return new Promise(\n//        (resolve, reject) => {\n//            fetch(path)\n//            .then(response => response.json())\n//            .then(data => {\n//                database = new Lokijs(\"WrapperDocsDB\", { env : \"BROWSER\", persistenceMethod : \"memory\"});\n//                database.loadJSONObject(data);\n//                resolve();\n//            })\n//            .catch(error => reject(error));\n//        }\n//    );\n//}\n\nexport const getTopics = () => database.getCollection(\"topics\").find({});\n\nexport const getTopic = topicId => database.getCollection(\"topics\").findOne({ id : topicId });\n\nexport const getParagraphs = topicId => database.getCollection(\"paragraphs\").find({ parent : topicId });","import { useEffect, useState } from 'react';\n\nexport default function useUserTokens() {\n    const _clientId = localStorage.getItem(\"client_id\") || sessionStorage.getItem(\"client_id\");\n    const _accessToken = localStorage.getItem(\"access_token\") || sessionStorage.getItem(\"access_token\");\n\n    const [clientId, setClientId] = useState(_clientId == null ? \"\" : _clientId);\n    const [accessToken, setAccessToken] = useState(_accessToken == null ? \"\" : _accessToken);\n    const [storeTokens, setStoreTokens] = useState(localStorage.getItem(\"client_id\") != null || localStorage.getItem(\"access_token\") != null ? true : false);\n\n    useEffect(() => {\n        if(storeTokens) {\n            if(clientId !== \"\") {\n                sessionStorage.removeItem(\"client_id\");\n                localStorage.setItem(\"client_id\", clientId);\n            } else {\n                sessionStorage.removeItem(\"client_id\");\n                localStorage.removeItem(\"client_id\");\n            }\n\n            if(accessToken !== \"\") {\n                sessionStorage.removeItem(\"access_token\");\n                localStorage.setItem(\"access_token\", accessToken);\n            } else {\n                sessionStorage.removeItem(\"access_token\");\n                localStorage.removeItem(\"access_token\");\n            }\n        } else {\n            if(clientId !== \"\") {\n                localStorage.removeItem(\"client_id\");\n                sessionStorage.setItem(\"client_id\", clientId);\n            } else {\n                localStorage.removeItem(\"client_id\");\n                sessionStorage.removeItem(\"client_id\");\n            }\n\n            if(accessToken !== \"\") {\n                localStorage.removeItem(\"access_token\");\n                sessionStorage.setItem(\"access_token\", accessToken);\n            } else {\n                localStorage.removeItem(\"access_token\");\n                sessionStorage.removeItem(\"access_token\");\n            }\n        }\n    }, [clientId, accessToken, storeTokens]);\n\n    return {\n        clientId: clientId,\n        setClientId: setClientId,\n        accessToken: accessToken,\n        setAccessToken: setAccessToken,\n        storeTokens: storeTokens,\n        setStoreTokens: setStoreTokens\n    };\n}","import React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport useBodyClass from '../hooks/useBodyClass';\nimport { getTopics } from '../utils/Database';\nimport GitHubButton from 'react-github-btn'\nimport useUserTokens from '../hooks/useUserTokens';\nimport './HomePage.scss';\n\nexport default function HomePage() {\n    useBodyClass(\"landing-page\");\n    const [topics, setTopics] = useState([]);\n    const {clientId, setClientId, accessToken, setAccessToken, storeTokens, setStoreTokens} = useUserTokens();\n\n    useEffect(() => {\n        setTopics(getTopics());\n    }, []);\n\n    return (\n        <>\n            <header className=\"header text-center\">\n                <div className=\"container\">\n                    <div className=\"branding\">\n                        <h1 className=\"logo\">\n                            <span aria-hidden=\"true\" className=\"icon_documents_alt icon\"></span>\n                            <span className=\"text-highlight\">IGDB</span><span className=\"text-bold\">Wrapper</span>\n                        </h1>\n                    </div>\n                    <div className=\"tagline\">\n                        <p>IGDB API PHP Wrapper Documentation</p>\n                    </div>\n\n                    <div className=\"main-search-box pt-3 pb-4 d-inline-block\">\n                        <form className=\"form-inline search-form justify-content-center\" action=\"\" method=\"get\">\n\n                            <input type=\"text\" placeholder=\"Enter search terms...\" name=\"search\" className=\"form-control search-input\" />\n\n                            <button type=\"submit\" className=\"btn search-btn\" value=\"Search\"><i className=\"fas fa-search\"></i></button>\n\n                        </form>\n                    </div>\n\n                    <div className=\"social-container\">\n\n                        <div className=\"github-btn mb-2\">\n                            <GitHubButton href=\"https://github.com/enisz/igdb\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Star enisz/igdb on GitHub\">Star</GitHubButton>\n                            <GitHubButton href=\"https://github.com/enisz/igdb/fork\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Fork enisz/igdb on GitHub\">Fork</GitHubButton>\n                            <GitHubButton href=\"https://github.com/enisz\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Follow @enisz on GitHub\">Follow @enisz</GitHubButton>\n                        </div>\n\n                        <div className=\"fb-like\" data-href=\"https://themes.3rdwavemedia.com/\" data-width=\"\" data-layout=\"button_count\" data-action=\"like\" data-size=\"small\" data-share=\"true\"></div>\n                    </div>\n                </div>\n            </header>\n\n            <section className=\"cards-section text-center\">\n                <div className=\"container\">\n                    <h2 className=\"title\">Introduction</h2>\n                    <p>This is the documentation of the <a href=\"http://github.com/enisz/igdb\" target=\"_blank\" title=\"IGDB PHP API Wrapper\" rel=\"noreferrer\">API Wrapper Class</a> of the <a href=\"https://www.igdb.com/\" target=\"_blank\" title=\"IGDB\" rel=\"noreferrer\">IGDB Database</a> written in PHP. The wrapper's main purpose is to provide a simple solution to fetch data from the remote database. The latest files can be downloaded from the GitHub repository by clicking the Download button below.</p>\n                    <div className=\"intro\">\n\n                        <div className=\"cta-container\">\n                            <a className=\"btn btn-primary btn-cta\" href=\"https://github.com/enisz/igdb/archive/master.zip\"><i className=\"fas fa-cloud-download-alt\"></i> Download</a>\n                        </div>\n                    </div>\n\n                    <h2 className=\"title\">IGDB Tokens</h2>\n                    <p>If you have your tokens already you can fill this form below. If this form is filled, the example codes in this documentation will be filled with your tokens providing you easy copy-paste examples. If you check the \"Store my tokens\" checkbox, your tokens will be stored in your browser's local storage and will be automatically filled the next time you visit. If not checked, the tokens will be deleted when the browser is closed. </p>\n                    <div className=\"intro\">\n                        <div className=\"cta-container\">\n                            <form autocomplete=\"off\" onSubmit={event => event.preventDefault()}>\n                                <div className=\"row\">\n                                    <div className=\"col-12 col-md-6 mb-3\">\n                                        <label className=\"form-check-label mb-1\" htmlFor=\"client-id-token\" style={{ fontWeight : \"bold\" }}>Client ID</label>\n                                        <input type=\"text\" className=\"form-control\" id=\"client-id-token\" placeholder=\"Client ID\" style={{fontFamily: \"Courier New\"}} value={clientId} onChange={event => setClientId(event.target.value) } />\n                                    </div>\n                                    <div className=\"col-12 col-md-6 mb-3\">\n                                        <label className=\"form-check-label mb-1\" htmlFor=\"access-token-token\" style={{ fontWeight : \"bold\" }}>Access Token</label>\n                                        <input type=\"text\" className=\"form-control\" id=\"access-token\" placeholder=\"Access Token\" style={{fontFamily: \"Courier New\"}} value={accessToken} onChange={event => setAccessToken(event.target.value) } />\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-12 col-sm-6 mb-3\">\n                                        <div className=\"form-check\">\n                                            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"store-tokens\" checked={storeTokens} onChange={event => setStoreTokens(event.target.checked) } />\n                                            <label className=\"form-check-label\" htmlFor=\"store-tokens\">\n                                                Store my tokens\n                                            </label>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-12 col-sm-6 mb-3\">\n                                        <button className=\"btn btn-danger btn-cta\" onClick={() => { setClientId(\"\"); setAccessToken(\"\") }}><i className=\"fas fa-trash-alt\"></i> Delete My Tokens</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n\n                    <div id=\"cards-wrapper\" className=\"cards-wrapper row\">\n                        { topics.length === 0 ? <div>Loading...</div> : topics.map( topic => card(topic) ) }\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}\n\nconst card = ({ id, title, icon, color, overview }) => (\n    <div key={id} className={`item item-${color} col-lg-4 col-6`}>\n        <div className=\"item-inner\">\n            <div className=\"icon-holder\">\n                <i className={`icon fa ${icon}`}></i>\n            </div>\n            <h3 className=\"title\">{title}</h3>\n            <p className=\"intro\">{overview}</p>\n            <NavLink className=\"link\" to={`/document/${id}`}>\n                <span>\n                </span>\n            </NavLink>\n        </div>\n    </div>\n)","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport useBodyClass from '../hooks/useBodyClass';\nimport { getTopic, getParagraphs } from '../utils/Database';\nimport HighlightJS from 'highlight.js';\nimport HtmlToReact from 'html-to-react';\nimport useUserTokens from '../hooks/useUserTokens';\nimport Md5 from 'md5';\n\nexport default function DocumentPage() {\n    const params = useParams();\n    const [paragraphs, setParagraphs] = useState([]);\n    const [topic, setTopic] = useState({});\n    const [theme, setTheme] = useState(\"\");\n    const {clientId, accessToken} = useUserTokens();\n\n    useBodyClass(\"body-\" + theme);\n\n    useEffect(() => {\n        const topicInfo = getTopic(params.document);\n\n        setTopic(topicInfo);\n        setParagraphs(generateStructure(getParagraphs(topicInfo.id)));\n        setTheme(topicInfo.color);\n\n        setTimeout(() => {\n            // Activate scrollspy menu\n            window.jQuery('body').scrollspy({target: '#doc-menu', offset: 100});\n\n            // Smooth scrolling\n            window.jQuery('a.scrollto').on('click', function(e){\n                const target = this.hash;\n                e.preventDefault();\n                window.jQuery('body').scrollTo(target, 800, {offset: 0, 'axis':'y'});\n            });\n\n            HighlightJS.highlightAll();\n        }, 100)\n    }, [params.document]);\n\n\n    // Generating the render structure\n    const generateStructure = paragraphs => {\n        let structure = [];\n        let submenu = [];\n\n        for(let i=0; i<paragraphs.length; i++) {\n            const current = paragraphs[i];\n            const next = i+1 <= paragraphs.length ? paragraphs[i+1] : null;\n\n            if(current.level === 1) {\n                structure.push(current);\n            } else {\n                submenu.push(current);\n\n                if(next == null || next.level === 1) {\n                    structure.push(submenu);\n                    submenu = [];\n                }\n            }\n        }\n\n        return structure;\n    }\n\n    // Generating sections\n    const sections = paragraphs => {\n        let output = [];\n        const HtmlToReactParser = HtmlToReact.Parser;\n        const processNodeDefinitions = new HtmlToReact.ProcessNodeDefinitions(React);\n        const processingInstructions = [\n            {\n                shouldProcessNode: node => node.name && node.name === \"blockquote\",\n                processNode: (node, children) => (\n                    <div key={`callout-${Md5(children[0]).substr(0,10)}`} className=\"callout-block callout-info\">\n                        <div className=\"icon-holder\">\n                            <i className=\"fas fa-info-circle\"></i>\n                        </div>\n                        <div className=\"content\">\n                            <h4 className=\"callout-title\">Note</h4>\n                            {children}\n                        </div>\n                    </div>\n                )\n            },\n            {\n                shouldProcessNode: node => node.parent && node.parent.name && node.parent.name === \"code\" && (clientId !== \"\" || accessToken !== \"\"),\n                processNode: (node, children) => {\n                    if(clientId !== \"\") {\n                        node.data = node.data.replace(\"{client_id}\", clientId);\n                    }\n\n                    if(accessToken !== \"\") {\n                        node.data = node.data.replace(\"{access_token}\", accessToken);\n                    }\n\n                    return node.data;\n                }\n            },\n            {\n                shouldProcessNode: node => true,\n                processNode: processNodeDefinitions.processDefaultNode\n            }\n        ];\n\n        for(let i=0; i<paragraphs.length; i++) {\n            const current = paragraphs[i];\n            const next = i+1 <= paragraphs.length ? paragraphs[i+1] : null;\n\n            if(current.length === undefined) {\n                output.push((\n                    <section key={`${current.id}-section`} id={current.id} className=\"doc-section\">\n                        <h2 className=\"section-title\">{current.title}</h2>\n                        <div className=\"section-block\">\n                            { new HtmlToReactParser().parseWithInstructions(current.body.html, () => true, processingInstructions) }\n                        </div>\n\n                        { next != null && next.length !== undefined && next.map( subitem => (\n                            <div key={subitem.id} id={subitem.id} className=\"section-block\">\n                                <h3 className=\"block-title\">{subitem.title}</h3>\n                                    { new HtmlToReactParser().parseWithInstructions(subitem.body.html, () => true, processingInstructions) }\n                            </div>\n                        )) }\n                    </section>\n                ));\n            }\n        }\n\n        return output;\n    }\n\n    // building the menu\n    const buildMenu = structure => {\n        const link = paragraph => <a key={paragraph.id} className=\"nav-link scrollto\" href={`#${paragraph.id}`}>{paragraph.title}</a>\n        let menu = [];\n\n        for(let i=0; i<structure.length; i++) {\n            const current = structure[i];\n\n            // object\n            if(current.length === undefined) {\n                menu.push(link(current))\n            } else { // array\n                menu.push(\n                    <nav key={`submenu${i}`} className=\"doc-sub-menu nav flex-column\">\n                        {current.map( paragraph => link(paragraph) )}\n                    </nav>\n                )\n            }\n        }\n\n        return menu;\n    }\n\n    return (\n        <>\n            <header id=\"header\" className=\"header\">\n                <div className=\"container\">\n                    <div className=\"branding\">\n                        <h1 className=\"logo\">\n                            <NavLink to=\"/home\">\n                                <span aria-hidden=\"true\" className=\"icon_documents_alt icon\"></span>\n                                <span className=\"text-highlight\">IGDB</span><span className=\"text-bold\">Wrapper</span>\n                            </NavLink>\n                        </h1>\n\n                    </div>\n\n                    <ol className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item\"><NavLink to=\"/home\">Home</NavLink></li>\n                        <li className=\"breadcrumb-item active\">{topic.title}</li>\n                    </ol>\n\n                    <div className=\"top-search-box\">\n                        <form className=\"form-inline search-form justify-content-center\" action=\"\" method=\"get\">\n\n                            <input type=\"text\" placeholder=\"Search...\" name=\"search\" className=\"form-control search-input\" />\n\n                            <button type=\"submit\" className=\"btn search-btn\" value=\"Search\"><i className=\"fas fa-search\"></i></button>\n\n                        </form>\n                    </div>\n\n                </div>\n            </header>\n            <div className=\"doc-wrapper\">\n                <div className=\"container\">\n                    <div id=\"doc-header\" className=\"doc-header text-center\">\n                        <h1 className=\"doc-title\">{Object.keys(topic).length > 0 && <i className={`icon fa ${topic.icon}`}></i>} {topic.title}</h1>\n                        <div className=\"meta\"><i className=\"far fa-clock\"></i> Last updated: Oct 12th, 2020</div>\n                    </div>\n                    <div className=\"doc-body row\">\n                        <div className=\"doc-content col-md-9 col-12 order-1\">\n                            <div className=\"content-inner\">\n                                { paragraphs.length > 0 && sections(paragraphs) }\n                            </div>\n                        </div>\n                        <div className=\"doc-sidebar col-md-3 col-12 order-0 d-none d-md-flex\">\n                            <div id=\"doc-nav\" className=\"doc-nav\">\n                                <nav id=\"doc-menu\" className=\"nav doc-menu flex-column sticky\">\n                                    {paragraphs.length > 0 && buildMenu(paragraphs)}\n                                </nav>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}","import { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport DocumentPage from './pages/DocumentPage';\n\nimport jQuery from 'jquery';\nwindow.jQuery = jQuery;\n\nfunction App() {\n  return (\n    <>\n        <div className=\"page-wrapper\">\n            <BrowserRouter>\n                <Switch>\n                    <Redirect from=\"/\" to=\"/home\" exact />\n                    <Route path=\"/home\" component={HomePage} exact />\n                    <Route path=\"/document/:document\" component={DocumentPage} exact />\n                </Switch>\n            </BrowserRouter>\n        </div>\n\n        <footer className=\"footer text-center\">\n            <div className=\"container\">\n                <small className=\"copyright\">Designed with <i className=\"fas fa-heart\"></i> by <a href=\"https://themes.3rdwavemedia.com/\" target=\"_blank\" rel=\"noreferrer\">Xiaoying Riley</a> for developers</small>\n            </div>\n        </footer>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'jquery/dist/jquery.js';\nimport 'popper.js/dist/umd/popper.js';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport 'jquery.scrollto/jquery.scrollTo.js';\nimport 'stickyfilljs/dist/stickyfill.js';\nimport 'ekko-lightbox/dist/ekko-lightbox.js';\nimport '@fortawesome/fontawesome-free/js/all.js';\n\nimport 'ekko-lightbox/dist/ekko-lightbox.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './assets/css/styles.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport 'eleganticons/css/style.css';\nimport 'highlight.js/styles/atom-one-dark.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}