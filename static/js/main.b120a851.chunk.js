(this["webpackJsonpwrapper-docs-app"]=this["webpackJsonpwrapper-docs-app"]||[]).push([[0],{347:function(e,n,t){},351:function(e,n,t){"use strict";t.r(n);var a=t(1),r=t.n(a),i=t(56),o=t.n(i),s=t(11),l=t(2),d=t(8),c=function(e){return document.body.classList.add(e)},h=function(e){return document.body.classList.remove(e)};function p(e){Object(a.useEffect)((function(){return e instanceof Array?e.map(c):c(e),function(){e instanceof Array?e.map(h):h(e)}}),[e])}var u=t(57),m=t.n(u),g=t(58),f=new m.a("WrapperDocsDB",{env:"BROWSER",persistenceMethod:"memory"});f.loadJSONObject(g);var y=t(20);function b(){var e=localStorage.getItem("client_id")||sessionStorage.getItem("client_id"),n=localStorage.getItem("access_token")||sessionStorage.getItem("access_token"),t=Object(a.useState)(null==e?"":e),r=Object(d.a)(t,2),i=r[0],o=r[1],s=Object(a.useState)(null==n?"":n),l=Object(d.a)(s,2),c=l[0],h=l[1],p=Object(a.useState)(null!=localStorage.getItem("client_id")||null!=localStorage.getItem("access_token")),u=Object(d.a)(p,2),m=u[0],g=u[1];return Object(a.useEffect)((function(){m?(""!==i?(sessionStorage.removeItem("client_id"),localStorage.setItem("client_id",i)):(sessionStorage.removeItem("client_id"),localStorage.removeItem("client_id")),""!==c?(sessionStorage.removeItem("access_token"),localStorage.setItem("access_token",c)):(sessionStorage.removeItem("access_token"),localStorage.removeItem("access_token"))):(""!==i?(localStorage.removeItem("client_id"),sessionStorage.setItem("client_id",i)):(localStorage.removeItem("client_id"),sessionStorage.removeItem("client_id")),""!==c?(localStorage.removeItem("access_token"),sessionStorage.setItem("access_token",c)):(localStorage.removeItem("access_token"),sessionStorage.removeItem("access_token")))}),[i,c,m]),{clientId:i,setClientId:o,accessToken:c,setAccessToken:h,storeTokens:m,setStoreTokens:g}}t(69);var v=t(0);function w(){p("landing-page");var e=Object(a.useState)([]),n=Object(d.a)(e,2),t=n[0],r=n[1],i=b(),o=i.clientId,s=i.setClientId,l=i.accessToken,c=i.setAccessToken,h=i.storeTokens,u=i.setStoreTokens;return Object(a.useEffect)((function(){r(f.getCollection("topics").find({}))}),[]),Object(v.jsxs)(v.Fragment,{children:[Object(v.jsx)("header",{className:"header text-center",children:Object(v.jsxs)("div",{className:"container",children:[Object(v.jsx)("div",{className:"branding",children:Object(v.jsxs)("h1",{className:"logo",children:[Object(v.jsx)("span",{"aria-hidden":"true",className:"icon_documents_alt icon"}),Object(v.jsx)("span",{className:"text-highlight",children:"IGDB"}),Object(v.jsx)("span",{className:"text-bold",children:"Wrapper"})]})}),Object(v.jsx)("div",{className:"tagline",children:Object(v.jsx)("p",{children:"IGDB API PHP Wrapper Documentation"})}),Object(v.jsx)("div",{className:"main-search-box pt-3 pb-4 d-inline-block",children:Object(v.jsxs)("form",{className:"form-inline search-form justify-content-center",action:"",method:"get",children:[Object(v.jsx)("input",{type:"text",placeholder:"Enter search terms...",name:"search",className:"form-control search-input"}),Object(v.jsx)("button",{type:"submit",className:"btn search-btn",value:"Search",children:Object(v.jsx)("i",{className:"fas fa-search"})})]})}),Object(v.jsxs)("div",{className:"social-container",children:[Object(v.jsxs)("div",{className:"github-btn mb-2",children:[Object(v.jsx)(y.a,{href:"https://github.com/enisz/igdb","data-size":"large","data-show-count":"true","aria-label":"Star enisz/igdb on GitHub",children:"Star"}),Object(v.jsx)(y.a,{href:"https://github.com/enisz/igdb/fork","data-size":"large","data-show-count":"true","aria-label":"Fork enisz/igdb on GitHub",children:"Fork"}),Object(v.jsx)(y.a,{href:"https://github.com/enisz","data-size":"large","data-show-count":"true","aria-label":"Follow @enisz on GitHub",children:"Follow @enisz"})]}),Object(v.jsx)("div",{className:"fb-like","data-href":"https://themes.3rdwavemedia.com/","data-width":"","data-layout":"button_count","data-action":"like","data-size":"small","data-share":"true"})]})]})}),Object(v.jsx)("section",{className:"cards-section text-center",children:Object(v.jsxs)("div",{className:"container",children:[Object(v.jsx)("h2",{className:"title",children:"Introduction"}),Object(v.jsxs)("p",{children:["This is the documentation of the ",Object(v.jsx)("a",{href:"http://github.com/enisz/igdb",target:"_blank",title:"IGDB PHP API Wrapper",rel:"noreferrer",children:"API Wrapper Class"})," of the ",Object(v.jsx)("a",{href:"https://www.igdb.com/",target:"_blank",title:"IGDB",rel:"noreferrer",children:"IGDB Database"})," written in PHP. The wrapper's main purpose is to provide a simple solution to fetch data from the remote database. The latest files can be downloaded from the GitHub repository by clicking the Download button below."]}),Object(v.jsx)("div",{className:"intro",children:Object(v.jsx)("div",{className:"cta-container",children:Object(v.jsxs)("a",{className:"btn btn-primary btn-cta",href:"https://github.com/enisz/igdb/archive/master.zip",children:[Object(v.jsx)("i",{className:"fas fa-cloud-download-alt"})," Download"]})})}),Object(v.jsx)("h2",{className:"title",children:"IGDB Tokens"}),Object(v.jsx)("p",{children:'If you have your tokens already you can fill this form below. If this form is filled, the example codes in this documentation will be filled with your tokens providing you easy copy-paste examples. If you check the "Store my tokens" checkbox, your tokens will be stored in your browser\'s local storage and will be automatically filled the next time you visit. If not checked, the tokens will be deleted when the browser is closed. '}),Object(v.jsx)("div",{className:"intro",children:Object(v.jsx)("div",{className:"cta-container",children:Object(v.jsxs)("form",{autocomplete:"off",onSubmit:function(e){return e.preventDefault()},children:[Object(v.jsxs)("div",{className:"row",children:[Object(v.jsxs)("div",{className:"col-12 col-md-6 mb-3",children:[Object(v.jsx)("label",{className:"form-check-label mb-1",htmlFor:"client-id-token",style:{fontWeight:"bold"},children:"Client ID"}),Object(v.jsx)("input",{type:"text",className:"form-control",id:"client-id-token",placeholder:"Client ID",style:{fontFamily:"Courier New"},value:o,onChange:function(e){return s(e.target.value)}})]}),Object(v.jsxs)("div",{className:"col-12 col-md-6 mb-3",children:[Object(v.jsx)("label",{className:"form-check-label mb-1",htmlFor:"access-token-token",style:{fontWeight:"bold"},children:"Access Token"}),Object(v.jsx)("input",{type:"text",className:"form-control",id:"access-token",placeholder:"Access Token",style:{fontFamily:"Courier New"},value:l,onChange:function(e){return c(e.target.value)}})]})]}),Object(v.jsxs)("div",{className:"row",children:[Object(v.jsx)("div",{className:"col-12 col-sm-6 mb-3",children:Object(v.jsxs)("div",{className:"form-check",children:[Object(v.jsx)("input",{className:"form-check-input",type:"checkbox",value:"",id:"store-tokens",checked:h,onChange:function(e){return u(e.target.checked)}}),Object(v.jsx)("label",{className:"form-check-label",htmlFor:"store-tokens",children:"Store my tokens"})]})}),Object(v.jsx)("div",{className:"col-12 col-sm-6 mb-3",children:Object(v.jsxs)("button",{className:"btn btn-danger btn-cta",onClick:function(){s(""),c("")},children:[Object(v.jsx)("i",{className:"fas fa-trash-alt"})," Delete My Tokens"]})})]})]})})}),Object(v.jsx)("div",{id:"cards-wrapper",className:"cards-wrapper row",children:0===t.length?Object(v.jsx)("div",{children:"Loading..."}):t.map((function(e){return D(e)}))})]})})]})}var D=function(e){var n=e.id,t=e.title,a=e.icon,r=e.color,i=e.overview;return Object(v.jsx)("div",{className:"item item-".concat(r," col-lg-4 col-6"),children:Object(v.jsxs)("div",{className:"item-inner",children:[Object(v.jsx)("div",{className:"icon-holder",children:Object(v.jsx)("i",{className:"icon fa ".concat(a)})}),Object(v.jsx)("h3",{className:"title",children:t}),Object(v.jsx)("p",{className:"intro",children:i}),Object(v.jsx)(s.b,{className:"link",to:"/document/".concat(n),children:Object(v.jsx)("span",{})})]})},n)},I=t(60),T=t.n(I),$=t(35),G=t.n($),_=t(61),k=t.n(_);function x(){var e=Object(l.g)(),n=Object(a.useState)([]),t=Object(d.a)(n,2),i=t[0],o=t[1],c=Object(a.useState)({}),h=Object(d.a)(c,2),u=h[0],m=h[1],g=Object(a.useState)(""),y=Object(d.a)(g,2),w=y[0],D=y[1],I=b(),$=I.clientId,_=I.accessToken;p("body-"+w),Object(a.useEffect)((function(){var n,t=(n=e.document,f.getCollection("topics").findOne({id:n}));m(t),o(x(function(e){return f.getCollection("paragraphs").find({parent:e})}(t.id))),D(t.color),setTimeout((function(){window.jQuery("body").scrollspy({target:"#doc-menu",offset:100}),window.jQuery("a.scrollto").on("click",(function(e){var n=this.hash;e.preventDefault(),window.jQuery("body").scrollTo(n,800,{offset:0,axis:"y"})})),T.a.highlightAll()}),100)}),[e.document]);var x=function(e){for(var n=[],t=[],a=0;a<e.length;a++){var r=e[a],i=a+1<=e.length?e[a+1]:null;1===r.level?n.push(r):(t.push(r),null!=i&&1!==i.level||(n.push(t),t=[]))}return n};return Object(v.jsxs)(v.Fragment,{children:[Object(v.jsx)("header",{id:"header",className:"header",children:Object(v.jsxs)("div",{className:"container",children:[Object(v.jsx)("div",{className:"branding",children:Object(v.jsx)("h1",{className:"logo",children:Object(v.jsxs)(s.b,{to:"/home",children:[Object(v.jsx)("span",{"aria-hidden":"true",className:"icon_documents_alt icon"}),Object(v.jsx)("span",{className:"text-highlight",children:"IGDB"}),Object(v.jsx)("span",{className:"text-bold",children:"Wrapper"})]})})}),Object(v.jsxs)("ol",{className:"breadcrumb",children:[Object(v.jsx)("li",{className:"breadcrumb-item",children:Object(v.jsx)(s.b,{to:"/home",children:"Home"})}),Object(v.jsx)("li",{className:"breadcrumb-item active",children:u.title})]}),Object(v.jsx)("div",{className:"top-search-box",children:Object(v.jsxs)("form",{className:"form-inline search-form justify-content-center",action:"",method:"get",children:[Object(v.jsx)("input",{type:"text",placeholder:"Search...",name:"search",className:"form-control search-input"}),Object(v.jsx)("button",{type:"submit",className:"btn search-btn",value:"Search",children:Object(v.jsx)("i",{className:"fas fa-search"})})]})})]})}),Object(v.jsx)("div",{className:"doc-wrapper",children:Object(v.jsxs)("div",{className:"container",children:[Object(v.jsxs)("div",{id:"doc-header",className:"doc-header text-center",children:[Object(v.jsxs)("h1",{className:"doc-title",children:[Object.keys(u).length>0&&Object(v.jsx)("i",{className:"icon fa ".concat(u.icon)})," ",u.title]}),Object(v.jsxs)("div",{className:"meta",children:[Object(v.jsx)("i",{className:"far fa-clock"})," Last updated: Oct 12th, 2020"]})]}),Object(v.jsxs)("div",{className:"doc-body row",children:[Object(v.jsx)("div",{className:"doc-content col-md-9 col-12 order-1",children:Object(v.jsx)("div",{className:"content-inner",children:i.length>0&&function(e){for(var n=[],t=G.a.Parser,a=[{shouldProcessNode:function(e){return e.name&&"blockquote"===e.name},processNode:function(e,n){return Object(v.jsxs)("div",{className:"callout-block callout-info",children:[Object(v.jsx)("div",{className:"icon-holder",children:Object(v.jsx)("i",{className:"fas fa-info-circle"})}),Object(v.jsxs)("div",{className:"content",children:[Object(v.jsx)("h4",{className:"callout-title",children:"Note"}),n]})]},"callout-".concat(k()(n[0]).substr(0,10)))}},{shouldProcessNode:function(e){return e.parent&&e.parent.name&&"code"===e.parent.name&&(""!==$||""!==_)},processNode:function(e,n){return""!==$&&(e.data=e.data.replace("{client_id}",$)),""!==_&&(e.data=e.data.replace("{access_token}",_)),e.data}},{shouldProcessNode:function(e){return!0},processNode:new G.a.ProcessNodeDefinitions(r.a).processDefaultNode}],i=0;i<e.length;i++){var o=e[i],s=i+1<=e.length?e[i+1]:null;void 0===o.length&&n.push(Object(v.jsxs)("section",{id:o.id,className:"doc-section",children:[Object(v.jsx)("h2",{className:"section-title",children:o.title}),Object(v.jsx)("div",{className:"section-block",children:(new t).parseWithInstructions(o.body.html,(function(){return!0}),a)}),null!=s&&void 0!==s.length&&s.map((function(e){return Object(v.jsxs)("div",{id:e.id,className:"section-block",children:[Object(v.jsx)("h3",{className:"block-title",children:e.title}),(new t).parseWithInstructions(e.body.html,(function(){return!0}),a)]},e.id)}))]},"".concat(o.id,"-section")))}return n}(i)})}),Object(v.jsx)("div",{className:"doc-sidebar col-md-3 col-12 order-0 d-none d-md-flex",children:Object(v.jsx)("div",{id:"doc-nav",className:"doc-nav",children:Object(v.jsx)("nav",{id:"doc-menu",className:"nav doc-menu flex-column sticky",children:i.length>0&&function(e){for(var n=function(e){return Object(v.jsx)("a",{className:"nav-link scrollto",href:"#".concat(e.id),children:e.title},e.id)},t=[],a=0;a<e.length;a++){var r=e[a];void 0===r.length?t.push(n(r)):t.push(Object(v.jsx)("nav",{className:"doc-sub-menu nav flex-column",children:r.map((function(e){return n(e)}))},"submenu".concat(a)))}return t}(i)})})})]})]})})]})}var B=t(14),S=t.n(B);window.jQuery=S.a;var R=function(){return Object(v.jsxs)(v.Fragment,{children:[Object(v.jsx)("div",{className:"page-wrapper",children:Object(v.jsx)(s.a,{children:Object(v.jsxs)(l.d,{children:[Object(v.jsx)(l.a,{from:"/",to:"/home",exact:!0}),Object(v.jsx)(l.b,{path:"/home",component:w,exact:!0}),Object(v.jsx)(l.b,{path:"/document/:document",component:x,exact:!0})]})})}),Object(v.jsx)("footer",{className:"footer text-center",children:Object(v.jsx)("div",{className:"container",children:Object(v.jsxs)("small",{className:"copyright",children:["Designed with ",Object(v.jsx)("i",{className:"fas fa-heart"})," by ",Object(v.jsx)("a",{href:"https://themes.3rdwavemedia.com/",target:"_blank",rel:"noreferrer",children:"Xiaoying Riley"})," for developers"]})})})]})},F=function(e){e&&e instanceof Function&&t.e(3).then(t.bind(null,353)).then((function(n){var t=n.getCLS,a=n.getFID,r=n.getFCP,i=n.getLCP,o=n.getTTFB;t(e),a(e),r(e),i(e),o(e)}))};t(337),t(339),t(340),t(341),t(342),t(345),t(346),t(347),t(348),t(349),t(350);o.a.render(Object(v.jsx)(r.a.StrictMode,{children:Object(v.jsx)(R,{})}),document.getElementById("root")),F()},58:function(e){e.exports=JSON.parse('{"filename":"WrapperDocsDB","collections":[{"name":"topics","data":[{"id":"getting-started","title":"Getting Started","icon":"fa-paper-plane","overview":"A few thoughts about the tool and the documentation. Setting up your project.","color":"green","meta":{"revision":0,"created":1620176731933,"version":0},"$loki":1},{"id":"igdb-util","title":"IGDB Util Class","icon":"fa-hard-hat","overview":"The utility class and it\'s helper methods.","color":"purple","meta":{"revision":0,"created":1620176732012,"version":0},"$loki":2},{"id":"igdb-query-builder","title":"IGDB Query Builder","icon":"fa-tools","overview":"The query builder class. Usage, configuration, query parsing.","color":"pink","meta":{"revision":0,"created":1620176732031,"version":0},"$loki":3},{"id":"igdb","title":"IGDB class","icon":"fa-cubes","overview":"Everything about the main IGDB Wrapper class. Setting up, configuring and sending requests.","color":"blue","meta":{"revision":0,"created":1620176732124,"version":0},"$loki":4},{"id":"examples","title":"Examples","icon":"fa-hand-holding-heart","overview":"IGDB Wrapper in action. Covering most of the functionality.","color":"orange","meta":{"revision":0,"created":1620176732381,"version":0},"$loki":5},{"id":"changelog","title":"Changelog","icon":"fa-list","overview":"Changes, history.","color":"primary","meta":{"revision":0,"created":1620176732400,"version":0},"$loki":6}],"idIndex":null,"binaryIndices":{},"constraints":null,"uniqueNames":[],"transforms":{},"objType":"topics","dirty":true,"cachedIndex":null,"cachedBinaryIndex":null,"cachedData":null,"adaptiveBinaryIndices":true,"transactional":false,"cloneObjects":false,"cloneMethod":"parse-stringify","asyncListeners":false,"disableMeta":false,"disableChangesApi":true,"disableDeltaChangesApi":true,"autoupdate":false,"serializableIndices":true,"disableFreeze":true,"ttl":null,"maxId":6,"DynamicViews":[],"events":{"insert":[],"update":[],"pre-insert":[],"pre-update":[],"close":[],"flushbuffer":[],"error":[],"delete":[null],"warning":[null]},"changes":[],"dirtyIds":[]},{"name":"paragraphs","data":[{"id":"introduction","title":"Introduction","level":1,"parent":"getting-started","body":{"stripped":"Welcome to the documentation of the IGDB API PHP Wrapper! The main purpose of this class is to provide a simple solution to fetch data from the IGDB Database. The only dependency this class relies on is Client URL Library (CURL), this is how the wrapper sends the requests.\\n\\nTo use this wrapper you will need your own account at Twitch and you will have to request your own client_id and access_token. For more information in this topic please refer to the account creation and authentication sections of the IGDB Documentation.","markdown":"Welcome to the documentation of the IGDB API PHP Wrapper! The main purpose of this class is to provide a simple solution to fetch data from the IGDB Database. The only dependency this class relies on is [Client URL Library (CURL)](php.net/manual/en/book.curl.php), this is how the wrapper sends the requests.\\n\\nTo use this wrapper you will need your own account at Twitch and you will have to request your own `client_id` and `access_token`. For more information in this topic please refer to the [account creation](https://api-docs.igdb.com/#account-creation) and [authentication](https://api-docs.igdb.com/#authentication) sections of the [IGDB Documentation](https://api-docs.igdb.com/).\\n\\n<blockquote>\\nThe `IGDBUtil` class has a helper method called `authenticate`. With this method you can easily get your `access_token` from the Twitch server.\\n</blockquote>","html":"<p>Welcome to the documentation of the IGDB API PHP Wrapper! The main purpose of this class is to provide a simple solution to fetch data from the IGDB Database. The only dependency this class relies on is <a href=\\"php.net/manual/en/book.curl.php\\">Client URL Library (CURL)</a>, this is how the wrapper sends the requests.</p>\\n<p>To use this wrapper you will need your own account at Twitch and you will have to request your own <code>client_id</code> and <code>access_token</code>. For more information in this topic please refer to the <a href=\\"https://api-docs.igdb.com/#account-creation\\" target=\\"_blank\\" rel=\\"nofollow\\">account creation</a> and <a href=\\"https://api-docs.igdb.com/#authentication\\" target=\\"_blank\\" rel=\\"nofollow\\">authentication</a> sections of the <a href=\\"https://api-docs.igdb.com/\\" target=\\"_blank\\" rel=\\"nofollow\\">IGDB Documentation</a>.</p>\\n<blockquote>\\nThe `IGDBUtil` class has a helper method called `authenticate`. With this method you can easily get your `access_token` from the Twitch server.\\n</blockquote>"},"meta":{"revision":0,"created":1620176731959,"version":0},"$loki":1},{"id":"importing-to-your-project","title":"Importing to your project","level":1,"parent":"getting-started","body":{"stripped":"First of all, you\'ll need to download the files from the repository. After unzipping the igdb-master.zip file you\'ll have an src folder which contains the source code of this wrapper. In this folder you will see three files:\\n\\nIGDB.php: the main IGDB Wrapper class\\n\\nIGDBQueryBuilder.php: the QueryBuilder class which helps parsing your apicalypse query\\n\\nIGDBUtil.php: utility class with helper methods\\n\\nYou can copy these files anywhere in your project, then you will have to simply import it where you need to use it.\\n\\n\\n\\nAfter the files are imported, you are ready to use the wrapper!","markdown":"First of all, you\'ll need to [download](https://github.com/enisz/igdb/archive/master.zip) the files from the repository. After unzipping the `igdb-master.zip` file you\'ll have an `src` folder which contains the source code of this wrapper. In this folder you will see three files:\\n - IGDB.php: the main IGDB Wrapper class\\n - IGDBQueryBuilder.php: the QueryBuilder class which helps parsing your apicalypse query\\n - IGDBUtil.php: utility class with helper methods\\n\\nYou can copy these files anywhere in your project, then you will have to simply import it where you need to use it.\\n\\n```php\\n<?php\\n    require_once \\"IGDB.php\\";\\n    require_once \\"IGDBQueryBuilder.php\\"; // optional\\n    require_once \\"IGDBUtil.php\\";\\n?>\\n```\\n\\nAfter the files are imported, you are ready to use the wrapper!","html":"<p>First of all, you\'ll need to <a href=\\"https://github.com/enisz/igdb/archive/master.zip\\" target=\\"_blank\\" rel=\\"nofollow\\">download</a> the files from the repository. After unzipping the <code>igdb-master.zip</code> file you\'ll have an <code>src</code> folder which contains the source code of this wrapper. In this folder you will see three files:</p>\\n<ul>\\n<li>IGDB.php: the main IGDB Wrapper class</li>\\n<li>IGDBQueryBuilder.php: the QueryBuilder class which helps parsing your apicalypse query</li>\\n<li>IGDBUtil.php: utility class with helper methods</li>\\n</ul>\\n<p>You can copy these files anywhere in your project, then you will have to simply import it where you need to use it.</p>\\n<pre><code class=\\"language-php\\">&#x3C;?php\\n    require_once \\"IGDB.php\\";\\n    require_once \\"IGDBQueryBuilder.php\\"; // optional\\n    require_once \\"IGDBUtil.php\\";\\n?>\\n</code></pre>\\n<p>After the files are imported, you are ready to use the wrapper!</p>"},"meta":{"revision":0,"created":1620176731972,"version":0},"$loki":2},{"id":"basic-usage-example","title":"Basic Usage Example","level":1,"parent":"getting-started","body":{"stripped":"To use the wrapper you will have to instantiate the wrapper with your client_id and access_token.","markdown":"To use the wrapper you will have to instantiate the wrapper with your `client_id` and `access_token`.\\n\\n```php\\n<?php\\n\\n    require_once \\"IGDB.php\\";\\n\\n    $igdb = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n?>\\n```","html":"<p>To use the wrapper you will have to instantiate the wrapper with your <code>client_id</code> and <code>access_token</code>.</p>\\n<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    require_once \\"IGDB.php\\";\\n\\n    $igdb = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n?>\\n</code></pre>"},"meta":{"revision":0,"created":1620176731974,"version":0},"$loki":3},{"id":"sending-a-query","title":"Sending a query","level":1,"parent":"getting-started","body":{"stripped":"The $igdb object will expose all of the endpoint methods which will send your queries. The method names are \\"snake cased\\" versions of the endpoint names from the IGDB Documentation. For example, if you want to fetch data from the Release Date endpoint, you will have to use the release_date method of the wrapper.","markdown":"The `$igdb` object will expose all of the endpoint methods which will send your queries. The method names are \\"snake cased\\" versions of the endpoint names from the IGDB Documentation. For example, if you want to fetch data from the [Release Date](https://api-docs.igdb.com/#release-date) endpoint, you will have to use the `release_date` method of the wrapper.\\n\\n<blockquote>\\nThese are simple examples of the usage of the wrapper. You can find detailed documentation on each at the respective sections of this documentation.\\n</blockquote>","html":"<p>The <code>$igdb</code> object will expose all of the endpoint methods which will send your queries. The method names are \\"snake cased\\" versions of the endpoint names from the IGDB Documentation. For example, if you want to fetch data from the <a href=\\"https://api-docs.igdb.com/#release-date\\" target=\\"_blank\\" rel=\\"nofollow\\">Release Date</a> endpoint, you will have to use the <code>release_date</code> method of the wrapper.</p>\\n<blockquote>\\nThese are simple examples of the usage of the wrapper. You can find detailed documentation on each at the respective sections of this documentation.\\n</blockquote>"},"meta":{"revision":0,"created":1620176731978,"version":0},"$loki":4},{"id":"fetching-the-records","title":"Fetching the records","level":2,"parent":"getting-started","body":{"stripped":"The endpoint methods are expecting at least on parameter: the apicalypse query string to send.\\n\\n\\n\\nAlways make sure to enclose every endpoint method calls in a try...catch block. The endpoint methods will throw an \\\\`IGDBEndpointException\\" in case of any errors. If there are problems with the query you can catch it there. Since this query is valid you will see the below output:\\n\\n\\n\\nAs you can see, the result is an array of objects, therefore you can access the values with the object operator.","markdown":"The endpoint methods are expecting at least on parameter: the apicalypse query string to send.\\n\\n```php\\ntry {\\n    $igdb->release_date(\\"fields *; limit 1;\\");\\n} catch (IGDBEndpointException $e) {\\n    echo $e->getMessage();\\n}\\n```\\n\\nAlways make sure to enclose every endpoint method calls in a try...catch block. The endpoint methods will throw an `IGDBEndpointException\\" in case of any errors. If there are problems with the query you can catch it there. Since this query is valid you will see the below output:\\n\\n```text\\narray (size=1)\\n  0 =>\\n    object(stdClass)[2]\\n      public \'id\' => int 170111\\n      public \'category\' => int 0\\n      public \'created_at\' => int 1558826090\\n      public \'date\' => int 1552953600\\n      public \'game\' => int 76870\\n      public \'human\' => string \'Mar 19, 2019\' (length=12)\\n      public \'m\' => int 3\\n      public \'platform\' => int 48\\n      public \'region\' => int 8\\n      public \'updated_at\' => int 1558826519\\n      public \'y\' => int 2019\\n      public \'checksum\' => string \'eda4c3fc-5ce2-5c43-9a96-bfd20b24ab88\' (length=36)\\n```\\n\\nAs you can see, the result is an **array of objects**, therefore you can access the values with the [object operator](https://www.php.net/manual/en/language.oop5.properties.php).\\n\\n```php\\ntry {\\n    $result = $igdb->release_date(\\"fields *; limit 1;\\");\\n\\n    // printing the id of the first item with the object operator\\n    echo $result[0]->id;\\n} catch (IGDBEndpointException $e) {\\n    echo $e->getMessage();\\n}\\n```","html":"<p>The endpoint methods are expecting at least on parameter: the apicalypse query string to send.</p>\\n<pre><code class=\\"language-php\\">try {\\n    $igdb->release_date(\\"fields *; limit 1;\\");\\n} catch (IGDBEndpointException $e) {\\n    echo $e->getMessage();\\n}\\n</code></pre>\\n<p>Always make sure to enclose every endpoint method calls in a try...catch block. The endpoint methods will throw an `IGDBEndpointException\\" in case of any errors. If there are problems with the query you can catch it there. Since this query is valid you will see the below output:</p>\\n<pre><code class=\\"language-text\\">array (size=1)\\n  0 =>\\n    object(stdClass)[2]\\n      public \'id\' => int 170111\\n      public \'category\' => int 0\\n      public \'created_at\' => int 1558826090\\n      public \'date\' => int 1552953600\\n      public \'game\' => int 76870\\n      public \'human\' => string \'Mar 19, 2019\' (length=12)\\n      public \'m\' => int 3\\n      public \'platform\' => int 48\\n      public \'region\' => int 8\\n      public \'updated_at\' => int 1558826519\\n      public \'y\' => int 2019\\n      public \'checksum\' => string \'eda4c3fc-5ce2-5c43-9a96-bfd20b24ab88\' (length=36)\\n</code></pre>\\n<p>As you can see, the result is an <strong>array of objects</strong>, therefore you can access the values with the <a href=\\"https://www.php.net/manual/en/language.oop5.properties.php\\" target=\\"_blank\\" rel=\\"nofollow\\">object operator</a>.</p>\\n<pre><code class=\\"language-php\\">try {\\n    $result = $igdb->release_date(\\"fields *; limit 1;\\");\\n\\n    // printing the id of the first item with the object operator\\n    echo $result[0]->id;\\n} catch (IGDBEndpointException $e) {\\n    echo $e->getMessage();\\n}\\n</code></pre>"},"meta":{"revision":0,"created":1620176731987,"version":0},"$loki":5},{"id":"fetching-the-number-of-matched-records","title":"Fetching the number of matched records","level":2,"parent":"getting-started","body":{"stripped":"You can also fetch the number of records matching your filtering criteria. In this case you will have to pass a second boolean argument to the endpoint method which tells the wrapper to reach the endpoint\'s count function. This way the IGDB API will send the number of matched records as a response.\\n\\n\\n\\nThe return value of the call will be:\\n\\n\\n\\nIn this case you can see from the output that there are three items in the database matching the filtering criteria (id field matching the id\'s in the list). You can access this value from the $result object\'s count property","markdown":"You can also fetch the number of records matching your filtering criteria. In this case you will have to pass a second `boolean` argument to the endpoint method which tells the wrapper to reach the endpoint\'s `count` function. This way the IGDB API will send the number of matched records as a response.\\n\\n```php\\ntry {\\n    // note the second TRUE parameter\\n    $igdb->release_date(\\"fields *; where id = (170111, 165447, 85558);\\", true);\\n} catch (IGDBEndpointException $e) {\\n    echo $e->getMessage();\\n}\\n```\\n\\nThe return value of the call will be:\\n\\n```text\\nobject(stdClass)[2]\\n  public \'count\' => int 3\\n```\\n\\nIn this case you can see from the output that there are three items in the database matching the filtering criteria (id field matching the id\'s in the list). You can access this value from the `$result` object\'s `count` property\\n\\n```php\\n// this will print 3\\necho $result->count;\\n```","html":"<p>You can also fetch the number of records matching your filtering criteria. In this case you will have to pass a second <code>boolean</code> argument to the endpoint method which tells the wrapper to reach the endpoint\'s <code>count</code> function. This way the IGDB API will send the number of matched records as a response.</p>\\n<pre><code class=\\"language-php\\">try {\\n    // note the second TRUE parameter\\n    $igdb->release_date(\\"fields *; where id = (170111, 165447, 85558);\\", true);\\n} catch (IGDBEndpointException $e) {\\n    echo $e->getMessage();\\n}\\n</code></pre>\\n<p>The return value of the call will be:</p>\\n<pre><code class=\\"language-text\\">object(stdClass)[2]\\n  public \'count\' => int 3\\n</code></pre>\\n<p>In this case you can see from the output that there are three items in the database matching the filtering criteria (id field matching the id\'s in the list). You can access this value from the <code>$result</code> object\'s <code>count</code> property</p>\\n<pre><code class=\\"language-php\\">// this will print 3\\necho $result->count;\\n</code></pre>"},"meta":{"revision":0,"created":1620176731992,"version":0},"$loki":6},{"id":"building-a-query-with-igdbquerybuilder","title":"Building a query with IGDBQueryBuilder","level":1,"parent":"getting-started","body":{"stripped":"There is a class called IGDBQueryBuilder which helps you to construct your queries. To use this you will have to import it to your project separately as this is not part of the IGDB class.\\n\\nThe building should be enclosed in try...catch block too. If an invalid parameter is passed to these methods, an IGDBInvalidParameterException will be thrown.\\n\\n\\n\\nThe code above will construct a query according to the passed parameters and will return the result as a query string when the build method is called. The output of the code is below:\\n\\n\\n\\nThis string can be passed straight to the endpoint method\\n\\n\\n\\nThe output of the code above is below:","markdown":"There is a class called `IGDBQueryBuilder` which helps you to construct your queries. To use this you will have to import it to your project separately as this is not part of the `IGDB` class.\\n\\nThe building should be enclosed in try...catch block too. If an invalid parameter is passed to these methods, an `IGDBInvalidParameterException` will be thrown.\\n\\n```php\\n<?php\\n\\n    require_once \\"IGDBQueryBuilder.php\\";\\n\\n    $builder = new IGDBQueryBuilder();\\n\\n    try {\\n        $query = $builder\\n            ->fields(\\"*\\")\\n            ->where(\\n                array(\\n                    \\"field\\" => \\"id\\",\\n                    \\"postfix\\" => \\"=\\",\\n                    \\"value\\" => array(170111, 165447, 85558)\\n                )\\n            )\\n            ->build();\\n\\n        echo $query;\\n    } catch (IGDBInvalidParameterException $e) {\\n        echo $e->getMessage();\\n    }\\n?>\\n```\\n\\nThe code above will construct a query according to the passed parameters and will return the result as a query string when the `build` method is called. The output of the code is below:\\n\\n```text\\nfields *; where id = (170111, 165447, 85558);\\n```\\n\\nThis string can be passed straight to the endpoint method\\n\\n```php\\n<?php\\n\\n    require_once \\"IGDB.php\\";\\n    require_once \\"IGDBQueryBuilder.php\\";\\n\\n    $igdb = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n    $builder = new IGDBQueryBuilder();\\n\\n    try {\\n        $builder\\n            ->fields(\\"*\\")\\n            ->where(\\n                array(\\n                    \\"field\\" => \\"id\\",\\n                    \\"postfix\\" => \\"=\\",\\n                    \\"value\\" => array(170111, 165447, 85558)\\n                )\\n            );\\n\\n        var_dump($igdb->release_date($builder->build()));\\n    } catch (IGDBInvalidParameterException $e) {\\n        // invalid parameter is passed to the builder\\n        echo $e->getMessage();\\n    } catch (IGDBEndpointException $e) {\\n        // something went wrong with the query\\n        echo $e->getMessage();\\n    }\\n\\n?>\\n```\\n\\nThe output of the code above is below:\\n\\n```text\\narray (size=3)\\n  0 =>\\n    object(stdClass)[3]\\n      public \'id\' => int 85558\\n      public \'category\' => int 0\\n      public \'created_at\' => int 1497948084\\n      public \'date\' => int 566092800\\n      public \'game\' => int 38035\\n      public \'human\' => string \'Dec 10, 1987\' (length=12)\\n      public \'m\' => int 12\\n      public \'platform\' => int 121\\n      public \'region\' => int 5\\n      public \'updated_at\' => int 1497948122\\n      public \'y\' => int 1987\\n      public \'checksum\' => string \'df4b2c61-916b-d823-cdf7-286f06aeac62\' (length=36)\\n  1 =>\\n    object(stdClass)[4]\\n      public \'id\' => int 165447\\n      public \'category\' => int 0\\n      public \'created_at\' => int 1550867412\\n      public \'date\' => int 1561420800\\n      public \'game\' => int 115477\\n      public \'human\' => string \'Jun 25, 2019\' (length=12)\\n      public \'m\' => int 6\\n      public \'platform\' => int 6\\n      public \'region\' => int 8\\n      public \'updated_at\' => int 1550867489\\n      public \'y\' => int 2019\\n      public \'checksum\' => string \'3f7a3186-1622-4da6-fb05-d223cea14454\' (length=36)\\n  2 =>\\n    object(stdClass)[5]\\n      public \'id\' => int 170111\\n      public \'category\' => int 0\\n      public \'created_at\' => int 1558826090\\n      public \'date\' => int 1552953600\\n      public \'game\' => int 76870\\n      public \'human\' => string \'Mar 19, 2019\' (length=12)\\n      public \'m\' => int 3\\n      public \'platform\' => int 48\\n      public \'region\' => int 8\\n      public \'updated_at\' => int 1558826519\\n      public \'y\' => int 2019\\n      public \'checksum\' => string \'eda4c3fc-5ce2-5c43-9a96-bfd20b24ab88\' (length=36)\\n```","html":"<p>There is a class called <code>IGDBQueryBuilder</code> which helps you to construct your queries. To use this you will have to import it to your project separately as this is not part of the <code>IGDB</code> class.</p>\\n<p>The building should be enclosed in try...catch block too. If an invalid parameter is passed to these methods, an <code>IGDBInvalidParameterException</code> will be thrown.</p>\\n<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    require_once \\"IGDBQueryBuilder.php\\";\\n\\n    $builder = new IGDBQueryBuilder();\\n\\n    try {\\n        $query = $builder\\n            ->fields(\\"*\\")\\n            ->where(\\n                array(\\n                    \\"field\\" => \\"id\\",\\n                    \\"postfix\\" => \\"=\\",\\n                    \\"value\\" => array(170111, 165447, 85558)\\n                )\\n            )\\n            ->build();\\n\\n        echo $query;\\n    } catch (IGDBInvalidParameterException $e) {\\n        echo $e->getMessage();\\n    }\\n?>\\n</code></pre>\\n<p>The code above will construct a query according to the passed parameters and will return the result as a query string when the <code>build</code> method is called. The output of the code is below:</p>\\n<pre><code class=\\"language-text\\">fields *; where id = (170111, 165447, 85558);\\n</code></pre>\\n<p>This string can be passed straight to the endpoint method</p>\\n<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    require_once \\"IGDB.php\\";\\n    require_once \\"IGDBQueryBuilder.php\\";\\n\\n    $igdb = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n    $builder = new IGDBQueryBuilder();\\n\\n    try {\\n        $builder\\n            ->fields(\\"*\\")\\n            ->where(\\n                array(\\n                    \\"field\\" => \\"id\\",\\n                    \\"postfix\\" => \\"=\\",\\n                    \\"value\\" => array(170111, 165447, 85558)\\n                )\\n            );\\n\\n        var_dump($igdb->release_date($builder->build()));\\n    } catch (IGDBInvalidParameterException $e) {\\n        // invalid parameter is passed to the builder\\n        echo $e->getMessage();\\n    } catch (IGDBEndpointException $e) {\\n        // something went wrong with the query\\n        echo $e->getMessage();\\n    }\\n\\n?>\\n</code></pre>\\n<p>The output of the code above is below:</p>\\n<pre><code class=\\"language-text\\">array (size=3)\\n  0 =>\\n    object(stdClass)[3]\\n      public \'id\' => int 85558\\n      public \'category\' => int 0\\n      public \'created_at\' => int 1497948084\\n      public \'date\' => int 566092800\\n      public \'game\' => int 38035\\n      public \'human\' => string \'Dec 10, 1987\' (length=12)\\n      public \'m\' => int 12\\n      public \'platform\' => int 121\\n      public \'region\' => int 5\\n      public \'updated_at\' => int 1497948122\\n      public \'y\' => int 1987\\n      public \'checksum\' => string \'df4b2c61-916b-d823-cdf7-286f06aeac62\' (length=36)\\n  1 =>\\n    object(stdClass)[4]\\n      public \'id\' => int 165447\\n      public \'category\' => int 0\\n      public \'created_at\' => int 1550867412\\n      public \'date\' => int 1561420800\\n      public \'game\' => int 115477\\n      public \'human\' => string \'Jun 25, 2019\' (length=12)\\n      public \'m\' => int 6\\n      public \'platform\' => int 6\\n      public \'region\' => int 8\\n      public \'updated_at\' => int 1550867489\\n      public \'y\' => int 2019\\n      public \'checksum\' => string \'3f7a3186-1622-4da6-fb05-d223cea14454\' (length=36)\\n  2 =>\\n    object(stdClass)[5]\\n      public \'id\' => int 170111\\n      public \'category\' => int 0\\n      public \'created_at\' => int 1558826090\\n      public \'date\' => int 1552953600\\n      public \'game\' => int 76870\\n      public \'human\' => string \'Mar 19, 2019\' (length=12)\\n      public \'m\' => int 3\\n      public \'platform\' => int 48\\n      public \'region\' => int 8\\n      public \'updated_at\' => int 1558826519\\n      public \'y\' => int 2019\\n      public \'checksum\' => string \'eda4c3fc-5ce2-5c43-9a96-bfd20b24ab88\' (length=36)\\n</code></pre>"},"meta":{"revision":0,"created":1620176732012,"version":0},"$loki":7},{"id":"igdb-util","title":"IGDB Util","level":1,"parent":"igdb-util","body":{"stripped":"The utility class contains a few helper methods to interact with the API or the data from the database.","markdown":"The utility class contains a few helper methods to interact with the API or the data from the database.","html":"<p>The utility class contains a few helper methods to interact with the API or the data from the database.</p>"},"meta":{"revision":0,"created":1620176732013,"version":0},"$loki":8},{"id":"authenticate","title":"Authenticate","level":2,"parent":"igdb-util","body":{"stripped":"public static authenticate(string $client_id, string $client_secret) throws Exception: object\\n\\nThe authenticate method helps to you generate you client secret by sending a request to the Twitch API. If your tokens are valid, the method will return an object, containing your client secret. If something went wrong, an Exception will be thrown.\\n\\nParameters:\\n\\n$client_id: your client id from Twitch\\n\\n$client_secret: your application\'s client secret generated by Twitch\\n\\nReturns: an object from the response from the Twitch API.\\n\\n\\n\\nIf your credentials are invalid an Exception will be thrown with the details of the issue. Otherwise the method will return an object decoded from the response json.","markdown":"`public static authenticate(string $client_id, string $client_secret) throws Exception: object`\\n\\nThe authenticate method helps to you generate you `client secret` by sending a request to the Twitch API. If your tokens are valid, the method will return an object, containing your client secret. If something went wrong, an `Exception` will be thrown.\\n\\n**Parameters**:\\n - `$client_id`: your client id from Twitch\\n - `$client_secret`: your application\'s client secret generated by Twitch\\n\\n**Returns**: an object from the response from the Twitch API.\\n\\n```php\\n<?php\\n\\n    require_once \\"src/IGDBUtil.php\\";\\n\\n    try {\\n        var_dump(IGDBUtil::authenticate(\\"{client_id}\\", \\"{client_secret}\\"));\\n    } catch (Exception $e) {\\n        // request failed\\n        echo $e->getMessage();\\n    }\\n\\n>\\n```\\n\\nIf your credentials are invalid an `Exception` will be thrown with the details of the issue. Otherwise the method will return an object decoded from the response json.\\n\\n```text\\nobject(stdClass)[1]\\n  public \'access_token\' => string \'{access_token}\' (length=30)\\n  public \'expires_in\' => int 5601038\\n  public \'token_type\' => string \'bearer\' (length=6)\\n```","html":"<p><code>public static authenticate(string $client_id, string $client_secret) throws Exception: object</code></p>\\n<p>The authenticate method helps to you generate you <code>client secret</code> by sending a request to the Twitch API. If your tokens are valid, the method will return an object, containing your client secret. If something went wrong, an <code>Exception</code> will be thrown.</p>\\n<p><strong>Parameters</strong>:</p>\\n<ul>\\n<li><code>$client_id</code>: your client id from Twitch</li>\\n<li><code>$client_secret</code>: your application\'s client secret generated by Twitch</li>\\n</ul>\\n<p><strong>Returns</strong>: an object from the response from the Twitch API.</p>\\n<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    require_once \\"src/IGDBUtil.php\\";\\n\\n    try {\\n        var_dump(IGDBUtil::authenticate(\\"{client_id}\\", \\"{client_secret}\\"));\\n    } catch (Exception $e) {\\n        // request failed\\n        echo $e->getMessage();\\n    }\\n\\n>\\n</code></pre>\\n<p>If your credentials are invalid an <code>Exception</code> will be thrown with the details of the issue. Otherwise the method will return an object decoded from the response json.</p>\\n<pre><code class=\\"language-text\\">object(stdClass)[1]\\n  public \'access_token\' => string \'{access_token}\' (length=30)\\n  public \'expires_in\' => int 5601038\\n  public \'token_type\' => string \'bearer\' (length=6)\\n</code></pre>"},"meta":{"revision":0,"created":1620176732021,"version":0},"$loki":9},{"id":"image-url","title":"Image URL","level":2,"parent":"igdb-util","body":{"stripped":"public static function image_url(string $image_id, string $size) throws InvalidArgumentException: string\\n\\nThe image_url method will help you to parse an URL to a specific image size from the image id. If an unsupported image size is passed as $size an InvalidArgumentException will be thrown.\\n\\nParameters:\\n\\n$image_id: the image_id of the image you are trying to resize. Make sure to pass image_id instead of id!\\n\\n$size: a size string from the documentation\\n\\nReturns: the url to the image as a string\\n\\n\\n\\nSince the query in this code is correct, the output of it will be as below:","markdown":"`public static function image_url(string $image_id, string $size) throws InvalidArgumentException: string`\\n\\nThe image_url method will help you to parse an URL to a specific image size from the image id. If an unsupported image size is passed as `$size` an `InvalidArgumentException` will be thrown.\\n\\n**Parameters**:\\n - `$image_id`: the image_id of the image you are trying to resize. Make sure to pass image_id instead of id!\\n - `$size`: a size string from the [documentation](https://api-docs.igdb.com/#images)\\n\\n**Returns**: the url to the image as a string\\n\\n```php\\n<?php\\n\\n    require_once \\"IGDB.php\\";\\n    require_once \\"IGDBUtil.php\\";\\n\\n    $igdb = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    try {\\n        // fetching one record from the database with expander to gather the cover object as well\\n        $result = $igdb->game(\'search \\"uncharted 4\\"; fields id,name,cover.*; limit 1;\');\\n\\n        // printing the result object\\n        var_dump($result);\\n\\n        // printing the default image url coming from the cover object\\n        echo $result[0]->cover->url;\\n\\n        // printing the resized image url parsed by the IGDBUtil::image_url method\\n        // make sure to pass the image_id property, not the id!\\n        echo IGDBUtil::image_url($result[0]->cover->image_id, \\"720p\\");\\n    } catch (IGDBEndpointException $e) {\\n        // query failed\\n        echo $e->getMessage();\\n    } catch (InvaildArgumentException $e) {\\n        // $size parameter is not valid\\n        echo $e->getMessage();\\n    }\\n\\n?>\\n```\\n\\nSince the query in this code is correct, the output of it will be as below:\\n\\n```text\\narray (size=1)\\n  0 =>\\n    object(stdClass)[2]\\n      public \'id\' => int 7331\\n      public \'cover\' =>\\n        object(stdClass)[3]\\n          public \'id\' => int 81917\\n          public \'alpha_channel\' => boolean false\\n          public \'animated\' => boolean false\\n          public \'game\' => int 7331\\n          public \'height\' => int 960\\n          public \'image_id\' => string \'co1r7h\' (length=6)\\n          public \'url\' => string \'//images.igdb.com/igdb/image/upload/t_thumb/co1r7h.jpg\' (length=54)\\n          public \'width\' => int 720\\n          public \'checksum\' => string \'d2893576-b1fe-06e2-c813-2896e1bba9a1\' (length=36)\\n      public \'name\' => string \'Uncharted 4: A Thief\'s End\' (length=26)\\n//images.igdb.com/igdb/image/upload/t_thumb/co1r7h.jpg\\nhttps://images.igdb.com/igdb/image/upload/t_720p/co1r7h.jpg\\n```","html":"<p><code>public static function image_url(string $image_id, string $size) throws InvalidArgumentException: string</code></p>\\n<p>The image_url method will help you to parse an URL to a specific image size from the image id. If an unsupported image size is passed as <code>$size</code> an <code>InvalidArgumentException</code> will be thrown.</p>\\n<p><strong>Parameters</strong>:</p>\\n<ul>\\n<li><code>$image_id</code>: the image_id of the image you are trying to resize. Make sure to pass image_id instead of id!</li>\\n<li><code>$size</code>: a size string from the <a href=\\"https://api-docs.igdb.com/#images\\" target=\\"_blank\\" rel=\\"nofollow\\">documentation</a></li>\\n</ul>\\n<p><strong>Returns</strong>: the url to the image as a string</p>\\n<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    require_once \\"IGDB.php\\";\\n    require_once \\"IGDBUtil.php\\";\\n\\n    $igdb = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    try {\\n        // fetching one record from the database with expander to gather the cover object as well\\n        $result = $igdb->game(\'search \\"uncharted 4\\"; fields id,name,cover.*; limit 1;\');\\n\\n        // printing the result object\\n        var_dump($result);\\n\\n        // printing the default image url coming from the cover object\\n        echo $result[0]->cover->url;\\n\\n        // printing the resized image url parsed by the IGDBUtil::image_url method\\n        // make sure to pass the image_id property, not the id!\\n        echo IGDBUtil::image_url($result[0]->cover->image_id, \\"720p\\");\\n    } catch (IGDBEndpointException $e) {\\n        // query failed\\n        echo $e->getMessage();\\n    } catch (InvaildArgumentException $e) {\\n        // $size parameter is not valid\\n        echo $e->getMessage();\\n    }\\n\\n?>\\n</code></pre>\\n<p>Since the query in this code is correct, the output of it will be as below:</p>\\n<pre><code class=\\"language-text\\">array (size=1)\\n  0 =>\\n    object(stdClass)[2]\\n      public \'id\' => int 7331\\n      public \'cover\' =>\\n        object(stdClass)[3]\\n          public \'id\' => int 81917\\n          public \'alpha_channel\' => boolean false\\n          public \'animated\' => boolean false\\n          public \'game\' => int 7331\\n          public \'height\' => int 960\\n          public \'image_id\' => string \'co1r7h\' (length=6)\\n          public \'url\' => string \'//images.igdb.com/igdb/image/upload/t_thumb/co1r7h.jpg\' (length=54)\\n          public \'width\' => int 720\\n          public \'checksum\' => string \'d2893576-b1fe-06e2-c813-2896e1bba9a1\' (length=36)\\n      public \'name\' => string \'Uncharted 4: A Thief\'s End\' (length=26)\\n//images.igdb.com/igdb/image/upload/t_thumb/co1r7h.jpg\\nhttps://images.igdb.com/igdb/image/upload/t_720p/co1r7h.jpg\\n</code></pre>"},"meta":{"revision":0,"created":1620176732031,"version":0},"$loki":10},{"id":"igdb-query-builder","title":"IGDB Query builder","level":1,"parent":"igdb-query-builder","body":{"stripped":"The IGDBQueryBuilder class is a helper class which aims to make parsing apicalypse query strings easier. As this class is not part of the main IGDB class you will have to import it separately.","markdown":"The IGDBQueryBuilder class is a helper class which aims to make parsing apicalypse query strings easier. As this class is not part of the main `IGDB` class you will have to import it separately.","html":"<p>The IGDBQueryBuilder class is a helper class which aims to make parsing apicalypse query strings easier. As this class is not part of the main <code>IGDB</code> class you will have to import it separately.</p>"},"meta":{"revision":0,"created":1620176732032,"version":0},"$loki":11},{"id":"basic-usage","title":"Basic usage","level":1,"parent":"igdb-query-builder","body":{"stripped":"The class is using the builder pattern which makes the configuration much easier. After the required parameters set, calling the build method will parse and return the apicalypse query string. Make sure to build the query in a try...catch block to catch possible invalid parameters.\\n\\n\\n\\nSince this is a valid query no exceptions are thrown, and the output will be as below:\\n\\n\\n\\nThe output of this builder class can be passed straight to the IGDB endpoint methods.\\n\\n\\n\\nAnd the output will be:","markdown":"The class is using the builder pattern which makes the configuration much easier. After the required parameters set, calling the build method will parse and return the apicalypse query string. Make sure to build the query in a try...catch block to catch possible invalid parameters.\\n\\n```php\\n<?php\\n\\n    require_once \\"IGDBQueryBuilder.php\\";\\n\\n    $builder = new IGDBQueryBuilder();\\n\\n    try {\\n        echo $builder\\n            ->search(\\"uncharted 4\\") // setting the search parameter to search for uncharted 4\\n            ->fields(\\"id,name\\")     // setting the fields to include in the query\\n            ->limit(1)              // limit the results to 1 record\\n            ->build();              // building a query; returning a string\\n    } catch (IGDBInvalidParameterException $e) {\\n        echo $e->getMessage();\\n    }\\n\\n?>\\n```\\n\\nSince this is a valid query no exceptions are thrown, and the output will be as below:\\n\\n```text\\nfields id,name; search \\"uncharted 4\\"; limit 1;\\n```\\n\\nThe output of this builder class can be passed straight to the `IGDB` endpoint methods.\\n\\n```php\\n<?php\\n\\n    require_once \\"IGDB.php\\";\\n    require_once \\"IGDBQueryBuilder.php\\";\\n\\n    $igdb = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n    $builder = new IGDBQueryBuilder();\\n\\n    try {\\n        $builder\\n            ->search(\\"uncharted 4\\")\\n            ->fields(\\"id,name\\")\\n            ->limit(1);\\n\\n        var_dump(\\n            $igdb->game(\\n                $builder->build()\\n            )\\n        );\\n    } catch (IGDBInvalidParameterException $e) {\\n        // invalid parameter\\n        echo $e->getMessage();\\n    } catch (IGDBEndpointException $e) {\\n        // failed request\\n        echo $e->getMessage();\\n    }\\n\\n?>\\n```\\n\\nAnd the output will be:\\n\\n```text\\narray (size=1)\\n  0 =>\\n    object(stdClass)[3]\\n      public \'id\' => int 7331\\n      public \'name\' => string \'Uncharted 4: A Thief\'s End\' (length=26)\\n```","html":"<p>The class is using the builder pattern which makes the configuration much easier. After the required parameters set, calling the build method will parse and return the apicalypse query string. Make sure to build the query in a try...catch block to catch possible invalid parameters.</p>\\n<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    require_once \\"IGDBQueryBuilder.php\\";\\n\\n    $builder = new IGDBQueryBuilder();\\n\\n    try {\\n        echo $builder\\n            ->search(\\"uncharted 4\\") // setting the search parameter to search for uncharted 4\\n            ->fields(\\"id,name\\")     // setting the fields to include in the query\\n            ->limit(1)              // limit the results to 1 record\\n            ->build();              // building a query; returning a string\\n    } catch (IGDBInvalidParameterException $e) {\\n        echo $e->getMessage();\\n    }\\n\\n?>\\n</code></pre>\\n<p>Since this is a valid query no exceptions are thrown, and the output will be as below:</p>\\n<pre><code class=\\"language-text\\">fields id,name; search \\"uncharted 4\\"; limit 1;\\n</code></pre>\\n<p>The output of this builder class can be passed straight to the <code>IGDB</code> endpoint methods.</p>\\n<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    require_once \\"IGDB.php\\";\\n    require_once \\"IGDBQueryBuilder.php\\";\\n\\n    $igdb = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n    $builder = new IGDBQueryBuilder();\\n\\n    try {\\n        $builder\\n            ->search(\\"uncharted 4\\")\\n            ->fields(\\"id,name\\")\\n            ->limit(1);\\n\\n        var_dump(\\n            $igdb->game(\\n                $builder->build()\\n            )\\n        );\\n    } catch (IGDBInvalidParameterException $e) {\\n        // invalid parameter\\n        echo $e->getMessage();\\n    } catch (IGDBEndpointException $e) {\\n        // failed request\\n        echo $e->getMessage();\\n    }\\n\\n?>\\n</code></pre>\\n<p>And the output will be:</p>\\n<pre><code class=\\"language-text\\">array (size=1)\\n  0 =>\\n    object(stdClass)[3]\\n      public \'id\' => int 7331\\n      public \'name\' => string \'Uncharted 4: A Thief\'s End\' (length=26)\\n</code></pre>"},"meta":{"revision":0,"created":1620176732040,"version":0},"$loki":12},{"id":"legacy-configuration","title":"Legacy Configuration","level":1,"parent":"igdb-query-builder","body":{"stripped":"In earlier versions of the wrapper the query string could be parsed from an associative array. If you prefer that format you can still use it with this Query Builder. In this case you have to pass the $options associative array to the Query Builder\'s constructor.\\n\\n\\n\\nThis will produce the same output as the example code in the basic usage section.","markdown":"In earlier versions of the wrapper the query string could be parsed from an associative array. If you prefer that format you can still use it with this Query Builder. In this case you have to pass the `$options` associative array to the Query Builder\'s constructor.\\n\\n```php\\n<?php\\n\\n    require_once \\"IGDBQueryBuilder.php\\";\\n\\n    $options = array(\\n        \\"search\\" => \\"uncharted 4\\",\\n        \\"fields\\" => \\"id,name\\",\\n        \\"limit\\" => 1\\n    );\\n\\n    try {\\n        $builder = new IGDBQueryBuilder($options);\\n        echo $builder->build();\\n    } catch (IGDBInvalidParameterException $e) {\\n        echo $e->getMessage();\\n    }\\n\\n?>\\n```\\n\\nThis will produce the same output as the example code in the [basic usage](#basic-usage) section.","html":"<p>In earlier versions of the wrapper the query string could be parsed from an associative array. If you prefer that format you can still use it with this Query Builder. In this case you have to pass the <code>$options</code> associative array to the Query Builder\'s constructor.</p>\\n<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    require_once \\"IGDBQueryBuilder.php\\";\\n\\n    $options = array(\\n        \\"search\\" => \\"uncharted 4\\",\\n        \\"fields\\" => \\"id,name\\",\\n        \\"limit\\" => 1\\n    );\\n\\n    try {\\n        $builder = new IGDBQueryBuilder($options);\\n        echo $builder->build();\\n    } catch (IGDBInvalidParameterException $e) {\\n        echo $e->getMessage();\\n    }\\n\\n?>\\n</code></pre>\\n<p>This will produce the same output as the example code in the <a href=\\"#basic-usage\\">basic usage</a> section.</p>"},"meta":{"revision":0,"created":1620176732043,"version":0},"$loki":13},{"id":"configuration-methods","title":"Configuration Methods","level":1,"parent":"igdb-query-builder","body":{"stripped":"These methods can be used to configure the object after the class is instantiated.\\n\\n\\n\\nIf any of the configuration methods recieves a parameter which is invalid, an IGDBInvalidParameterException will be thrown.","markdown":"These methods can be used to configure the object after the class is instantiated.\\n\\n```php\\n<?php\\n\\n    require_once \\"IGDBQueryBuilder.php\\";\\n    $builder = new IGDBQueryBuilder();\\n\\n?>\\n```\\n\\nIf any of the configuration methods recieves a parameter which is invalid, an `IGDBInvalidParameterException` will be thrown.","html":"<p>These methods can be used to configure the object after the class is instantiated.</p>\\n<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    require_once \\"IGDBQueryBuilder.php\\";\\n    $builder = new IGDBQueryBuilder();\\n\\n?>\\n</code></pre>\\n<p>If any of the configuration methods recieves a parameter which is invalid, an <code>IGDBInvalidParameterException</code> will be thrown.</p>"},"meta":{"revision":0,"created":1620176732057,"version":0},"$loki":14},{"id":"id","title":"ID","level":2,"parent":"igdb-query-builder","body":{"stripped":"This is a legacy method, the IGDB API now filters the record id\'s in the where clause. This method is simply adding a statement to the where clause with the provided ID\'s.\\n\\nParameters:\\n\\n$id: either a number to set one id, or an array of numbers to set multiple id\'s\\n\\nReturns: the IGDBQueryBuilder instance","markdown":"```php\\npublic function id(int | array $id) throws IGDBInvalidParameterException: IGDBQueryBuilder\\n```\\n\\nThis is a legacy method, the IGDB API now filters the record id\'s in the `where` clause. This method is simply adding a statement to the where clause with the provided ID\'s.\\n\\n**Parameters**:\\n - `$id`: either a number to set one id, or an array of numbers to set multiple id\'s\\n\\n**Returns**: the `IGDBQueryBuilder` instance\\n\\n```php\\n<?php\\n\\n    // legacy configuration, single record id\\n    $options = array(\\n        \\"id\\" => 1,\\n    )\\n\\n    // legacy configuration, multiple record id\'s\\n    $options = array(\\n        \\"id\\" => array(1,2,3)\\n    )\\n\\n    // method configuration, single record id\\n    $builder->id(1);\\n\\n    // method configuration, multiple record id\'s\\n    $builder->id(\\n        array(1,2,3)\\n    );\\n\\n?>\\n```","html":"<pre><code class=\\"language-php\\">public function id(int | array $id) throws IGDBInvalidParameterException: IGDBQueryBuilder\\n</code></pre>\\n<p>This is a legacy method, the IGDB API now filters the record id\'s in the <code>where</code> clause. This method is simply adding a statement to the where clause with the provided ID\'s.</p>\\n<p><strong>Parameters</strong>:</p>\\n<ul>\\n<li><code>$id</code>: either a number to set one id, or an array of numbers to set multiple id\'s</li>\\n</ul>\\n<p><strong>Returns</strong>: the <code>IGDBQueryBuilder</code> instance</p>\\n<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    // legacy configuration, single record id\\n    $options = array(\\n        \\"id\\" => 1,\\n    )\\n\\n    // legacy configuration, multiple record id\'s\\n    $options = array(\\n        \\"id\\" => array(1,2,3)\\n    )\\n\\n    // method configuration, single record id\\n    $builder->id(1);\\n\\n    // method configuration, multiple record id\'s\\n    $builder->id(\\n        array(1,2,3)\\n    );\\n\\n?>\\n</code></pre>"},"meta":{"revision":0,"created":1620176732065,"version":0},"$loki":15},{"id":"search","title":"Search","level":2,"parent":"igdb-query-builder","body":{"stripped":"Search based on name, results are sorted by similarity to the given search string.\\n\\nParameters:\\n\\n$search: a string to set for the search statement\\n\\nReturns: the IGDBQueryBuilder instance","markdown":"```php\\npublic function search(string $search) throws IGDBInvalidParameterException: IGDBQueryBuilder\\n```\\n\\nSearch based on name, results are sorted by similarity to the given search string.\\n\\n**Parameters**:\\n - `$search`: a string to set for the search statement\\n\\n**Returns**: the `IGDBQueryBuilder` instance\\n\\n```php\\n<?php\\n\\n    // legacy configuration\\n    $options = array(\\n        \\"search\\" => \\"uncharted 4\\"\\n    )\\n\\n    // method configuration\\n    $builder->search(\\"uncharted 4\\");\\n\\n?>\\n```","html":"<pre><code class=\\"language-php\\">public function search(string $search) throws IGDBInvalidParameterException: IGDBQueryBuilder\\n</code></pre>\\n<p>Search based on name, results are sorted by similarity to the given search string.</p>\\n<p><strong>Parameters</strong>:</p>\\n<ul>\\n<li><code>$search</code>: a string to set for the search statement</li>\\n</ul>\\n<p><strong>Returns</strong>: the <code>IGDBQueryBuilder</code> instance</p>\\n<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    // legacy configuration\\n    $options = array(\\n        \\"search\\" => \\"uncharted 4\\"\\n    )\\n\\n    // method configuration\\n    $builder->search(\\"uncharted 4\\");\\n\\n?>\\n</code></pre>"},"meta":{"revision":0,"created":1620176732072,"version":0},"$loki":16},{"id":"fields","title":"Fields","level":2,"parent":"igdb-query-builder","body":{"stripped":"You can tell the wrapper which fields you want to get in the result.\\n\\nFields are properties of an entity. For example, a Game field would be genres or release_dates. Some fields have properties of their own, for example, the genres field has the property name.\\n\\nThe default value of the fields property is \\\\* which means every fields will be returned in the results.\\n\\nParameters:\\n\\n$fields: either a comma separated list or an array of strings of the names of the fields you want to include in the results\\n\\nReturns: the IGDBQueryBuilder instance","markdown":"```php\\npublic function fields(string | array $fields) throws IGDBInvalidParameterException: IGDBQueryBuilder\\n```\\n\\nYou can tell the wrapper which fields you want to get in the result.\\n\\nFields are properties of an entity. For example, a Game field would be `genres` or `release_dates`. Some fields have properties of their own, for example, the `genres` field has the property `name`.\\n\\nThe default value of the `fields` property is `*` which means every fields will be returned in the results.\\n\\n**Parameters**:\\n - `$fields`: either a comma separated list or an array of strings of the names of the fields you want to include in the results\\n\\n**Returns**: the `IGDBQueryBuilder` instance\\n\\n```php\\n<?php\\n\\n    // legacy configuration, comma separated list of field names\\n    $options = array(\\n        \\"fields\\" => \\"id,name,slug\\"\\n    );\\n\\n    // legacy configuration, array of field names\\n    $options = array(\\n        \\"fields\\" => array(\\"id\\", \\"name\\", \\"slug\\");\\n    )\\n\\n    // method configuration, comma separated list of field names\\n    $builder->fields(\\"id,name,slug\\");\\n\\n    // method configuration, array of field names\\n    $builder->fields(\\n        array(\\"id\\", \\"name\\", \\"slug\\")\\n    )\\n\\n?>\\n```","html":"<pre><code class=\\"language-php\\">public function fields(string | array $fields) throws IGDBInvalidParameterException: IGDBQueryBuilder\\n</code></pre>\\n<p>You can tell the wrapper which fields you want to get in the result.</p>\\n<p>Fields are properties of an entity. For example, a Game field would be <code>genres</code> or <code>release_dates</code>. Some fields have properties of their own, for example, the <code>genres</code> field has the property <code>name</code>.</p>\\n<p>The default value of the <code>fields</code> property is <code>*</code> which means every fields will be returned in the results.</p>\\n<p><strong>Parameters</strong>:</p>\\n<ul>\\n<li><code>$fields</code>: either a comma separated list or an array of strings of the names of the fields you want to include in the results</li>\\n</ul>\\n<p><strong>Returns</strong>: the <code>IGDBQueryBuilder</code> instance</p>\\n<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    // legacy configuration, comma separated list of field names\\n    $options = array(\\n        \\"fields\\" => \\"id,name,slug\\"\\n    );\\n\\n    // legacy configuration, array of field names\\n    $options = array(\\n        \\"fields\\" => array(\\"id\\", \\"name\\", \\"slug\\");\\n    )\\n\\n    // method configuration, comma separated list of field names\\n    $builder->fields(\\"id,name,slug\\");\\n\\n    // method configuration, array of field names\\n    $builder->fields(\\n        array(\\"id\\", \\"name\\", \\"slug\\")\\n    )\\n\\n?>\\n</code></pre>"},"meta":{"revision":0,"created":1620176732079,"version":0},"$loki":17},{"id":"exclude","title":"Exclude","level":2,"parent":"igdb-query-builder","body":{"stripped":"Exclude is a complement to the regular fields which allows you to request all fields with the exception of any numbers of fields specified with exclude.\\n\\nParameters:\\n\\n$exclude: either a comma separated list or an array of strings of the names of the fields you want to exclude from the results\\n\\nReturns: the IGDBQueryBuilder instance","markdown":"```php\\npublic function exlude(string | array $exclude) throws IGDBInvalidParameterException: IGDBQueryBuilder\\n```\\n\\nExclude is a complement to the regular fields which allows you to request all fields with the exception of any numbers of fields specified with exclude.\\n\\n**Parameters**:\\n - `$exclude`: either a comma separated list or an array of strings of the names of the fields you want to exclude from the results\\n\\n**Returns**: the `IGDBQueryBuilder` instance\\n\\n```php\\n<?php\\n\\n    // legacy configuration, comma separated list of field names\\n    $options = array(\\n        \\"exclude\\" => \\"slug,cover\\"\\n    );\\n\\n    // legacy configuration, array of field names\\n    $options = array(\\n        \\"exclude\\" => array(\\"slug\\", \\"cover\\");\\n    )\\n\\n    // method configuration, comma separated list of field names\\n    $builder->exclude(\\"slug,cover\\");\\n\\n    // method configuration, array of field names\\n    $builder->exclude(\\n        array(\\"slug\\", \\"cover\\");\\n    )\\n\\n?>\\n```","html":"<pre><code class=\\"language-php\\">public function exlude(string | array $exclude) throws IGDBInvalidParameterException: IGDBQueryBuilder\\n</code></pre>\\n<p>Exclude is a complement to the regular fields which allows you to request all fields with the exception of any numbers of fields specified with exclude.</p>\\n<p><strong>Parameters</strong>:</p>\\n<ul>\\n<li><code>$exclude</code>: either a comma separated list or an array of strings of the names of the fields you want to exclude from the results</li>\\n</ul>\\n<p><strong>Returns</strong>: the <code>IGDBQueryBuilder</code> instance</p>\\n<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    // legacy configuration, comma separated list of field names\\n    $options = array(\\n        \\"exclude\\" => \\"slug,cover\\"\\n    );\\n\\n    // legacy configuration, array of field names\\n    $options = array(\\n        \\"exclude\\" => array(\\"slug\\", \\"cover\\");\\n    )\\n\\n    // method configuration, comma separated list of field names\\n    $builder->exclude(\\"slug,cover\\");\\n\\n    // method configuration, array of field names\\n    $builder->exclude(\\n        array(\\"slug\\", \\"cover\\");\\n    )\\n\\n?>\\n</code></pre>"},"meta":{"revision":0,"created":1620176732084,"version":0},"$loki":18},{"id":"limit","title":"Limit","level":2,"parent":"igdb-query-builder","body":{"stripped":"The maximum number of results in a single query. This value must be a number between 1 and 500. The default value of this parameter is 10.\\n\\nParameters:\\n\\n$limit: a number between 1 and 500\\n\\nReturns: the IGDBQueryBuilder instance","markdown":"```php\\npublic function limit(int $limit) throws IGDBInvalidParameterException: IGDBQueryBuilder\\n```\\n\\nThe maximum number of results in a single query. This value must be a number between 1 and 500. The default value of this parameter is 10.\\n\\n**Parameters**:\\n - `$limit`: a number between 1 and 500\\n\\n**Returns**: the `IGDBQueryBuilder` instance\\n\\n```php\\n<?php\\n\\n    // legacy configuration\\n    $options = array(\\n        \\"limit\\" => 5\\n    );\\n\\n    // method configuration\\n    $builder->limit(5);\\n\\n?>\\n```","html":"<pre><code class=\\"language-php\\">public function limit(int $limit) throws IGDBInvalidParameterException: IGDBQueryBuilder\\n</code></pre>\\n<p>The maximum number of results in a single query. This value must be a number between 1 and 500. The default value of this parameter is 10.</p>\\n<p><strong>Parameters</strong>:</p>\\n<ul>\\n<li><code>$limit</code>: a number between 1 and 500</li>\\n</ul>\\n<p><strong>Returns</strong>: the <code>IGDBQueryBuilder</code> instance</p>\\n<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    // legacy configuration\\n    $options = array(\\n        \\"limit\\" => 5\\n    );\\n\\n    // method configuration\\n    $builder->limit(5);\\n\\n?>\\n</code></pre>"},"meta":{"revision":0,"created":1620176732089,"version":0},"$loki":19},{"id":"offset","title":"Offset","level":2,"parent":"igdb-query-builder","body":{"stripped":"This will start the result list at the provided value and will give limit number of results. This value must be 0 or greater. The default value is 0.\\n\\nParameters:\\n\\n$offset: a number. 0 or greater.\\n\\nReturns: the IGDBQueryBuilder instance","markdown":"```php\\npublic function offset(number $offset) throws IGDBInvalidParameterException: IGDBQueryBuilder\\n```\\n\\nThis will start the result list at the provided value and will give `limit` number of results. This value must be 0 or greater. The default value is 0.\\n\\n**Parameters**:\\n - `$offset`: a number. 0 or greater.\\n\\n**Returns**: the `IGDBQueryBuilder` instance\\n\\n```php\\n<?php\\n\\n    // legacy configuration\\n    $options = array(\\n        \\"offset\\" => 5\\n    );\\n\\n    // method configuration\\n    $builder->offset(5);\\n\\n?>\\n```","html":"<pre><code class=\\"language-php\\">public function offset(number $offset) throws IGDBInvalidParameterException: IGDBQueryBuilder\\n</code></pre>\\n<p>This will start the result list at the provided value and will give <code>limit</code> number of results. This value must be 0 or greater. The default value is 0.</p>\\n<p><strong>Parameters</strong>:</p>\\n<ul>\\n<li><code>$offset</code>: a number. 0 or greater.</li>\\n</ul>\\n<p><strong>Returns</strong>: the <code>IGDBQueryBuilder</code> instance</p>\\n<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    // legacy configuration\\n    $options = array(\\n        \\"offset\\" => 5\\n    );\\n\\n    // method configuration\\n    $builder->offset(5);\\n\\n?>\\n</code></pre>"},"meta":{"revision":0,"created":1620176732092,"version":0},"$loki":20},{"id":"where","title":"Where","level":2,"parent":"igdb-query-builder","body":{"stripped":"Filters are used to swift through results to get what you want. You can exclude and include results based on their properties. For example you could remove all Games where the rating was below 80 (where rating >= 80).\\n\\nIf you provide the where parameters as an array, you must have three values in it with the following indexes:\\n\\n$field: The name of the field you want to apply the filter to\\n\\n$postfix: The postfix you want to use with the filter. Refer to the Available Postfixes section of the IGDB Filters Documentation for available postfixes.\\n\\n$value: The value of the filter.\\n\\n\\n\\nYou can provide the filter parameter as string too. In this case you can pass the string as an apicalypse string:\\n\\n\\n\\nOr you can provide multiple criteria:\\n\\n\\n\\nIn this case make sure to separate the field name, the postfix and the value with spaces!","markdown":"```php\\npublic function where(string | array $where) throws IGDBInvalidParameterException: IGDBQueryBuilder\\n```\\n\\nFilters are used to swift through results to get what you want. You can exclude and include results based on their properties. For example you could remove all Games where the rating was below 80 `(where rating >= 80)`.\\n\\nIf you provide the where parameters as an array, you must have three values in it with the following indexes:\\n - `$field`: The name of the field you want to apply the filter to\\n - `$postfix`: The postfix you want to use with the filter. Refer to the Available Postfixes section of the IGDB Filters Documentation for available postfixes.\\n - `$value`: The value of the filter.\\n\\n```php\\n<?php\\n\\n    // legacy configuration\\n    // pass a single filter rule as an array\\n    // in this case you must have field, postfix and value elements in the array\\n    $query = array(\\n        \'where\' => array(\\n            \'field\' => \'release_dates.platform\',\\n            \'postfix\' => \'=\',\\n            \'value\' => 8\\n        )\\n    );\\n\\n    // method configuration\\n    $builder->where(\\n        array(\\n            \\"field\\" => \\"release_dates.platform\\",\\n            \\"postfix\\" => \\"=\\",\\n            \\"value\\" => 8\\n        )\\n    )\\n\\n    // legacy configuration\\n    // pass multiple filter rules as an array of arrays\\n    // in this case you must have field, postfix and value elements in the arrays\\n    $query = array(\\n    \'where\' => array(\\n        array(\\n            \'field\' => \'release_dates.platform\',\\n            \'postfix\' => \'=\',\\n            \'value\' => 8\\n        ),\\n        array(\\n            \'field\' => \'total_rating\',\\n            \'postfix\' => \'>=\',\\n            \'value\' => 70\\n        )\\n    );\\n\\n    // method configuration\\n    // multiple where statements can be combined by calling the when method multiple times\\n    // in the query string the segments will be merged by and \\"&\\" signs\\n    $builder\\n        ->where(\\n            array(\\n                \'field\' => \'release_dates.platform\',\\n                \'postfix\' => \'=\',\\n                \'value\' => 8\\n            )\\n        )\\n        ->where(\\n            array(\\n                \'field\' => \'total_rating\',\\n                \'postfix\' => \'>=\',\\n                \'value\' => 70\\n            )\\n        );\\n?>\\n```\\n\\nYou can provide the filter parameter as string too. In this case you can pass the string as an apicalypse string:\\n\\n```php\\n<?php\\n\\n    // legacy configuration\\n    // pass a single filter rule as a string\\n    $query = array(\\n    \'where\' => \'release_dates.platform = 8\'\\n    );\\n\\n    // method configuration\\n    $builder->where(\\"release_dates.platform = 8\\");\\n\\n?>\\n```\\n\\nOr you can provide multiple criteria:\\n\\n```php\\n<?php\\n\\n    // legacy configuration\\n    // multiple filter rule as an array of apicalypse string\\n    $query = array(\\n        \'where\' => array(\\n            \'release_dates.platform = 8\',\\n            \'total_rating >= 70\',\\n            \'genres = 4\'\\n        )\\n    );\\n\\n    // method configuration\\n    // the where method has to be called multiple times\\n    $builder\\n        ->where(\\"release_dates.platform = 8\\")\\n        ->where(\\"total_rating >= 70\\")\\n        ->where(\\"genres = 4\\");\\n\\n?>\\n```\\n\\nIn this case make sure to separate the field name, the postfix and the value with spaces!\\n\\n<blockquote>\\nWhen building the query string after calling the build method, the segments will be concated by \\"and\\" operators (&). If you need more complex where statements consider using the custom_where method which allows you to use different operators and does not restrict the format of the passed parameters.\\n</blockquote>","html":"<pre><code class=\\"language-php\\">public function where(string | array $where) throws IGDBInvalidParameterException: IGDBQueryBuilder\\n</code></pre>\\n<p>Filters are used to swift through results to get what you want. You can exclude and include results based on their properties. For example you could remove all Games where the rating was below 80 <code>(where rating >= 80)</code>.</p>\\n<p>If you provide the where parameters as an array, you must have three values in it with the following indexes:</p>\\n<ul>\\n<li><code>$field</code>: The name of the field you want to apply the filter to</li>\\n<li><code>$postfix</code>: The postfix you want to use with the filter. Refer to the Available Postfixes section of the IGDB Filters Documentation for available postfixes.</li>\\n<li><code>$value</code>: The value of the filter.</li>\\n</ul>\\n<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    // legacy configuration\\n    // pass a single filter rule as an array\\n    // in this case you must have field, postfix and value elements in the array\\n    $query = array(\\n        \'where\' => array(\\n            \'field\' => \'release_dates.platform\',\\n            \'postfix\' => \'=\',\\n            \'value\' => 8\\n        )\\n    );\\n\\n    // method configuration\\n    $builder->where(\\n        array(\\n            \\"field\\" => \\"release_dates.platform\\",\\n            \\"postfix\\" => \\"=\\",\\n            \\"value\\" => 8\\n        )\\n    )\\n\\n    // legacy configuration\\n    // pass multiple filter rules as an array of arrays\\n    // in this case you must have field, postfix and value elements in the arrays\\n    $query = array(\\n    \'where\' => array(\\n        array(\\n            \'field\' => \'release_dates.platform\',\\n            \'postfix\' => \'=\',\\n            \'value\' => 8\\n        ),\\n        array(\\n            \'field\' => \'total_rating\',\\n            \'postfix\' => \'>=\',\\n            \'value\' => 70\\n        )\\n    );\\n\\n    // method configuration\\n    // multiple where statements can be combined by calling the when method multiple times\\n    // in the query string the segments will be merged by and \\"&#x26;\\" signs\\n    $builder\\n        ->where(\\n            array(\\n                \'field\' => \'release_dates.platform\',\\n                \'postfix\' => \'=\',\\n                \'value\' => 8\\n            )\\n        )\\n        ->where(\\n            array(\\n                \'field\' => \'total_rating\',\\n                \'postfix\' => \'>=\',\\n                \'value\' => 70\\n            )\\n        );\\n?>\\n</code></pre>\\n<p>You can provide the filter parameter as string too. In this case you can pass the string as an apicalypse string:</p>\\n<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    // legacy configuration\\n    // pass a single filter rule as a string\\n    $query = array(\\n    \'where\' => \'release_dates.platform = 8\'\\n    );\\n\\n    // method configuration\\n    $builder->where(\\"release_dates.platform = 8\\");\\n\\n?>\\n</code></pre>\\n<p>Or you can provide multiple criteria:</p>\\n<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    // legacy configuration\\n    // multiple filter rule as an array of apicalypse string\\n    $query = array(\\n        \'where\' => array(\\n            \'release_dates.platform = 8\',\\n            \'total_rating >= 70\',\\n            \'genres = 4\'\\n        )\\n    );\\n\\n    // method configuration\\n    // the where method has to be called multiple times\\n    $builder\\n        ->where(\\"release_dates.platform = 8\\")\\n        ->where(\\"total_rating >= 70\\")\\n        ->where(\\"genres = 4\\");\\n\\n?>\\n</code></pre>\\n<p>In this case make sure to separate the field name, the postfix and the value with spaces!</p>\\n<blockquote>\\nWhen building the query string after calling the build method, the segments will be concated by \\"and\\" operators (&). If you need more complex where statements consider using the custom_where method which allows you to use different operators and does not restrict the format of the passed parameters.\\n</blockquote>"},"meta":{"revision":0,"created":1620176732109,"version":0},"$loki":21},{"id":"custom-where","title":"Custom Where","level":2,"parent":"igdb-query-builder","body":{"stripped":"With this method you can add a custom where statement to the query. This method validates only the type of the passed $where parameter and will throw an IGDBInvalidParameterException only if the parameter is a non-string value.\\n\\nWhen building the query the parameters added by this method will be processed along with the \\"simple\\" where statements. If you have multiple where statements (custom or simple) they will be merged with an and & operator in the end.\\n\\nParameters:\\n\\n$where: must be a string. In case of any other type of variables will cause this method to throw an IGDBInvalidParameterException.\\n\\nReturns: the IGDBQueryBuilder instance","markdown":"```php\\npublic function custom_where(string $where) throws IGDBInvalidParameterException: IGDBQueryBuilder\\n```\\n\\nWith this method you can add a custom where statement to the query. This method validates only the type of the passed `$where` parameter and will throw an `IGDBInvalidParameterException` only if the parameter is a non-string value.\\n\\nWhen building the query the parameters added by this method will be processed along with the \\"simple\\" where statements. If you have multiple where statements (custom or simple) they will be merged with an and `&` operator in the end.\\n\\n**Parameters**:\\n - `$where`: must be a string. In case of any other type of variables will cause this method to throw an `IGDBInvalidParameterException`.\\n\\n**Returns**: the `IGDBQueryBuilder` instance\\n\\n```php\\n<?php\\n\\n    // legacy configuration\\n    $options = array(\\n        \\"custom_where\\" => \\"id = 5\\"\\n    );\\n\\n    // method configuration\\n    $builder->custom_where(\\"id = 5\\");\\n\\n?>\\n```","html":"<pre><code class=\\"language-php\\">public function custom_where(string $where) throws IGDBInvalidParameterException: IGDBQueryBuilder\\n</code></pre>\\n<p>With this method you can add a custom where statement to the query. This method validates only the type of the passed <code>$where</code> parameter and will throw an <code>IGDBInvalidParameterException</code> only if the parameter is a non-string value.</p>\\n<p>When building the query the parameters added by this method will be processed along with the \\"simple\\" where statements. If you have multiple where statements (custom or simple) they will be merged with an and <code>&#x26;</code> operator in the end.</p>\\n<p><strong>Parameters</strong>:</p>\\n<ul>\\n<li><code>$where</code>: must be a string. In case of any other type of variables will cause this method to throw an <code>IGDBInvalidParameterException</code>.</li>\\n</ul>\\n<p><strong>Returns</strong>: the <code>IGDBQueryBuilder</code> instance</p>\\n<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    // legacy configuration\\n    $options = array(\\n        \\"custom_where\\" => \\"id = 5\\"\\n    );\\n\\n    // method configuration\\n    $builder->custom_where(\\"id = 5\\");\\n\\n?>\\n</code></pre>"},"meta":{"revision":0,"created":1620176732113,"version":0},"$loki":22},{"id":"sort","title":"Sort","level":2,"parent":"igdb-query-builder","body":{"stripped":"The ordering of the results can be controlled by this parameter. You can order the results by a specific field name in ascending (asc) and descending (desc) order.\\n\\nIF you provide the Order parameter as an array, you must have two values in it with the following indexes:\\n\\n$field: The field you want to do the ordering by\\n\\n$direction: The direction of the ordering. It must be either asc for ascending or desc for descending ordering.\\n\\nParameters:\\n\\n$sort: either an apicalypse formatted sort statement, or an array with the field and direction keys in them\\n\\nReturns: the IGDBQueryBuilder instance","markdown":"```php\\npublic function sort(string | array $sort) throws IGDBInvalidParameterException: IGDBQueryBuilder\\n```\\n\\nThe ordering of the results can be controlled by this parameter. You can order the results by a specific field name in ascending (asc) and descending (desc) order.\\n\\nIF you provide the Order parameter as an array, you must have two values in it with the following indexes:\\n - `$field`: The field you want to do the ordering by\\n - `$direction`: The direction of the ordering. It must be either `asc` for ascending or `desc` for descending ordering.\\n\\n**Parameters**:\\n - `$sort`: either an apicalypse formatted sort statement, or an array with the field and direction keys in them\\n\\n**Returns**: the `IGDBQueryBuilder` instance\\n\\n```php\\n<?php\\n    // legacy configuration, apicalpyse string\\n    $options = array(\\n        \\"sort\\" => \\"name asc\\"\\n    );\\n\\n    // legacy configuration, array\\n    $options = array(\\n        \\"sort\\" => array(\\n            \\"field\\" => \\"name\\",\\n            \\"order\\" => \\"asc\\"\\n        )\\n    );\\n\\n    // method configuration, apicalypse string\\n    $builder->sort(\\"name asc\\");\\n\\n    // method configuration, array\\n    $builder->sort(\\n        array(\\n            \\"field\\" => \\"name\\",\\n            \\"order\\" => \\"asc\\"\\n        )\\n    );\\n?>\\n```","html":"<pre><code class=\\"language-php\\">public function sort(string | array $sort) throws IGDBInvalidParameterException: IGDBQueryBuilder\\n</code></pre>\\n<p>The ordering of the results can be controlled by this parameter. You can order the results by a specific field name in ascending (asc) and descending (desc) order.</p>\\n<p>IF you provide the Order parameter as an array, you must have two values in it with the following indexes:</p>\\n<ul>\\n<li><code>$field</code>: The field you want to do the ordering by</li>\\n<li><code>$direction</code>: The direction of the ordering. It must be either <code>asc</code> for ascending or <code>desc</code> for descending ordering.</li>\\n</ul>\\n<p><strong>Parameters</strong>:</p>\\n<ul>\\n<li><code>$sort</code>: either an apicalypse formatted sort statement, or an array with the field and direction keys in them</li>\\n</ul>\\n<p><strong>Returns</strong>: the <code>IGDBQueryBuilder</code> instance</p>\\n<pre><code class=\\"language-php\\">&#x3C;?php\\n    // legacy configuration, apicalpyse string\\n    $options = array(\\n        \\"sort\\" => \\"name asc\\"\\n    );\\n\\n    // legacy configuration, array\\n    $options = array(\\n        \\"sort\\" => array(\\n            \\"field\\" => \\"name\\",\\n            \\"order\\" => \\"asc\\"\\n        )\\n    );\\n\\n    // method configuration, apicalypse string\\n    $builder->sort(\\"name asc\\");\\n\\n    // method configuration, array\\n    $builder->sort(\\n        array(\\n            \\"field\\" => \\"name\\",\\n            \\"order\\" => \\"asc\\"\\n        )\\n    );\\n?>\\n</code></pre>"},"meta":{"revision":0,"created":1620176732121,"version":0},"$loki":23},{"id":"building-the-query","title":"Building the query","level":1,"parent":"igdb-query-builder","body":{"stripped":"When the builder configuration is done the query string can be built by the build method. The output of this method will be your query string which can be passed straight to the IGDB endpoint methods.\\n\\nParameters: -\\n\\nReturns: the apicalypse query string","markdown":"```php\\npublic function build(): string\\n```\\n\\nWhen the builder configuration is done the query string can be built by the `build` method. The output of this method will be your query string which can be passed straight to the `IGDB` endpoint methods.\\n\\n**Parameters**: -\\n\\n**Returns**: the apicalypse query string\\n\\n```php\\n\\n    $builder = new IGDBQueryBuilder();\\n\\n    // output will be:\\n    // fields id,name; search \\"uncharted 4\\"; limit 5;\\n    echo $builder\\n        ->fields(\\"id, name\\")\\n        ->search(\\"uncharted 4\\")\\n        ->limit(5)\\n        ->build();\\n\\n?>\\n```","html":"<pre><code class=\\"language-php\\">public function build(): string\\n</code></pre>\\n<p>When the builder configuration is done the query string can be built by the <code>build</code> method. The output of this method will be your query string which can be passed straight to the <code>IGDB</code> endpoint methods.</p>\\n<p><strong>Parameters</strong>: -</p>\\n<p><strong>Returns</strong>: the apicalypse query string</p>\\n<pre><code class=\\"language-php\\">\\n    $builder = new IGDBQueryBuilder();\\n\\n    // output will be:\\n    // fields id,name; search \\"uncharted 4\\"; limit 5;\\n    echo $builder\\n        ->fields(\\"id, name\\")\\n        ->search(\\"uncharted 4\\")\\n        ->limit(5)\\n        ->build();\\n\\n?>\\n</code></pre>"},"meta":{"revision":0,"created":1620176732124,"version":0},"$loki":24},{"id":"introduction","title":"Introduction","level":1,"parent":"igdb","body":{"stripped":"The IGDB class is the main class that you are going to use to communicate with the IGDB Database. After instantiating the class you will have access to all of the endpoint methods that are exposed by the IGDB Rest Api.","markdown":"The `IGDB` class is the main class that you are going to use to communicate with the IGDB Database. After instantiating the class you will have access to all of the endpoint methods that are exposed by the IGDB Rest Api.","html":"<p>The <code>IGDB</code> class is the main class that you are going to use to communicate with the IGDB Database. After instantiating the class you will have access to all of the endpoint methods that are exposed by the IGDB Rest Api.</p>"},"meta":{"revision":0,"created":1620176732127,"version":0},"$loki":25},{"id":"instantiating-the-wrapper","title":"Instantiating the wrapper","level":1,"parent":"igdb","body":{"stripped":"public IGDB::\\\\__construct ( string $client_id, string $access_token ) : void\\n\\nWhen the required source files are imported to your project, you will have access to the IGDB class. It can be instantiated by passing your client_id and access_token.","markdown":"`public IGDB::__construct ( string $client_id, string $access_token ) : void`\\n\\nWhen the required source files are imported to your project, you will have access to the `IGDB` class. It can be instantiated by passing your `client_id` and `access_token`.\\n\\n```php\\n<?php\\n    require_once \\"IGDB.php\\";\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n>\\n```\\n\\n<blockquote>\\nYour tokens are not validated by this wrapper. In case of invalid credentials, the IGDB server will send an error response to your query.\\n</blockquote>","html":"<p><code>public IGDB::__construct ( string $client_id, string $access_token ) : void</code></p>\\n<p>When the required source files are imported to your project, you will have access to the <code>IGDB</code> class. It can be instantiated by passing your <code>client_id</code> and <code>access_token</code>.</p>\\n<pre><code class=\\"language-php\\">&#x3C;?php\\n    require_once \\"IGDB.php\\";\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n>\\n</code></pre>\\n<blockquote>\\nYour tokens are not validated by this wrapper. In case of invalid credentials, the IGDB server will send an error response to your query.\\n</blockquote>"},"meta":{"revision":0,"created":1620176732130,"version":0},"$loki":26},{"id":"class-properties","title":"Class properties","level":1,"parent":"igdb","body":{"stripped":"These properties are private and you have access to a few of them with getter methods.","markdown":"These properties are `private` and you have access to a few of them with getter methods.","html":"<p>These properties are <code>private</code> and you have access to a few of them with getter methods.</p>"},"meta":{"revision":0,"created":1620176732131,"version":0},"$loki":27},{"id":"client-id","title":"Client ID","level":2,"parent":"igdb","body":{"stripped":"IGDB::$client_id ( string )\\n\\nThe Client ID you can get from your Twitch Account.","markdown":"`IGDB::$client_id ( string )`\\n\\nThe Client ID you can get from your Twitch Account.","html":"<p><code>IGDB::$client_id ( string )</code></p>\\n<p>The Client ID you can get from your Twitch Account.</p>"},"meta":{"revision":0,"created":1620176732132,"version":0},"$loki":28},{"id":"access-token","title":"Access Token","level":2,"parent":"igdb","body":{"stripped":"IGDB::$access_token ( string )\\n\\nThe Access Token you can get from your Twitch Account.","markdown":"`IGDB::$access_token ( string )`\\n\\nThe Access Token you can get from your Twitch Account.","html":"<p><code>IGDB::$access_token ( string )</code></p>\\n<p>The Access Token you can get from your Twitch Account.</p>"},"meta":{"revision":0,"created":1620176732134,"version":0},"$loki":29},{"id":"curl-handler","title":"CURL Handler","level":2,"parent":"igdb","body":{"stripped":"IGDB::$curl_handler ( resource )\\n\\nThe resource handler of the curl session. This property will hold the return value of curl_init php function.","markdown":"`IGDB::$curl_handler ( resource )`\\n\\nThe resource handler of the curl session. This property will hold the return value of [curl_init](https://www.php.net/curl_init) php function.","html":"<p><code>IGDB::$curl_handler ( resource )</code></p>\\n<p>The resource handler of the curl session. This property will hold the return value of <a href=\\"https://www.php.net/curl_init\\" target=\\"_blank\\" rel=\\"nofollow\\">curl_init</a> php function.</p>"},"meta":{"revision":0,"created":1620176732136,"version":0},"$loki":30},{"id":"request-info","title":"Request Info","level":2,"parent":"igdb","body":{"stripped":"IGDB::$request_info ( mixed )\\n\\nThis object will hold the most recent query\'s request information. This property will hold the return value of the curl_getinfo php function.","markdown":"`IGDB::$request_info ( mixed )`\\n\\nThis object will hold the most recent query\'s request information. This property will hold the return value of the [curl_getinfo](https://www.php.net/manual/en/function.curl-getinfo.php) php function.","html":"<p><code>IGDB::$request_info ( mixed )</code></p>\\n<p>This object will hold the most recent query\'s request information. This property will hold the return value of the <a href=\\"https://www.php.net/manual/en/function.curl-getinfo.php\\" target=\\"_blank\\" rel=\\"nofollow\\">curl_getinfo</a> php function.</p>"},"meta":{"revision":0,"created":1620176732137,"version":0},"$loki":31},{"id":"public-methods","title":"Public Methods","level":1,"parent":"igdb","body":{"stripped":"","markdown":"","html":""},"meta":{"revision":0,"created":1620176732138,"version":0},"$loki":32},{"id":"get-request-info","title":"Get Request Info","level":2,"parent":"igdb","body":{"stripped":"IGDB::get_request_info() : mixed\\n\\nAfter a query is executed, the request information will be stored in the IGDB::$request_info property and can be retrieved using this method.","markdown":"`IGDB::get_request_info() : mixed`\\n\\nAfter a query is executed, the request information will be stored in the [`IGDB::$request_info`](#request-info) property and can be retrieved using this method.\\n\\n<blockquote>\\nThe new version of the IGDB API (v4) will return a http response code 429 when you exceed the limit on the database (4 requests per second at the time of writing this documentation). The response code of the requests can be fetched from the request info.\\n</blockquote>\\n\\n```php\\n$IGDB->game($query);\\n$info = $IGDB->get_request_info();\\n\\n// this will print the status code of the last request\\necho $info[\'http_code\']\\n```\\n\\n<blockquote>\\n[IGDB Rate Limits Documentation](https://api-docs.igdb.com/#rate-limits)\\n</blockquote>","html":"<p><code>IGDB::get_request_info() : mixed</code></p>\\n<p>After a query is executed, the request information will be stored in the <a href=\\"#request-info\\"><code>IGDB::$request_info</code></a> property and can be retrieved using this method.</p>\\n<blockquote>\\nThe new version of the IGDB API (v4) will return a http response code 429 when you exceed the limit on the database (4 requests per second at the time of writing this documentation). The response code of the requests can be fetched from the request info.\\n</blockquote>\\n<pre><code class=\\"language-php\\">$IGDB->game($query);\\n$info = $IGDB->get_request_info();\\n\\n// this will print the status code of the last request\\necho $info[\'http_code\']\\n</code></pre>\\n<blockquote>\\n[IGDB Rate Limits Documentation](https://api-docs.igdb.com/#rate-limits)\\n</blockquote>"},"meta":{"revision":0,"created":1620176732141,"version":0},"$loki":33},{"id":"close-curl-session","title":"Close CURL Session","level":2,"parent":"igdb","body":{"stripped":"IGDB::curl_close() : void\\n\\nYou can close the CURL session handler manually if you want to. The class will not do it by itself to be able to execute multiple requests with the same instance. After closing the session you will not be able to start new query with the actual instance of the class unless you reinitialize it.","markdown":"`IGDB::curl_close() : void`\\n\\nYou can close the CURL session handler manually if you want to. The class will not do it by itself to be able to execute multiple requests with the same instance. After closing the session you will not be able to start new query with the actual instance of the class unless you reinitialize it.","html":"<p><code>IGDB::curl_close() : void</code></p>\\n<p>You can close the CURL session handler manually if you want to. The class will not do it by itself to be able to execute multiple requests with the same instance. After closing the session you will not be able to start new query with the actual instance of the class unless you reinitialize it.</p>"},"meta":{"revision":0,"created":1620176732143,"version":0},"$loki":34},{"id":"reinitialize-curl-session","title":"Reinitialize CURL session","level":2,"parent":"igdb","body":{"stripped":"IGDB::curl_reinit() : void\\n\\nAfter you closed the CURL session manually with IGDB::curl_close() than you will not be able to run any query against IGDB with the current instance of the class. However, if you need to run a query again, just call this method, and the CURL handler will be reinitialized.","markdown":"`IGDB::curl_reinit() : void`\\n\\nAfter you closed the CURL session manually with [`IGDB::curl_close()`](#close-curl-session) than you will not be able to run any query against IGDB with the current instance of the class. However, if you need to run a query again, just call this method, and the CURL handler will be reinitialized.","html":"<p><code>IGDB::curl_reinit() : void</code></p>\\n<p>After you closed the CURL session manually with <a href=\\"#close-curl-session\\"><code>IGDB::curl_close()</code></a> than you will not be able to run any query against IGDB with the current instance of the class. However, if you need to run a query again, just call this method, and the CURL handler will be reinitialized.</p>"},"meta":{"revision":0,"created":1620176732146,"version":0},"$loki":35},{"id":"private-methods","title":"Private Methods","level":1,"parent":"igdb","body":{"stripped":"","markdown":"","html":""},"meta":{"revision":0,"created":1620176732146,"version":0},"$loki":36},{"id":"initialize-curl-session","title":"Initialize CURL Session","level":2,"parent":"igdb","body":{"stripped":"IGDB::\\\\_curl_init() : void\\n\\nThis method creates the CURL session and sets a few additional configuration to it.","markdown":"`IGDB::_curl_init() : void`\\n\\nThis method creates the CURL session and sets a few additional configuration to it.","html":"<p><code>IGDB::_curl_init() : void</code></p>\\n<p>This method creates the CURL session and sets a few additional configuration to it.</p>"},"meta":{"revision":0,"created":1620176732149,"version":0},"$loki":37},{"id":"executing-query","title":"Executing Query","level":2,"parent":"igdb","body":{"stripped":"IGDB::\\\\_exec_query ( string $endpoint, string $query ) : array\\n\\nThis method will start the query against IGDB. Returns the decoded JSON response from IGDB as an array of objects.\\n\\nParameters\\n\\n$endpoint: url of the endpoint to execute the query against\\n\\n$query: the query to send. It has to be an apicalypse query string\\n\\nReturns the response from the IGDB database as an array of objects.","markdown":"`IGDB::_exec_query ( string $endpoint, string $query ) : array`\\n\\nThis method will start the query against IGDB. Returns the decoded JSON response from IGDB as an array of objects.\\n\\n**Parameters**\\n - `$endpoint`: url of the endpoint to execute the query against\\n - `$query`: the query to send. It has to be an apicalypse query string\\n\\nReturns the response from the IGDB database as an array of objects.","html":"<p><code>IGDB::_exec_query ( string $endpoint, string $query ) : array</code></p>\\n<p>This method will start the query against IGDB. Returns the decoded JSON response from IGDB as an array of objects.</p>\\n<p><strong>Parameters</strong></p>\\n<ul>\\n<li><code>$endpoint</code>: url of the endpoint to execute the query against</li>\\n<li><code>$query</code>: the query to send. It has to be an apicalypse query string</li>\\n</ul>\\n<p>Returns the response from the IGDB database as an array of objects.</p>"},"meta":{"revision":0,"created":1620176732152,"version":0},"$loki":38},{"id":"constructing-url-s","title":"Constructing URL\'s","level":2,"parent":"igdb","body":{"stripped":"IGDB::\\\\_construct_url( string $endpoint, boolean $count = false) : string\\n\\nThe method will construct the full URL for the request and will return the constructed URL as a string.\\n\\nParameters\\n\\n$endpoint: the endpoint to use\\n\\n$count: whether the request should return the number of matches instead of the actual resultset\\n\\nReturns the full constructed URL to the IGDB Endpoint as a string.","markdown":"`IGDB::_construct_url( string $endpoint, boolean $count = false) : string`\\n\\nThe method will construct the full URL for the request and will return the constructed URL as a string.\\n\\n**Parameters**\\n - `$endpoint`: the endpoint to use\\n - `$count`: whether the request should return the number of matches instead of the actual resultset\\n\\nReturns the full constructed URL to the IGDB Endpoint as a string.","html":"<p><code>IGDB::_construct_url( string $endpoint, boolean $count = false) : string</code></p>\\n<p>The method will construct the full URL for the request and will return the constructed URL as a string.</p>\\n<p><strong>Parameters</strong></p>\\n<ul>\\n<li><code>$endpoint</code>: the endpoint to use</li>\\n<li><code>$count</code>: whether the request should return the number of matches instead of the actual resultset</li>\\n</ul>\\n<p>Returns the full constructed URL to the IGDB Endpoint as a string.</p>"},"meta":{"revision":0,"created":1620176732155,"version":0},"$loki":39},{"id":"endpoints","title":"Endpoints","level":1,"parent":"igdb","body":{"stripped":"Every endpoint method takes two parameters:\\n\\n$query: this will set the required details of the query\\n\\n$count: this will tell whether to return the records or the count of the records\\n\\nFor more details on the query parameters check the Query Parameters Section\\n\\nThese methods are returning an array with objects decoded from IGDB response JSON by default. If you provide boolean true as a second parameter, it will execute a count query against the selected endpoint which will return an object with a count property holding the sum of the found items. The count queries can be filtered with the $query filters.\\n\\nExceptions are thrown in any case of error.\\n\\nRefer to the Return Values Section for more details about the return values of these methods.","markdown":"Every endpoint method takes two parameters:\\n - `$query`: this will set the required details of the query\\n - `$count`: this will tell whether to return the records or the count of the records\\n\\n> For more details on the query parameters check the [Query Parameters Section](#query-parameters)\\n\\nThese methods are returning an array with objects decoded from IGDB response JSON by default. If you provide boolean `true` as a second parameter, it will execute a count query against the selected endpoint which will return an object with a `count` property holding the sum of the found items. The count queries can be filtered with the `$query` filters.\\n\\nExceptions are thrown in any case of error.\\n\\nRefer to the [Return Values](#return-values) Section for more details about the return values of these methods.","html":"<p>Every endpoint method takes two parameters:</p>\\n<ul>\\n<li><code>$query</code>: this will set the required details of the query</li>\\n<li><code>$count</code>: this will tell whether to return the records or the count of the records</li>\\n</ul>\\n<blockquote>\\n<p>For more details on the query parameters check the <a href=\\"#query-parameters\\">Query Parameters Section</a></p>\\n</blockquote>\\n<p>These methods are returning an array with objects decoded from IGDB response JSON by default. If you provide boolean <code>true</code> as a second parameter, it will execute a count query against the selected endpoint which will return an object with a <code>count</code> property holding the sum of the found items. The count queries can be filtered with the <code>$query</code> filters.</p>\\n<p>Exceptions are thrown in any case of error.</p>\\n<p>Refer to the <a href=\\"#return-values\\">Return Values</a> Section for more details about the return values of these methods.</p>"},"meta":{"revision":0,"created":1620176732159,"version":0},"$loki":40},{"id":"age-rating-content-description","title":"Age Rating Content Description","level":2,"parent":"igdb","body":{"stripped":"IGDB::age_rating_content_description(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Age Rating Content Description Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nThe organisation behind a specific rating\\n\\nFields:\\n\\nField | Type | Description\\n\\\\-------|------|-------------\\ncategory | Category Enum |\\nchecksum | uuid | Hash of the object\\ndescription | String |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::age_rating_content_description(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Age Rating Content Description Endpoint](https://api-docs.igdb.com/#age-rating-content-description). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nThe organisation behind a specific rating\\n\\nFields:\\n\\n Field | Type | Description\\n-------|------|-------------\\n category | Category Enum |\\n checksum | uuid | Hash of the object\\n description | String |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::age_rating_content_description(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#age-rating-content-description\\" target=\\"_blank\\" rel=\\"nofollow\\">Age Rating Content Description Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>The organisation behind a specific rating</p>\\n<p>Fields:</p>\\n<p>Field | Type | Description\\n-------|------|-------------\\ncategory | Category Enum |\\nchecksum | uuid | Hash of the object\\ndescription | String |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732164,"version":0},"$loki":41},{"id":"age-rating","title":"Age Rating","level":2,"parent":"igdb","body":{"stripped":"IGDB::age_rating(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Age Rating Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nAge Rating according to various rating organisations\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The organization that has issued a specific rating |\\n| checksum | uuid | Hash of the object |\\n| content_descriptions | Reference ID for  Age Rating Content Description |  |\\n| rating | Rating Enum | The title of an age rating |\\n| rating_cover_url | String | The url for  the image of a age rating |\\n| synopsis | String | A free text motivating a rating |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::age_rating(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Age Rating Endpoint](https://api-docs.igdb.com/#age-rating). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nAge Rating according to various rating organisations\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The organization that has issued a specific rating |\\n| checksum | uuid | Hash of the object |\\n| content_descriptions | Reference ID for  Age Rating Content Description |  |\\n| rating | Rating Enum | The title of an age rating |\\n| rating_cover_url | String | The url for  the image of a age rating |\\n| synopsis | String | A free text motivating a rating |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::age_rating(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#age-rating\\" target=\\"_blank\\" rel=\\"nofollow\\">Age Rating Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>Age Rating according to various rating organisations</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The organization that has issued a specific rating |\\n| checksum | uuid | Hash of the object |\\n| content_descriptions | Reference ID for  Age Rating Content Description |  |\\n| rating | Rating Enum | The title of an age rating |\\n| rating_cover_url | String | The url for  the image of a age rating |\\n| synopsis | String | A free text motivating a rating |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732171,"version":0},"$loki":42},{"id":"alternative-name","title":"Alternative Name","level":2,"parent":"igdb","body":{"stripped":"IGDB::alternative_name(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Alternative Name Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nAlternative and international game titles\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| comment | String | A description of what kind of alternative name it is (Acronym, Working title, Japanese title etc) |\\n| game | Reference ID for Game | The game this alternative name is associated with |\\n| name | String | An alternative name |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::alternative_name(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Alternative Name Endpoint](https://api-docs.igdb.com/#alternative-name). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nAlternative and international game titles\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| comment | String | A description of what kind of alternative name it is (Acronym, Working title, Japanese title etc) |\\n| game | Reference ID for Game | The game this alternative name is associated with |\\n| name | String | An alternative name |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::alternative_name(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#alternative-name\\" target=\\"_blank\\" rel=\\"nofollow\\">Alternative Name Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>Alternative and international game titles</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| comment | String | A description of what kind of alternative name it is (Acronym, Working title, Japanese title etc) |\\n| game | Reference ID for Game | The game this alternative name is associated with |\\n| name | String | An alternative name |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732175,"version":0},"$loki":43},{"id":"artwork","title":"Artwork","level":2,"parent":"igdb","body":{"stripped":"IGDB::artwork(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Artwork Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nofficial artworks (resolution and aspect ratio may vary)\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| alpha_channel | boolean |  |\\n| animated | boolean |  |\\n| checksum | uuid | Hash of the object |\\n| game | Reference ID for Game | The game this artwork is associated with |\\n| height | Integer | The height of the image in pixels |\\n| image_id | String | The ID of the image used to construct an IGDB image link |\\n| url | String | The website address (URL) of the item |\\n| width | Integer | The width of the image in pixels |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::artwork(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Artwork Endpoint](https://api-docs.igdb.com/#artwork). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nofficial artworks (resolution and aspect ratio may vary)\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| alpha_channel | boolean |  |\\n| animated | boolean |  |\\n| checksum | uuid | Hash of the object |\\n| game | Reference ID for Game | The game this artwork is associated with |\\n| height | Integer | The height of the image in pixels |\\n| image_id | String | The ID of the image used to construct an IGDB image link |\\n| url | String | The website address (URL) of the item |\\n| width | Integer | The width of the image in pixels |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::artwork(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#artwork\\" target=\\"_blank\\" rel=\\"nofollow\\">Artwork Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>official artworks (resolution and aspect ratio may vary)</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| alpha_channel | boolean |  |\\n| animated | boolean |  |\\n| checksum | uuid | Hash of the object |\\n| game | Reference ID for Game | The game this artwork is associated with |\\n| height | Integer | The height of the image in pixels |\\n| image_id | String | The ID of the image used to construct an IGDB image link |\\n| url | String | The website address (URL) of the item |\\n| width | Integer | The width of the image in pixels |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732180,"version":0},"$loki":44},{"id":"character-mug-shot","title":"Character Mug Shot","level":2,"parent":"igdb","body":{"stripped":"IGDB::character_mug_shot(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Character Mug Shot Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nImages depicting game characters\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| alpha_channel | boolean |  |\\n| animated | boolean |  |\\n| checksum | uuid | Hash of the object |\\n| height | Integer | The height of the image in pixels |\\n| image_id | String | The ID of the image used to construct an IGDB image link |\\n| url | String | The website address (URL) of the item |\\n| width | Integer | The width of the image in pixels |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::character_mug_shot(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Character Mug Shot Endpoint](https://api-docs.igdb.com/#character-mug-shot). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nImages depicting game characters\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| alpha_channel | boolean |  |\\n| animated | boolean |  |\\n| checksum | uuid | Hash of the object |\\n| height | Integer | The height of the image in pixels |\\n| image_id | String | The ID of the image used to construct an IGDB image link |\\n| url | String | The website address (URL) of the item |\\n| width | Integer | The width of the image in pixels |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::character_mug_shot(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#character-mug-shot\\" target=\\"_blank\\" rel=\\"nofollow\\">Character Mug Shot Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>Images depicting game characters</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| alpha_channel | boolean |  |\\n| animated | boolean |  |\\n| checksum | uuid | Hash of the object |\\n| height | Integer | The height of the image in pixels |\\n| image_id | String | The ID of the image used to construct an IGDB image link |\\n| url | String | The website address (URL) of the item |\\n| width | Integer | The width of the image in pixels |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732193,"version":0},"$loki":45},{"id":"character","title":"Character","level":2,"parent":"igdb","body":{"stripped":"IGDB::character(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Character Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nVideo game characters\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| akas | Array of Strings | Alternative names for a character |\\n| checksum | uuid | Hash of the object |\\n| country_name | String | A characters country of origin |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| description | String | A text describing a character |\\n| games | Array of Game IDs |  |\\n| gender | Gender Enum |  |\\n| mug_shot | Reference ID for  Character Mug Shot | An image depicting a character |\\n| name | String |  |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| species | Species Enum |  |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::character(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Character Endpoint](https://api-docs.igdb.com/#character). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nVideo game characters\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| akas | Array of Strings | Alternative names for a character |\\n| checksum | uuid | Hash of the object |\\n| country_name | String | A characters country of origin |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| description | String | A text describing a character |\\n| games | Array of Game IDs |  |\\n| gender | Gender Enum |  |\\n| mug_shot | Reference ID for  Character Mug Shot | An image depicting a character |\\n| name | String |  |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| species | Species Enum |  |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::character(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#character\\" target=\\"_blank\\" rel=\\"nofollow\\">Character Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>Video game characters</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| akas | Array of Strings | Alternative names for a character |\\n| checksum | uuid | Hash of the object |\\n| country_name | String | A characters country of origin |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| description | String | A text describing a character |\\n| games | Array of Game IDs |  |\\n| gender | Gender Enum |  |\\n| mug_shot | Reference ID for  Character Mug Shot | An image depicting a character |\\n| name | String |  |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| species | Species Enum |  |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732200,"version":0},"$loki":46},{"id":"collection","title":"Collection","level":2,"parent":"igdb","body":{"stripped":"IGDB::collection(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Collection Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nCollection, AKA Series\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| games | Array of Game IDs | The games that are associated with this collection |\\n| name | String | Umbrella term for a collection of games |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::collection(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Collection Endpoint](https://api-docs.igdb.com/#collection). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nCollection, AKA Series\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| games | Array of Game IDs | The games that are associated with this collection |\\n| name | String | Umbrella term for a collection of games |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::collection(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#collection\\" target=\\"_blank\\" rel=\\"nofollow\\">Collection Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>Collection, AKA Series</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| games | Array of Game IDs | The games that are associated with this collection |\\n| name | String | Umbrella term for a collection of games |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732206,"version":0},"$loki":47},{"id":"company-logo","title":"Company Logo","level":2,"parent":"igdb","body":{"stripped":"IGDB::company_logo(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Company Logo Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nThe logos of developers and publishers\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| alpha_channel | boolean |  |\\n| animated | boolean |  |\\n| checksum | uuid | Hash of the object |\\n| height | Integer | The height of the image in pixels |\\n| image_id | String | The ID of the image used to construct an IGDB image link |\\n| url | String | The website address (URL) of the item |\\n| width | Integer | The width of the image in pixels |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::company_logo(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Company Logo Endpoint](https://api-docs.igdb.com/#company-logo). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nThe logos of developers and publishers\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| alpha_channel | boolean |  |\\n| animated | boolean |  |\\n| checksum | uuid | Hash of the object |\\n| height | Integer | The height of the image in pixels |\\n| image_id | String | The ID of the image used to construct an IGDB image link |\\n| url | String | The website address (URL) of the item |\\n| width | Integer | The width of the image in pixels |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::company_logo(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#company-logo\\" target=\\"_blank\\" rel=\\"nofollow\\">Company Logo Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>The logos of developers and publishers</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| alpha_channel | boolean |  |\\n| animated | boolean |  |\\n| checksum | uuid | Hash of the object |\\n| height | Integer | The height of the image in pixels |\\n| image_id | String | The ID of the image used to construct an IGDB image link |\\n| url | String | The website address (URL) of the item |\\n| width | Integer | The width of the image in pixels |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732214,"version":0},"$loki":48},{"id":"company-website","title":"Company Website","level":2,"parent":"igdb","body":{"stripped":"IGDB::company_website(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Company Website Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nCompany Website\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The service this website links to |\\n| checksum | uuid | Hash of the object |\\n| trusted | boolean |  |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::company_website(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Company Website Endpoint](https://api-docs.igdb.com/#company-website). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nCompany Website\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The service this website links to |\\n| checksum | uuid | Hash of the object |\\n| trusted | boolean |  |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::company_website(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#company-website\\" target=\\"_blank\\" rel=\\"nofollow\\">Company Website Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>Company Website</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The service this website links to |\\n| checksum | uuid | Hash of the object |\\n| trusted | boolean |  |\\n| url | String | The website address (URL) of the item |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732219,"version":0},"$loki":49},{"id":"company","title":"Company","level":2,"parent":"igdb","body":{"stripped":"IGDB::company(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Company Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nVideo game companies. Both publishers & developers\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| change_date | Unix Time Stamp | The data when a company got a new ID |\\n| change_date_category | Change Date Category Enum |  |\\n| changed_company_id | Reference ID for  Company | The new ID for a company that has gone through a merger or restructuring |\\n| checksum | uuid | Hash of the object |\\n| country | Integer | ISO 3166-1 country code |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| description | String | A free text description of a company |\\n| developed | Reference ID for  Game | An array of games that a company has developed |\\n| logo | Reference ID for  Company Logo | The company\u2019s logo |\\n| name | String |  |\\n| parent | Reference ID for  Company | A company with a controlling interest in a specific company |\\n| published | Reference ID for  Game | An array of games that a company has published |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| start_date | Unix Time Stamp | The date a company was founded |\\n| start_date_category | Start Date Category Enum |  |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n| websites | Reference ID for  Company Website | The companies official websites |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::company(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Company Endpoint](https://api-docs.igdb.com/#company). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nVideo game companies. Both publishers &amp; developers\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| change_date | Unix Time Stamp | The data when a company got a new ID |\\n| change_date_category | Change Date Category Enum |  |\\n| changed_company_id | Reference ID for  Company | The new ID for a company that has gone through a merger or restructuring |\\n| checksum | uuid | Hash of the object |\\n| country | Integer | ISO 3166-1 country code |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| description | String | A free text description of a company |\\n| developed | Reference ID for  Game | An array of games that a company has developed |\\n| logo | Reference ID for  Company Logo | The company&rsquo;s logo |\\n| name | String |  |\\n| parent | Reference ID for  Company | A company with a controlling interest in a specific company |\\n| published | Reference ID for  Game | An array of games that a company has published |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| start_date | Unix Time Stamp | The date a company was founded |\\n| start_date_category | Start Date Category Enum |  |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n| websites | Reference ID for  Company Website | The companies official websites |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::company(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#company\\" target=\\"_blank\\" rel=\\"nofollow\\">Company Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>Video game companies. Both publishers &#x26; developers</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| change_date | Unix Time Stamp | The data when a company got a new ID |\\n| change_date_category | Change Date Category Enum |  |\\n| changed_company_id | Reference ID for  Company | The new ID for a company that has gone through a merger or restructuring |\\n| checksum | uuid | Hash of the object |\\n| country | Integer | ISO 3166-1 country code |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| description | String | A free text description of a company |\\n| developed | Reference ID for  Game | An array of games that a company has developed |\\n| logo | Reference ID for  Company Logo | The company\u2019s logo |\\n| name | String |  |\\n| parent | Reference ID for  Company | A company with a controlling interest in a specific company |\\n| published | Reference ID for  Game | An array of games that a company has published |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| start_date | Unix Time Stamp | The date a company was founded |\\n| start_date_category | Start Date Category Enum |  |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n| websites | Reference ID for  Company Website | The companies official websites |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732225,"version":0},"$loki":50},{"id":"cover","title":"Cover","level":2,"parent":"igdb","body":{"stripped":"IGDB::cover(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Cover Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nThe cover art of games\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| alpha_channel | boolean |  |\\n| animated | boolean |  |\\n| checksum | uuid | Hash of the object |\\n| game | Reference ID for Game | The game this cover is associated with |\\n| height | Integer | The height of the image in pixels |\\n| image_id | String | The ID of the image used to construct an IGDB image link |\\n| url | String | The website address (URL) of the item |\\n| width | Integer | The width of the image in pixels |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::cover(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Cover Endpoint](https://api-docs.igdb.com/#cover). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nThe cover art of games\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| alpha_channel | boolean |  |\\n| animated | boolean |  |\\n| checksum | uuid | Hash of the object |\\n| game | Reference ID for Game | The game this cover is associated with |\\n| height | Integer | The height of the image in pixels |\\n| image_id | String | The ID of the image used to construct an IGDB image link |\\n| url | String | The website address (URL) of the item |\\n| width | Integer | The width of the image in pixels |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::cover(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#cover\\" target=\\"_blank\\" rel=\\"nofollow\\">Cover Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>The cover art of games</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| alpha_channel | boolean |  |\\n| animated | boolean |  |\\n| checksum | uuid | Hash of the object |\\n| game | Reference ID for Game | The game this cover is associated with |\\n| height | Integer | The height of the image in pixels |\\n| image_id | String | The ID of the image used to construct an IGDB image link |\\n| url | String | The website address (URL) of the item |\\n| width | Integer | The width of the image in pixels |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732231,"version":0},"$loki":51},{"id":"external-game","title":"External Game","level":2,"parent":"igdb","body":{"stripped":"IGDB::external_game(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using External Game Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nGame IDs on other services\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The id of the other service |\\n| checksum | uuid | Hash of the object |\\n| countries | Array of Integers | The ISO country code of the external game product. |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| game | Reference ID for Game | The IGDB ID of the game |\\n| media | Media Enum | The media of the external game. |\\n| name | String | The name of the game according to the other service |\\n| platform | Reference ID for Platform | The platform of the external game product. |\\n| uid | String | The other services ID for this game |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n| year | Integer | The year in full (2018) |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::external_game(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [External Game Endpoint](https://api-docs.igdb.com/#external-game). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nGame IDs on other services\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The id of the other service |\\n| checksum | uuid | Hash of the object |\\n| countries | Array of Integers | The ISO country code of the external game product. |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| game | Reference ID for Game | The IGDB ID of the game |\\n| media | Media Enum | The media of the external game. |\\n| name | String | The name of the game according to the other service |\\n| platform | Reference ID for Platform | The platform of the external game product. |\\n| uid | String | The other services ID for this game |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n| year | Integer | The year in full (2018) |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::external_game(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#external-game\\" target=\\"_blank\\" rel=\\"nofollow\\">External Game Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>Game IDs on other services</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The id of the other service |\\n| checksum | uuid | Hash of the object |\\n| countries | Array of Integers | The ISO country code of the external game product. |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| game | Reference ID for Game | The IGDB ID of the game |\\n| media | Media Enum | The media of the external game. |\\n| name | String | The name of the game according to the other service |\\n| platform | Reference ID for Platform | The platform of the external game product. |\\n| uid | String | The other services ID for this game |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n| year | Integer | The year in full (2018) |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732237,"version":0},"$loki":52},{"id":"franchise","title":"Franchise","level":2,"parent":"igdb","body":{"stripped":"IGDB::franchise(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Franchise Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nA list of video game franchises such as Star Wars.\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| games | Array of Game IDs | The games that are associated with this franchise |\\n| name | String | The name of the franchise |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::franchise(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Franchise Endpoint](https://api-docs.igdb.com/#franchise). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nA list of video game franchises such as Star Wars.\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| games | Array of Game IDs | The games that are associated with this franchise |\\n| name | String | The name of the franchise |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::franchise(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#franchise\\" target=\\"_blank\\" rel=\\"nofollow\\">Franchise Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>A list of video game franchises such as Star Wars.</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| games | Array of Game IDs | The games that are associated with this franchise |\\n| name | String | The name of the franchise |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732242,"version":0},"$loki":53},{"id":"game-engine-logo","title":"Game Engine Logo","level":2,"parent":"igdb","body":{"stripped":"IGDB::game_engine_logo(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Game Engine Logo Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nThe logos of game engines\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| alpha_channel | boolean |  |\\n| animated | boolean |  |\\n| checksum | uuid | Hash of the object |\\n| height | Integer | The height of the image in pixels |\\n| image_id | String | The ID of the image used to construct an IGDB image link |\\n| url | String | The website address (URL) of the item |\\n| width | Integer | The width of the image in pixels |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::game_engine_logo(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Game Engine Logo Endpoint](https://api-docs.igdb.com/#game-engine-logo). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nThe logos of game engines\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| alpha_channel | boolean |  |\\n| animated | boolean |  |\\n| checksum | uuid | Hash of the object |\\n| height | Integer | The height of the image in pixels |\\n| image_id | String | The ID of the image used to construct an IGDB image link |\\n| url | String | The website address (URL) of the item |\\n| width | Integer | The width of the image in pixels |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::game_engine_logo(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#game-engine-logo\\" target=\\"_blank\\" rel=\\"nofollow\\">Game Engine Logo Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>The logos of game engines</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| alpha_channel | boolean |  |\\n| animated | boolean |  |\\n| checksum | uuid | Hash of the object |\\n| height | Integer | The height of the image in pixels |\\n| image_id | String | The ID of the image used to construct an IGDB image link |\\n| url | String | The website address (URL) of the item |\\n| width | Integer | The width of the image in pixels |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732251,"version":0},"$loki":54},{"id":"game-engine","title":"Game Engine","level":2,"parent":"igdb","body":{"stripped":"IGDB::game_engine(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Game Engine Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nVideo game engines such as unreal engine.\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| companies | Array of Company IDs | Companies who used this game engine |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| description | String | Description of the game engine |\\n| logo | Reference ID for  Game Engine Logo | Logo of the game engine |\\n| name | String | Name of the game engine |\\n| platforms | Array of Platform IDs | Platforms this game engine was deployed on |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::game_engine(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Game Engine Endpoint](https://api-docs.igdb.com/#game-engine). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nVideo game engines such as unreal engine.\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| companies | Array of Company IDs | Companies who used this game engine |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| description | String | Description of the game engine |\\n| logo | Reference ID for  Game Engine Logo | Logo of the game engine |\\n| name | String | Name of the game engine |\\n| platforms | Array of Platform IDs | Platforms this game engine was deployed on |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::game_engine(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#game-engine\\" target=\\"_blank\\" rel=\\"nofollow\\">Game Engine Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>Video game engines such as unreal engine.</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| companies | Array of Company IDs | Companies who used this game engine |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| description | String | Description of the game engine |\\n| logo | Reference ID for  Game Engine Logo | Logo of the game engine |\\n| name | String | Name of the game engine |\\n| platforms | Array of Platform IDs | Platforms this game engine was deployed on |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732255,"version":0},"$loki":55},{"id":"game-mode","title":"Game Mode","level":2,"parent":"igdb","body":{"stripped":"IGDB::game_mode(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Game Mode Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nSingle player, Multiplayer etc\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| name | String | The name of the game mode |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::game_mode(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Game Mode Endpoint](https://api-docs.igdb.com/#game-mode). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nSingle player, Multiplayer etc\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| name | String | The name of the game mode |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::game_mode(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#game-mode\\" target=\\"_blank\\" rel=\\"nofollow\\">Game Mode Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>Single player, Multiplayer etc</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| name | String | The name of the game mode |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732264,"version":0},"$loki":56},{"id":"game-version-feature-value","title":"Game Version Feature Value","level":2,"parent":"igdb","body":{"stripped":"IGDB::game_version_feature_value(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Game Version Feature Value Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nThe bool/text value of the feature\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| game | Reference ID for Game | The version/edition this value refers to |\\n| game_feature | Reference ID for  Game Version Feature | The id of the game feature |\\n| included_feature | Included Feature Enum | The boole value of this feature |\\n| note | String | The text value of this feature |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::game_version_feature_value(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Game Version Feature Value Endpoint](https://api-docs.igdb.com/#game-version-feature-value). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nThe bool/text value of the feature\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| game | Reference ID for Game | The version/edition this value refers to |\\n| game_feature | Reference ID for  Game Version Feature | The id of the game feature |\\n| included_feature | Included Feature Enum | The boole value of this feature |\\n| note | String | The text value of this feature |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::game_version_feature_value(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#game-version-feature-value\\" target=\\"_blank\\" rel=\\"nofollow\\">Game Version Feature Value Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>The bool/text value of the feature</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| game | Reference ID for Game | The version/edition this value refers to |\\n| game_feature | Reference ID for  Game Version Feature | The id of the game feature |\\n| included_feature | Included Feature Enum | The boole value of this feature |\\n| note | String | The text value of this feature |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732268,"version":0},"$loki":57},{"id":"game-version-feature","title":"Game Version Feature","level":2,"parent":"igdb","body":{"stripped":"IGDB::game_version_feature(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Game Version Feature Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nFeatures and descriptions of what makes each version/edition different from the main game\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The category of the feature description |\\n| checksum | uuid | Hash of the object |\\n| description | String | The description of the feature |\\n| position | Integer | Position of this feature in the list of features |\\n| title | String | The title of the feature |\\n| values | Reference ID for  Game Version Feature Value | The bool/text value of the feature |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::game_version_feature(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Game Version Feature Endpoint](https://api-docs.igdb.com/#game-version-feature). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nFeatures and descriptions of what makes each version/edition different from the main game\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The category of the feature description |\\n| checksum | uuid | Hash of the object |\\n| description | String | The description of the feature |\\n| position | Integer | Position of this feature in the list of features |\\n| title | String | The title of the feature |\\n| values | Reference ID for  Game Version Feature Value | The bool/text value of the feature |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::game_version_feature(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#game-version-feature\\" target=\\"_blank\\" rel=\\"nofollow\\">Game Version Feature Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>Features and descriptions of what makes each version/edition different from the main game</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The category of the feature description |\\n| checksum | uuid | Hash of the object |\\n| description | String | The description of the feature |\\n| position | Integer | Position of this feature in the list of features |\\n| title | String | The title of the feature |\\n| values | Reference ID for  Game Version Feature Value | The bool/text value of the feature |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732272,"version":0},"$loki":58},{"id":"game-version","title":"Game Version","level":2,"parent":"igdb","body":{"stripped":"IGDB::game_version(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Game Version Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nDetails about game editions and versions.\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| features | Reference ID for  Game Version Feature | Features and descriptions of what makes each version/edition different from the main game |\\n| game | Reference ID for Game | The game these versions/editions are of |\\n| games | Array of Game IDs | Game Versions and Editions |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::game_version(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Game Version Endpoint](https://api-docs.igdb.com/#game-version). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nDetails about game editions and versions.\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| features | Reference ID for  Game Version Feature | Features and descriptions of what makes each version/edition different from the main game |\\n| game | Reference ID for Game | The game these versions/editions are of |\\n| games | Array of Game IDs | Game Versions and Editions |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::game_version(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#game-version\\" target=\\"_blank\\" rel=\\"nofollow\\">Game Version Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>Details about game editions and versions.</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| features | Reference ID for  Game Version Feature | Features and descriptions of what makes each version/edition different from the main game |\\n| game | Reference ID for Game | The game these versions/editions are of |\\n| games | Array of Game IDs | Game Versions and Editions |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732280,"version":0},"$loki":59},{"id":"game-video","title":"Game Video","level":2,"parent":"igdb","body":{"stripped":"IGDB::game_video(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Game Video Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nA video associated with a game\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| game | Reference ID for Game | The game this video is associated with |\\n| name | String | The name of the video |\\n| video_id | String | The external ID of the video (usually youtube) |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::game_video(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Game Video Endpoint](https://api-docs.igdb.com/#game-video). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nA video associated with a game\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| game | Reference ID for Game | The game this video is associated with |\\n| name | String | The name of the video |\\n| video_id | String | The external ID of the video (usually youtube) |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::game_video(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#game-video\\" target=\\"_blank\\" rel=\\"nofollow\\">Game Video Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>A video associated with a game</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| game | Reference ID for Game | The game this video is associated with |\\n| name | String | The name of the video |\\n| video_id | String | The external ID of the video (usually youtube) |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732284,"version":0},"$loki":60},{"id":"game","title":"Game","level":2,"parent":"igdb","body":{"stripped":"IGDB::game(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Game Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nVideo Games!\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| age_ratings | Reference ID for  Age Rating | The PEGI rating |\\n| aggregated_rating | Double | Rating based on external critic scores |\\n| aggregated_rating_count | Integer | Number of external critic scores |\\n| alternative_names | Array of Alternative Name IDs | Alternative names for this game |\\n| artworks | Array of Artwork IDs | Artworks of this game |\\n| bundles | Reference ID for  Game | The bundles this game is a part of |\\n| category | Category Enum | The category of this game |\\n| checksum | uuid | Hash of the object |\\n| collection | Reference ID for Collection | The series the game belongs to |\\n| cover | Reference ID for Cover | The cover of this game |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| dlcs | Reference ID for  Game | DLCs for this game |\\n| expansions | Reference ID for  Game | Expansions of this game |\\n| external_games | Array of External Game IDs | External IDs this game has on other services |\\n| first_release_date | Unix Time Stamp | The first release date for this game |\\n| follows | Integer | Number of people following a game |\\n| franchise | Reference ID for Franchise | The main franchise |\\n| franchises | Array of Franchise IDs | Other franchises the game belongs to |\\n| game_engines | Array of Game Engine IDs | The game engine used in this game |\\n| game_modes | Array of Game Mode IDs | Modes of gameplay |\\n| genres | Array of Genre IDs | Genres of the game |\\n| hypes | Integer | Number of follows a game gets before release |\\n| involved_companies | Array of Involved Company IDs | Companies who developed this game |\\n| keywords | Array of Keyword IDs | Associated keywords |\\n| multiplayer_modes | Array of Multiplayer Mode IDs | Multiplayer modes for this game |\\n| name | String |  |\\n| parent_game | Reference ID for  Game | If a DLC, expansion or part of a bundle, this is the main game or bundle |\\n| platforms | Array of Platform IDs | Platforms this game was released on |\\n| player_perspectives | Array of Player Perspective IDs | The main perspective of the player |\\n| rating | Double | Average IGDB user rating |\\n| rating_count | Integer | Total number of IGDB user ratings |\\n| release_dates | Array of Release Date IDs | Release dates of this game |\\n| screenshots | Array of Screenshot IDs | Screenshots of this game |\\n| similar_games | Reference ID for  Game | Similar games |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| standalone_expansions | Reference ID for  Game | Standalone expansions of this game |\\n| status | Status Enum | The status of the games release |\\n| storyline | String | A short description of a games story |\\n| summary | String | A description of the game |\\n| tags | Array of Tag Numbers | Related entities in the IGDB API |\\n| themes | Array of Theme IDs | Themes of the game |\\n| total_rating | Double | Average rating based on both IGDB user and external critic scores |\\n| total_rating_count | Integer | Total number of user and external critic scores |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n| version_parent | Reference ID for  Game | If a version, this is the main game |\\n| version_title | String | Title of this version (i.e Gold edition) |\\n| videos | Reference ID for  Game Video | Videos of this game |\\n| websites | Reference ID for  Website | Websites associated with this game |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::game(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Game Endpoint](https://api-docs.igdb.com/#game). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nVideo Games!\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| age_ratings | Reference ID for  Age Rating | The PEGI rating |\\n| aggregated_rating | Double | Rating based on external critic scores |\\n| aggregated_rating_count | Integer | Number of external critic scores |\\n| alternative_names | Array of Alternative Name IDs | Alternative names for this game |\\n| artworks | Array of Artwork IDs | Artworks of this game |\\n| bundles | Reference ID for  Game | The bundles this game is a part of |\\n| category | Category Enum | The category of this game |\\n| checksum | uuid | Hash of the object |\\n| collection | Reference ID for Collection | The series the game belongs to |\\n| cover | Reference ID for Cover | The cover of this game |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| dlcs | Reference ID for  Game | DLCs for this game |\\n| expansions | Reference ID for  Game | Expansions of this game |\\n| external_games | Array of External Game IDs | External IDs this game has on other services |\\n| first_release_date | Unix Time Stamp | The first release date for this game |\\n| follows | Integer | Number of people following a game |\\n| franchise | Reference ID for Franchise | The main franchise |\\n| franchises | Array of Franchise IDs | Other franchises the game belongs to |\\n| game_engines | Array of Game Engine IDs | The game engine used in this game |\\n| game_modes | Array of Game Mode IDs | Modes of gameplay |\\n| genres | Array of Genre IDs | Genres of the game |\\n| hypes | Integer | Number of follows a game gets before release |\\n| involved_companies | Array of Involved Company IDs | Companies who developed this game |\\n| keywords | Array of Keyword IDs | Associated keywords |\\n| multiplayer_modes | Array of Multiplayer Mode IDs | Multiplayer modes for this game |\\n| name | String |  |\\n| parent_game | Reference ID for  Game | If a DLC, expansion or part of a bundle, this is the main game or bundle |\\n| platforms | Array of Platform IDs | Platforms this game was released on |\\n| player_perspectives | Array of Player Perspective IDs | The main perspective of the player |\\n| rating | Double | Average IGDB user rating |\\n| rating_count | Integer | Total number of IGDB user ratings |\\n| release_dates | Array of Release Date IDs | Release dates of this game |\\n| screenshots | Array of Screenshot IDs | Screenshots of this game |\\n| similar_games | Reference ID for  Game | Similar games |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| standalone_expansions | Reference ID for  Game | Standalone expansions of this game |\\n| status | Status Enum | The status of the games release |\\n| storyline | String | A short description of a games story |\\n| summary | String | A description of the game |\\n| tags | Array of Tag Numbers | Related entities in the IGDB API |\\n| themes | Array of Theme IDs | Themes of the game |\\n| total_rating | Double | Average rating based on both IGDB user and external critic scores |\\n| total_rating_count | Integer | Total number of user and external critic scores |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n| version_parent | Reference ID for  Game | If a version, this is the main game |\\n| version_title | String | Title of this version (i.e Gold edition) |\\n| videos | Reference ID for  Game Video | Videos of this game |\\n| websites | Reference ID for  Website | Websites associated with this game |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::game(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#game\\" target=\\"_blank\\" rel=\\"nofollow\\">Game Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>Video Games!</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| age_ratings | Reference ID for  Age Rating | The PEGI rating |\\n| aggregated_rating | Double | Rating based on external critic scores |\\n| aggregated_rating_count | Integer | Number of external critic scores |\\n| alternative_names | Array of Alternative Name IDs | Alternative names for this game |\\n| artworks | Array of Artwork IDs | Artworks of this game |\\n| bundles | Reference ID for  Game | The bundles this game is a part of |\\n| category | Category Enum | The category of this game |\\n| checksum | uuid | Hash of the object |\\n| collection | Reference ID for Collection | The series the game belongs to |\\n| cover | Reference ID for Cover | The cover of this game |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| dlcs | Reference ID for  Game | DLCs for this game |\\n| expansions | Reference ID for  Game | Expansions of this game |\\n| external_games | Array of External Game IDs | External IDs this game has on other services |\\n| first_release_date | Unix Time Stamp | The first release date for this game |\\n| follows | Integer | Number of people following a game |\\n| franchise | Reference ID for Franchise | The main franchise |\\n| franchises | Array of Franchise IDs | Other franchises the game belongs to |\\n| game_engines | Array of Game Engine IDs | The game engine used in this game |\\n| game_modes | Array of Game Mode IDs | Modes of gameplay |\\n| genres | Array of Genre IDs | Genres of the game |\\n| hypes | Integer | Number of follows a game gets before release |\\n| involved_companies | Array of Involved Company IDs | Companies who developed this game |\\n| keywords | Array of Keyword IDs | Associated keywords |\\n| multiplayer_modes | Array of Multiplayer Mode IDs | Multiplayer modes for this game |\\n| name | String |  |\\n| parent_game | Reference ID for  Game | If a DLC, expansion or part of a bundle, this is the main game or bundle |\\n| platforms | Array of Platform IDs | Platforms this game was released on |\\n| player_perspectives | Array of Player Perspective IDs | The main perspective of the player |\\n| rating | Double | Average IGDB user rating |\\n| rating_count | Integer | Total number of IGDB user ratings |\\n| release_dates | Array of Release Date IDs | Release dates of this game |\\n| screenshots | Array of Screenshot IDs | Screenshots of this game |\\n| similar_games | Reference ID for  Game | Similar games |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| standalone_expansions | Reference ID for  Game | Standalone expansions of this game |\\n| status | Status Enum | The status of the games release |\\n| storyline | String | A short description of a games story |\\n| summary | String | A description of the game |\\n| tags | Array of Tag Numbers | Related entities in the IGDB API |\\n| themes | Array of Theme IDs | Themes of the game |\\n| total_rating | Double | Average rating based on both IGDB user and external critic scores |\\n| total_rating_count | Integer | Total number of user and external critic scores |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n| version_parent | Reference ID for  Game | If a version, this is the main game |\\n| version_title | String | Title of this version (i.e Gold edition) |\\n| videos | Reference ID for  Game Video | Videos of this game |\\n| websites | Reference ID for  Website | Websites associated with this game |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732292,"version":0},"$loki":61},{"id":"genre","title":"Genre","level":2,"parent":"igdb","body":{"stripped":"IGDB::genre(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Genre Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nGenres of video game\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| name | String |  |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::genre(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Genre Endpoint](https://api-docs.igdb.com/#genre). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nGenres of video game\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| name | String |  |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::genre(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#genre\\" target=\\"_blank\\" rel=\\"nofollow\\">Genre Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>Genres of video game</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| name | String |  |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732309,"version":0},"$loki":62},{"id":"involved-company","title":"Involved Company","level":2,"parent":"igdb","body":{"stripped":"IGDB::involved_company(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Involved Company Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nhttps://api.igdb.com/v4/involved_companies\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| company | Reference ID for Company |  |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| developer | boolean |  |\\n| game | Reference ID for Game |  |\\n| porting | boolean |  |\\n| publisher | boolean |  |\\n| supporting | boolean |  |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::involved_company(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Involved Company Endpoint](https://api-docs.igdb.com/#involved-company). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\n<code>https://api.igdb.com/v4/involved_companies</code>\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| company | Reference ID for Company |  |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| developer | boolean |  |\\n| game | Reference ID for Game |  |\\n| porting | boolean |  |\\n| publisher | boolean |  |\\n| supporting | boolean |  |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::involved_company(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#involved-company\\" target=\\"_blank\\" rel=\\"nofollow\\">Involved Company Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p><code>https://api.igdb.com/v4/involved_companies</code></p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| company | Reference ID for Company |  |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| developer | boolean |  |\\n| game | Reference ID for Game |  |\\n| porting | boolean |  |\\n| publisher | boolean |  |\\n| supporting | boolean |  |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732317,"version":0},"$loki":63},{"id":"keyword","title":"Keyword","level":2,"parent":"igdb","body":{"stripped":"IGDB::keyword(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Keyword Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nKeywords are words or phrases that get tagged to a game such as \u201cworld war 2\u201d or \u201csteampunk\u201d.\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| name | String |  |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::keyword(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Keyword Endpoint](https://api-docs.igdb.com/#keyword). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nKeywords are words or phrases that get tagged to a game such as \u201cworld war 2\u201d or \u201csteampunk\u201d.\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| name | String |  |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::keyword(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#keyword\\" target=\\"_blank\\" rel=\\"nofollow\\">Keyword Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>Keywords are words or phrases that get tagged to a game such as \u201cworld war 2\u201d or \u201csteampunk\u201d.</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| name | String |  |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732321,"version":0},"$loki":64},{"id":"multiplayer-mode","title":"Multiplayer Mode","level":2,"parent":"igdb","body":{"stripped":"IGDB::multiplayer_mode(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Multiplayer Mode Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nData about the supported multiplayer types\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| campaigncoop | boolean | True if the game supports campaign coop |\\n| checksum | uuid | Hash of the object |\\n| dropin | boolean | True if the game supports drop in/out multiplayer |\\n| game | Reference ID for Game | The game this multiplayer mode is associated with |\\n| lancoop | boolean | True if the game supports LAN coop |\\n| offlinecoop | boolean | True if the game supports offline coop |\\n| offlinecoopmax | Integer | Maximum number of offline players in offline coop |\\n| offlinemax | Integer | Maximum number of players in offline multiplayer |\\n| onlinecoop | boolean | True if the game supports online coop |\\n| onlinecoopmax | Integer | Maximum number of online players in online coop |\\n| onlinemax | Integer | Maximum number of players in online multiplayer |\\n| platform | Reference ID for Platform | The platform this multiplayer mode refers to |\\n| splitscreen | boolean | True if the game supports split screen, offline multiplayer |\\n| splitscreenonline | boolean | True if the game supports split screen, online multiplayer |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::multiplayer_mode(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Multiplayer Mode Endpoint](https://api-docs.igdb.com/#multiplayer-mode). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nData about the supported multiplayer types\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| campaigncoop | boolean | True if the game supports campaign coop |\\n| checksum | uuid | Hash of the object |\\n| dropin | boolean | True if the game supports drop in/out multiplayer |\\n| game | Reference ID for Game | The game this multiplayer mode is associated with |\\n| lancoop | boolean | True if the game supports LAN coop |\\n| offlinecoop | boolean | True if the game supports offline coop |\\n| offlinecoopmax | Integer | Maximum number of offline players in offline coop |\\n| offlinemax | Integer | Maximum number of players in offline multiplayer |\\n| onlinecoop | boolean | True if the game supports online coop |\\n| onlinecoopmax | Integer | Maximum number of online players in online coop |\\n| onlinemax | Integer | Maximum number of players in online multiplayer |\\n| platform | Reference ID for Platform | The platform this multiplayer mode refers to |\\n| splitscreen | boolean | True if the game supports split screen, offline multiplayer |\\n| splitscreenonline | boolean | True if the game supports split screen, online multiplayer |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::multiplayer_mode(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#multiplayer-mode\\" target=\\"_blank\\" rel=\\"nofollow\\">Multiplayer Mode Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>Data about the supported multiplayer types</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| campaigncoop | boolean | True if the game supports campaign coop |\\n| checksum | uuid | Hash of the object |\\n| dropin | boolean | True if the game supports drop in/out multiplayer |\\n| game | Reference ID for Game | The game this multiplayer mode is associated with |\\n| lancoop | boolean | True if the game supports LAN coop |\\n| offlinecoop | boolean | True if the game supports offline coop |\\n| offlinecoopmax | Integer | Maximum number of offline players in offline coop |\\n| offlinemax | Integer | Maximum number of players in offline multiplayer |\\n| onlinecoop | boolean | True if the game supports online coop |\\n| onlinecoopmax | Integer | Maximum number of online players in online coop |\\n| onlinemax | Integer | Maximum number of players in online multiplayer |\\n| platform | Reference ID for Platform | The platform this multiplayer mode refers to |\\n| splitscreen | boolean | True if the game supports split screen, offline multiplayer |\\n| splitscreenonline | boolean | True if the game supports split screen, online multiplayer |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732325,"version":0},"$loki":65},{"id":"platform-family","title":"Platform Family","level":2,"parent":"igdb","body":{"stripped":"IGDB::platform_family(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Platform Family Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nA collection of closely related platforms\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| name | String | The name of the platform family |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::platform_family(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Platform Family Endpoint](https://api-docs.igdb.com/#platform-family). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nA collection of closely related platforms\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| name | String | The name of the platform family |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::platform_family(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#platform-family\\" target=\\"_blank\\" rel=\\"nofollow\\">Platform Family Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>A collection of closely related platforms</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| name | String | The name of the platform family |\\n| slug | String | A url-safe, unique, lower-case version of the name |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732329,"version":0},"$loki":66},{"id":"platform-logo","title":"Platform Logo","level":2,"parent":"igdb","body":{"stripped":"IGDB::platform_logo(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Platform Logo Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nLogo for a platform\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| alpha_channel | boolean |  |\\n| animated | boolean |  |\\n| checksum | uuid | Hash of the object |\\n| height | Integer | The height of the image in pixels |\\n| image_id | String | The ID of the image used to construct an IGDB image link |\\n| url | String | The website address (URL) of the item |\\n| width | Integer | The width of the image in pixels |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::platform_logo(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Platform Logo Endpoint](https://api-docs.igdb.com/#platform-logo). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nLogo for a platform\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| alpha_channel | boolean |  |\\n| animated | boolean |  |\\n| checksum | uuid | Hash of the object |\\n| height | Integer | The height of the image in pixels |\\n| image_id | String | The ID of the image used to construct an IGDB image link |\\n| url | String | The website address (URL) of the item |\\n| width | Integer | The width of the image in pixels |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::platform_logo(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#platform-logo\\" target=\\"_blank\\" rel=\\"nofollow\\">Platform Logo Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>Logo for a platform</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| alpha_channel | boolean |  |\\n| animated | boolean |  |\\n| checksum | uuid | Hash of the object |\\n| height | Integer | The height of the image in pixels |\\n| image_id | String | The ID of the image used to construct an IGDB image link |\\n| url | String | The website address (URL) of the item |\\n| width | Integer | The width of the image in pixels |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732336,"version":0},"$loki":67},{"id":"platform-version-company","title":"Platform Version Company","level":2,"parent":"igdb","body":{"stripped":"IGDB::platform_version_company(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Platform Version Company Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nA platform developer\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| comment | String | Any notable comments about the developer |\\n| company | Reference ID for Company | The company responsible for developing this platform version |\\n| developer | boolean |  |\\n| manufacturer | boolean |  |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::platform_version_company(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Platform Version Company Endpoint](https://api-docs.igdb.com/#platform-version-company). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nA platform developer\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| comment | String | Any notable comments about the developer |\\n| company | Reference ID for Company | The company responsible for developing this platform version |\\n| developer | boolean |  |\\n| manufacturer | boolean |  |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::platform_version_company(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#platform-version-company\\" target=\\"_blank\\" rel=\\"nofollow\\">Platform Version Company Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>A platform developer</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| comment | String | Any notable comments about the developer |\\n| company | Reference ID for Company | The company responsible for developing this platform version |\\n| developer | boolean |  |\\n| manufacturer | boolean |  |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732340,"version":0},"$loki":68},{"id":"platform-version-release-date","title":"Platform Version Release Date","level":2,"parent":"igdb","body":{"stripped":"IGDB::platform_version_release_date(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Platform Version Release Date Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nA handy endpoint that extends platform release dates. Used to dig deeper into release dates, platforms and versions.\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The format of the release date |\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| date | Unix Time Stamp | The release date |\\n| human | String | A human readable version of the release date |\\n| m | Integer | The month as an integer starting at 1 (January) |\\n| platform_version | Reference ID for Platform Version | The platform this release date is for |\\n| region | Region Enum | The region of the release |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| y | Integer | The year in full (2018) |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::platform_version_release_date(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Platform Version Release Date Endpoint](https://api-docs.igdb.com/#platform-version-release-date). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nA handy endpoint that extends platform release dates. Used to dig deeper into release dates, platforms and versions.\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The format of the release date |\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| date | Unix Time Stamp | The release date |\\n| human | String | A human readable version of the release date |\\n| m | Integer | The month as an integer starting at 1 (January) |\\n| platform_version | Reference ID for Platform Version | The platform this release date is for |\\n| region | Region Enum | The region of the release |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| y | Integer | The year in full (2018) |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::platform_version_release_date(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#platform-version-release-date\\" target=\\"_blank\\" rel=\\"nofollow\\">Platform Version Release Date Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>A handy endpoint that extends platform release dates. Used to dig deeper into release dates, platforms and versions.</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The format of the release date |\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| date | Unix Time Stamp | The release date |\\n| human | String | A human readable version of the release date |\\n| m | Integer | The month as an integer starting at 1 (January) |\\n| platform_version | Reference ID for Platform Version | The platform this release date is for |\\n| region | Region Enum | The region of the release |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| y | Integer | The year in full (2018) |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732343,"version":0},"$loki":69},{"id":"platform-version","title":"Platform Version","level":2,"parent":"igdb","body":{"stripped":"IGDB::platform_version(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Platform Version Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nhttps://api.igdb.com/v4/platform_versions\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| companies | Reference ID for  Platform Version Company | Who developed this platform version |\\n| connectivity | String | The network capabilities |\\n| cpu | String | The integrated control processing unit |\\n| graphics | String | The graphics chipset |\\n| main_manufacturer | Reference ID for  Platform Version Company | Who manufactured this version of the platform |\\n| media | String | The type of media this version accepted |\\n| memory | String | How much memory there is |\\n| name | String | The name of the platform version |\\n| os | String | The operating system installed on the platform version |\\n| output | String | The output video rate |\\n| platform_logo | Reference ID for Platform Logo | The logo of this platform version |\\n| platform_version_release_dates | Array of Platform Version Release Date IDs | When this platform was released |\\n| resolutions | String | The maximum resolution |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| sound | String | The sound chipset |\\n| storage | String | How much storage there is |\\n| summary | String | A short summary |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::platform_version(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Platform Version Endpoint](https://api-docs.igdb.com/#platform-version). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\n<code>https://api.igdb.com/v4/platform_versions</code>\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| companies | Reference ID for  Platform Version Company | Who developed this platform version |\\n| connectivity | String | The network capabilities |\\n| cpu | String | The integrated control processing unit |\\n| graphics | String | The graphics chipset |\\n| main_manufacturer | Reference ID for  Platform Version Company | Who manufactured this version of the platform |\\n| media | String | The type of media this version accepted |\\n| memory | String | How much memory there is |\\n| name | String | The name of the platform version |\\n| os | String | The operating system installed on the platform version |\\n| output | String | The output video rate |\\n| platform_logo | Reference ID for Platform Logo | The logo of this platform version |\\n| platform_version_release_dates | Array of Platform Version Release Date IDs | When this platform was released |\\n| resolutions | String | The maximum resolution |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| sound | String | The sound chipset |\\n| storage | String | How much storage there is |\\n| summary | String | A short summary |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::platform_version(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#platform-version\\" target=\\"_blank\\" rel=\\"nofollow\\">Platform Version Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p><code>https://api.igdb.com/v4/platform_versions</code></p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| companies | Reference ID for  Platform Version Company | Who developed this platform version |\\n| connectivity | String | The network capabilities |\\n| cpu | String | The integrated control processing unit |\\n| graphics | String | The graphics chipset |\\n| main_manufacturer | Reference ID for  Platform Version Company | Who manufactured this version of the platform |\\n| media | String | The type of media this version accepted |\\n| memory | String | How much memory there is |\\n| name | String | The name of the platform version |\\n| os | String | The operating system installed on the platform version |\\n| output | String | The output video rate |\\n| platform_logo | Reference ID for Platform Logo | The logo of this platform version |\\n| platform_version_release_dates | Array of Platform Version Release Date IDs | When this platform was released |\\n| resolutions | String | The maximum resolution |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| sound | String | The sound chipset |\\n| storage | String | How much storage there is |\\n| summary | String | A short summary |\\n| url | String | The website address (URL) of the item |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732349,"version":0},"$loki":70},{"id":"platform-website","title":"Platform Website","level":2,"parent":"igdb","body":{"stripped":"IGDB::platform_website(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Platform Website Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nThe main website for the platform\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The service this website links to |\\n| checksum | uuid | Hash of the object |\\n| trusted | boolean |  |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::platform_website(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Platform Website Endpoint](https://api-docs.igdb.com/#platform-website). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nThe main website for the platform\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The service this website links to |\\n| checksum | uuid | Hash of the object |\\n| trusted | boolean |  |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::platform_website(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#platform-website\\" target=\\"_blank\\" rel=\\"nofollow\\">Platform Website Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>The main website for the platform</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The service this website links to |\\n| checksum | uuid | Hash of the object |\\n| trusted | boolean |  |\\n| url | String | The website address (URL) of the item |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732353,"version":0},"$loki":71},{"id":"platform","title":"Platform","level":2,"parent":"igdb","body":{"stripped":"IGDB::platform(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Platform Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nThe hardware used to run the game or game delivery network\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| abbreviation | String | An abbreviation of the platform name |\\n| alternative_name | String | An alternative name for the platform |\\n| category | Category Enum | A physical or virtual category of the platform |\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| generation | Integer | The generation of the platform |\\n| name | String | The name of the platform |\\n| platform_family | Reference ID for Platform Family | The family of platforms this one belongs to |\\n| platform_logo | Reference ID for Platform Logo | The logo of the first Version of this platform |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| summary | String | The summary of the first Version of this platform |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n| versions | Reference ID for  Platform Version | Associated versions of this platform |\\n| websites | Reference ID for  Platform Website | The main website |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::platform(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Platform Endpoint](https://api-docs.igdb.com/#platform). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nThe hardware used to run the game or game delivery network\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| abbreviation | String | An abbreviation of the platform name |\\n| alternative_name | String | An alternative name for the platform |\\n| category | Category Enum | A physical or virtual category of the platform |\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| generation | Integer | The generation of the platform |\\n| name | String | The name of the platform |\\n| platform_family | Reference ID for Platform Family | The family of platforms this one belongs to |\\n| platform_logo | Reference ID for Platform Logo | The logo of the first Version of this platform |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| summary | String | The summary of the first Version of this platform |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n| versions | Reference ID for  Platform Version | Associated versions of this platform |\\n| websites | Reference ID for  Platform Website | The main website |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::platform(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#platform\\" target=\\"_blank\\" rel=\\"nofollow\\">Platform Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>The hardware used to run the game or game delivery network</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| abbreviation | String | An abbreviation of the platform name |\\n| alternative_name | String | An alternative name for the platform |\\n| category | Category Enum | A physical or virtual category of the platform |\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| generation | Integer | The generation of the platform |\\n| name | String | The name of the platform |\\n| platform_family | Reference ID for Platform Family | The family of platforms this one belongs to |\\n| platform_logo | Reference ID for Platform Logo | The logo of the first Version of this platform |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| summary | String | The summary of the first Version of this platform |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n| versions | Reference ID for  Platform Version | Associated versions of this platform |\\n| websites | Reference ID for  Platform Website | The main website |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732357,"version":0},"$loki":72},{"id":"player-perspective","title":"Player Perspective","level":2,"parent":"igdb","body":{"stripped":"IGDB::player_perspective(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Player Perspective Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nPlayer perspectives describe the view/perspective of the player in a video game.\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| name | String |  |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::player_perspective(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Player Perspective Endpoint](https://api-docs.igdb.com/#player-perspective). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nPlayer perspectives describe the view/perspective of the player in a video game.\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| name | String |  |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::player_perspective(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#player-perspective\\" target=\\"_blank\\" rel=\\"nofollow\\">Player Perspective Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>Player perspectives describe the view/perspective of the player in a video game.</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| name | String |  |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732362,"version":0},"$loki":73},{"id":"release-date","title":"Release Date","level":2,"parent":"igdb","body":{"stripped":"IGDB::release_date(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Release Date Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nA handy endpoint that extends game release dates. Used to dig deeper into release dates, platforms and versions.\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The format category of the release date |\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| date | Unix Time Stamp | The date of the release |\\n| game | Reference ID for Game |  |\\n| human | String | A human readable representation of the date |\\n| m | Integer | The month as an integer starting at 1 (January) |\\n| platform | Reference ID for Platform | The platform of the release |\\n| region | Region Enum | The region of the release |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| y | Integer | The year in full (2018) |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::release_date(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Release Date Endpoint](https://api-docs.igdb.com/#release-date). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nA handy endpoint that extends game release dates. Used to dig deeper into release dates, platforms and versions.\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The format category of the release date |\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| date | Unix Time Stamp | The date of the release |\\n| game | Reference ID for Game |  |\\n| human | String | A human readable representation of the date |\\n| m | Integer | The month as an integer starting at 1 (January) |\\n| platform | Reference ID for Platform | The platform of the release |\\n| region | Region Enum | The region of the release |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| y | Integer | The year in full (2018) |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::release_date(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#release-date\\" target=\\"_blank\\" rel=\\"nofollow\\">Release Date Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>A handy endpoint that extends game release dates. Used to dig deeper into release dates, platforms and versions.</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The format category of the release date |\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| date | Unix Time Stamp | The date of the release |\\n| game | Reference ID for Game |  |\\n| human | String | A human readable representation of the date |\\n| m | Integer | The month as an integer starting at 1 (January) |\\n| platform | Reference ID for Platform | The platform of the release |\\n| region | Region Enum | The region of the release |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| y | Integer | The year in full (2018) |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732366,"version":0},"$loki":74},{"id":"screenshot","title":"Screenshot","level":2,"parent":"igdb","body":{"stripped":"IGDB::screenshot(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Screenshot Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nScreenshots of games\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| alpha_channel | boolean |  |\\n| animated | boolean |  |\\n| checksum | uuid | Hash of the object |\\n| game | Reference ID for Game | The game this video is associated with |\\n| height | Integer | The height of the image in pixels |\\n| image_id | String | The ID of the image used to construct an IGDB image link |\\n| url | String | The website address (URL) of the item |\\n| width | Integer | The width of the image in pixels |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::screenshot(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Screenshot Endpoint](https://api-docs.igdb.com/#screenshot). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nScreenshots of games\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| alpha_channel | boolean |  |\\n| animated | boolean |  |\\n| checksum | uuid | Hash of the object |\\n| game | Reference ID for Game | The game this video is associated with |\\n| height | Integer | The height of the image in pixels |\\n| image_id | String | The ID of the image used to construct an IGDB image link |\\n| url | String | The website address (URL) of the item |\\n| width | Integer | The width of the image in pixels |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::screenshot(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#screenshot\\" target=\\"_blank\\" rel=\\"nofollow\\">Screenshot Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>Screenshots of games</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| alpha_channel | boolean |  |\\n| animated | boolean |  |\\n| checksum | uuid | Hash of the object |\\n| game | Reference ID for Game | The game this video is associated with |\\n| height | Integer | The height of the image in pixels |\\n| image_id | String | The ID of the image used to construct an IGDB image link |\\n| url | String | The website address (URL) of the item |\\n| width | Integer | The width of the image in pixels |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732369,"version":0},"$loki":75},{"id":"search","title":"Search","level":2,"parent":"igdb","body":{"stripped":"IGDB::search(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Search Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nhttps://api.igdb.com/v4/search\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| alternative_name | String |  |\\n| character | Reference ID for Character |  |\\n| checksum | uuid | Hash of the object |\\n| collection | Reference ID for Collection |  |\\n| company | Reference ID for Company |  |\\n| description | String |  |\\n| game | Reference ID for Game |  |\\n| name | String |  |\\n| platform | Reference ID for Platform |  |\\n| published_at | Unix Time Stamp | The date this item was initially published by the third party |\\n| test_dummy | Reference ID for Test Dummy |  |\\n| theme | Reference ID for Theme |  |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::search(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Search Endpoint](https://api-docs.igdb.com/#search). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\n<code>https://api.igdb.com/v4/search</code>\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| alternative_name | String |  |\\n| character | Reference ID for Character |  |\\n| checksum | uuid | Hash of the object |\\n| collection | Reference ID for Collection |  |\\n| company | Reference ID for Company |  |\\n| description | String |  |\\n| game | Reference ID for Game |  |\\n| name | String |  |\\n| platform | Reference ID for Platform |  |\\n| published_at | Unix Time Stamp | The date this item was initially published by the third party |\\n| test_dummy | Reference ID for Test Dummy |  |\\n| theme | Reference ID for Theme |  |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::search(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#search\\" target=\\"_blank\\" rel=\\"nofollow\\">Search Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p><code>https://api.igdb.com/v4/search</code></p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| alternative_name | String |  |\\n| character | Reference ID for Character |  |\\n| checksum | uuid | Hash of the object |\\n| collection | Reference ID for Collection |  |\\n| company | Reference ID for Company |  |\\n| description | String |  |\\n| game | Reference ID for Game |  |\\n| name | String |  |\\n| platform | Reference ID for Platform |  |\\n| published_at | Unix Time Stamp | The date this item was initially published by the third party |\\n| test_dummy | Reference ID for Test Dummy |  |\\n| theme | Reference ID for Theme |  |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732374,"version":0},"$loki":76},{"id":"theme","title":"Theme","level":2,"parent":"igdb","body":{"stripped":"IGDB::theme(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Theme Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nVideo game themes\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| name | String |  |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::theme(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Theme Endpoint](https://api-docs.igdb.com/#theme). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nVideo game themes\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| name | String |  |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::theme(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#theme\\" target=\\"_blank\\" rel=\\"nofollow\\">Theme Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>Video game themes</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| checksum | uuid | Hash of the object |\\n| created_at | Unix Time Stamp | Date this was initially added to the IGDB database |\\n| name | String |  |\\n| slug | String | A url-safe, unique, lower-case version of the name |\\n| updated_at | Unix Time Stamp | The last date this entry was updated in the IGDB database |\\n| url | String | The website address (URL) of the item |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732377,"version":0},"$loki":77},{"id":"website","title":"Website","level":2,"parent":"igdb","body":{"stripped":"IGDB::website(array $query, boolean $count = false) : mixed\\n\\nFetching data from IGDB database using Website Endpoint. For more details on the method parameters check the Endpoints Section.\\n\\nEndpoint Details:\\n\\nA website url, usually associated with a game\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The service this website links to |\\n| checksum | uuid | Hash of the object |\\n| game | Reference ID for Game | The game this website is associated with |\\n| trusted | boolean |  |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the $count parameter. For more details on the return values check the Return Values Section.","markdown":"`IGDB::website(array $query, boolean $count = false) : mixed`\\n\\nFetching data from IGDB database using [Website Endpoint](https://api-docs.igdb.com/#website). For more details on the method parameters check the [Endpoints Section](#endpoints).\\n\\n**Endpoint Details:**\\n\\nA website url, usually associated with a game\\n\\nFields:\\n\\n| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The service this website links to |\\n| checksum | uuid | Hash of the object |\\n| game | Reference ID for Game | The game this website is associated with |\\n| trusted | boolean |  |\\n| url | String | The website address (URL) of the item |\\n\\nReturn value depends on the `$count` parameter. For more details on the return values check the [Return Values Section](#return-values).","html":"<p><code>IGDB::website(array $query, boolean $count = false) : mixed</code></p>\\n<p>Fetching data from IGDB database using <a href=\\"https://api-docs.igdb.com/#website\\" target=\\"_blank\\" rel=\\"nofollow\\">Website Endpoint</a>. For more details on the method parameters check the <a href=\\"#endpoints\\">Endpoints Section</a>.</p>\\n<p><strong>Endpoint Details:</strong></p>\\n<p>A website url, usually associated with a game</p>\\n<p>Fields:</p>\\n<p>| Field | Type | Description |\\n|-------|------|-------------|\\n| category | Category Enum | The service this website links to |\\n| checksum | uuid | Hash of the object |\\n| game | Reference ID for Game | The game this website is associated with |\\n| trusted | boolean |  |\\n| url | String | The website address (URL) of the item |</p>\\n<p>Return value depends on the <code>$count</code> parameter. For more details on the return values check the <a href=\\"#return-values\\">Return Values Section</a>.</p>"},"meta":{"revision":0,"created":1620176732381,"version":0},"$loki":78},{"id":"basic-example","title":"Basic Example","level":1,"parent":"examples","body":{"stripped":"","markdown":"```php\\n<?php\\n\\n    require \'../src/class.igdb.php\';\\n\\n    // Instantiate the class\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    // Setting up the query parameters\\n    $query = array(\\n        \'search\' => \'uncharted\', // searching for games LIKE uncharted\\n        \'fields\' => array(       // we want to see these fields in the results\\n            \'id\',\\n            \'name\',\\n            \'cover\'\\n        ),\\n        \'limit\' => 5,            // we only need maximum 5 results per query (pagination)\\n        \'offset\' => 10           // we would like to show the third page; fetch the results from the tenth element (pagination)\\n    );\\n\\n    try {\\n        // Running the query against IGDB; passing the query\\n        $result = $IGDB->game($query);\\n\\n        // Showing the result\\n        var_dump($result);\\n    } catch (Exception $e) {\\n        // Catching Exceptions, if there is any\\n        echo $e->getMessage();\\n    }\\n\\n?>\\n```","html":"<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    require \'../src/class.igdb.php\';\\n\\n    // Instantiate the class\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    // Setting up the query parameters\\n    $query = array(\\n        \'search\' => \'uncharted\', // searching for games LIKE uncharted\\n        \'fields\' => array(       // we want to see these fields in the results\\n            \'id\',\\n            \'name\',\\n            \'cover\'\\n        ),\\n        \'limit\' => 5,            // we only need maximum 5 results per query (pagination)\\n        \'offset\' => 10           // we would like to show the third page; fetch the results from the tenth element (pagination)\\n    );\\n\\n    try {\\n        // Running the query against IGDB; passing the query\\n        $result = $IGDB->game($query);\\n\\n        // Showing the result\\n        var_dump($result);\\n    } catch (Exception $e) {\\n        // Catching Exceptions, if there is any\\n        echo $e->getMessage();\\n    }\\n\\n?>\\n</code></pre>"},"meta":{"revision":0,"created":1620176732383,"version":0},"$loki":79},{"id":"apicalypse-query","title":"Apicalypse Query","level":1,"parent":"examples","body":{"stripped":"","markdown":"```php\\n<?php\\n\\n    include \'../src/class.igdb.php\';\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    // Apicalypse formatted query string\\n    $query = \'search \\"uncharted\\"; fields id,name,cover; limit 5; offset 10;\';\\n\\n    var_dump($IGDB->game($query));\\n\\n?>\\n```","html":"<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    include \'../src/class.igdb.php\';\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    // Apicalypse formatted query string\\n    $query = \'search \\"uncharted\\"; fields id,name,cover; limit 5; offset 10;\';\\n\\n    var_dump($IGDB->game($query));\\n\\n?>\\n</code></pre>"},"meta":{"revision":0,"created":1620176732384,"version":0},"$loki":80},{"id":"close-and-reinit-curl-handler","title":"Close and Reinit CURL Handler","level":1,"parent":"examples","body":{"stripped":"","markdown":"```php\\n<?php\\n\\n    include \'../src/class.igdb.php\';\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    $query = array(\\n        \'search\' => \'wolfenstein\',\\n        \'fields\' => \'id, name\',\\n        \'limit\' => 2\\n    );\\n\\n    $result = $IGDB->game($query);\\n\\n    var_dump($result);\\n\\n    // Closing the CURL handler\\n    $IGDB->curl_close();\\n\\n    /*\\n\\n        Some other code\\n\\n    */\\n\\n    // If you want to run another query after closing the CURL handler\\n    // You have to reinitialize it in order to make it work\\n    $IGDB->curl_reinit();\\n\\n    // You can define a new query, or you can modify the previous one\\n    // Now I\'m defining a new one to use a different endpoint with the same instance\\n    $second_options = array(\\n        \'search\' => \'xbox\',\\n        \'fields\' => \'id, name, slug\'\\n    );\\n\\n    $second_result = $IGDB->platform($second_options);\\n\\n    var_dump($second_result);\\n\\n?>\\n```","html":"<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    include \'../src/class.igdb.php\';\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    $query = array(\\n        \'search\' => \'wolfenstein\',\\n        \'fields\' => \'id, name\',\\n        \'limit\' => 2\\n    );\\n\\n    $result = $IGDB->game($query);\\n\\n    var_dump($result);\\n\\n    // Closing the CURL handler\\n    $IGDB->curl_close();\\n\\n    /*\\n\\n        Some other code\\n\\n    */\\n\\n    // If you want to run another query after closing the CURL handler\\n    // You have to reinitialize it in order to make it work\\n    $IGDB->curl_reinit();\\n\\n    // You can define a new query, or you can modify the previous one\\n    // Now I\'m defining a new one to use a different endpoint with the same instance\\n    $second_options = array(\\n        \'search\' => \'xbox\',\\n        \'fields\' => \'id, name, slug\'\\n    );\\n\\n    $second_result = $IGDB->platform($second_options);\\n\\n    var_dump($second_result);\\n\\n?>\\n</code></pre>"},"meta":{"revision":0,"created":1620176732386,"version":0},"$loki":81},{"id":"count","title":"Count","level":1,"parent":"examples","body":{"stripped":"","markdown":"```php\\n<?php\\n\\n    require \'../src/class.igdb.php\';\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    $query = array(\\n        \'where\' => array(\\n            \'field\' => \'rating\', // rating\\n            \'postfix\' => \'>\',    // greater than\\n            \'value\' => 75        // 75\\n        )\\n    );\\n\\n    // Will return the number of all games with rating more than 75\\n    // Note the second true parameter\\n    $result = $IGDB->game($query, true);\\n\\n    var_dump($result);\\n\\n?>\\n```","html":"<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    require \'../src/class.igdb.php\';\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    $query = array(\\n        \'where\' => array(\\n            \'field\' => \'rating\', // rating\\n            \'postfix\' => \'>\',    // greater than\\n            \'value\' => 75        // 75\\n        )\\n    );\\n\\n    // Will return the number of all games with rating more than 75\\n    // Note the second true parameter\\n    $result = $IGDB->game($query, true);\\n\\n    var_dump($result);\\n\\n?>\\n</code></pre>"},"meta":{"revision":0,"created":1620176732387,"version":0},"$loki":82},{"id":"expander","title":"Expander","level":1,"parent":"examples","body":{"stripped":"","markdown":"```php\\n<?php\\n\\n    // As per the IGDB Documentation the expander parameter is \\"dead\\".\\n    // Still, expanded fields can now be added as normal fields and the API figures out the rest.\\n\\n    include \'../src/class.igdb.php\';\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    $query = array(\\n        \'id\' => array(1,2,3),   // first three games by ID\\n        \'fields\' => array(\\n            \'name\',\\n            \'themes.url\',       // Fields can be expanded with a dot followed by the fields you want to access from a certain endpoint\\n            \'themes.name\',\\n            \'themes.slug\'\\n        )\\n    );\\n\\n    $result = $IGDB->game($query);\\n\\n    var_dump($result);\\n\\n?>\\n```","html":"<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    // As per the IGDB Documentation the expander parameter is \\"dead\\".\\n    // Still, expanded fields can now be added as normal fields and the API figures out the rest.\\n\\n    include \'../src/class.igdb.php\';\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    $query = array(\\n        \'id\' => array(1,2,3),   // first three games by ID\\n        \'fields\' => array(\\n            \'name\',\\n            \'themes.url\',       // Fields can be expanded with a dot followed by the fields you want to access from a certain endpoint\\n            \'themes.name\',\\n            \'themes.slug\'\\n        )\\n    );\\n\\n    $result = $IGDB->game($query);\\n\\n    var_dump($result);\\n\\n?>\\n</code></pre>"},"meta":{"revision":0,"created":1620176732389,"version":0},"$loki":83},{"id":"id","title":"ID","level":1,"parent":"examples","body":{"stripped":"","markdown":"```php\\n<?php\\n\\n    include \'../src/class.igdb.php\';\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    // One ID is passed as parameter\\n    $query = array(\\n        \'id\' => 1,\\n        \'fields\' => array(\\n            \'id\',\\n            \'name\'\\n        )\\n    );\\n\\n    $result = $IGDB->game($query);\\n\\n    // Only one result in the array\\n    var_dump($result);\\n\\n    // Now update the ID fields with multiple ID-s (pass ID-s as array)\\n    // Note, that the fields parameter is untouched\\n    $query[\'id\'] = array(1,2,3);\\n\\n    $result = $IGDB->game($query);\\n\\n    // In this case you will have 3 games in the result array\\n    var_dump($result);\\n\\n?>\\n```","html":"<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    include \'../src/class.igdb.php\';\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    // One ID is passed as parameter\\n    $query = array(\\n        \'id\' => 1,\\n        \'fields\' => array(\\n            \'id\',\\n            \'name\'\\n        )\\n    );\\n\\n    $result = $IGDB->game($query);\\n\\n    // Only one result in the array\\n    var_dump($result);\\n\\n    // Now update the ID fields with multiple ID-s (pass ID-s as array)\\n    // Note, that the fields parameter is untouched\\n    $query[\'id\'] = array(1,2,3);\\n\\n    $result = $IGDB->game($query);\\n\\n    // In this case you will have 3 games in the result array\\n    var_dump($result);\\n\\n?>\\n</code></pre>"},"meta":{"revision":0,"created":1620176732390,"version":0},"$loki":84},{"id":"multiquery","title":"Multiquery","level":1,"parent":"examples","body":{"stripped":"","markdown":"```php\\n<?php\\n\\n    include \'../src/class.igdb.php\';\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    // Leaving the optional third parameter, sending the request without any filters\\n    // Also asking for the record count by providing /count after the endpoint name\\n    // The method name has to be the IGDB endpoint name instead of the wrapper class method name => platforms instead of platform\\n    var_dump($IGDB->mutliquery(\\"platforms/count\\", \\"Count of Platforms\\"));\\n\\n    $query = array(\\n        \\"fields\\" => array(\\n            \\"name\\",\\n            \\"platforms.name\\"\\n        ),\\n        \\"where\\" => array(\\n            \\"platforms != null\\",\\n            \\"platforms = {48}\\"\\n        ),\\n        \\"limit\\" => 1\\n    );\\n\\n    // Passing a query array as a third parameter to filter the results\\n    var_dump($IGDB->mutliquery(\\"games\\", \\"Playstation Games\\", $query));\\n\\n?>\\n```","html":"<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    include \'../src/class.igdb.php\';\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    // Leaving the optional third parameter, sending the request without any filters\\n    // Also asking for the record count by providing /count after the endpoint name\\n    // The method name has to be the IGDB endpoint name instead of the wrapper class method name => platforms instead of platform\\n    var_dump($IGDB->mutliquery(\\"platforms/count\\", \\"Count of Platforms\\"));\\n\\n    $query = array(\\n        \\"fields\\" => array(\\n            \\"name\\",\\n            \\"platforms.name\\"\\n        ),\\n        \\"where\\" => array(\\n            \\"platforms != null\\",\\n            \\"platforms = {48}\\"\\n        ),\\n        \\"limit\\" => 1\\n    );\\n\\n    // Passing a query array as a third parameter to filter the results\\n    var_dump($IGDB->mutliquery(\\"games\\", \\"Playstation Games\\", $query));\\n\\n?>\\n</code></pre>"},"meta":{"revision":0,"created":1620176732392,"version":0},"$loki":85},{"id":"platform","title":"Platform","level":1,"parent":"examples","body":{"stripped":"","markdown":"```php\\n<?php\\n\\n    include \'../src/class.igdb.php\';\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    $query = array(\\n        \'search\' => \'xbox\',     // Searching the platforms for XBOX.\\n        \'fields\' => array(      // Showing ID, NAME and SLUG fields in the results\\n            \'id\',\\n            \'name\',\\n            \'slug\'\\n        )\\n    );\\n\\n    $result = $IGDB->platform($query);\\n\\n    var_dump($result);\\n\\n?>\\n```","html":"<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    include \'../src/class.igdb.php\';\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    $query = array(\\n        \'search\' => \'xbox\',     // Searching the platforms for XBOX.\\n        \'fields\' => array(      // Showing ID, NAME and SLUG fields in the results\\n            \'id\',\\n            \'name\',\\n            \'slug\'\\n        )\\n    );\\n\\n    $result = $IGDB->platform($query);\\n\\n    var_dump($result);\\n\\n?>\\n</code></pre>"},"meta":{"revision":0,"created":1620176732393,"version":0},"$loki":86},{"id":"search","title":"Search","level":1,"parent":"examples","body":{"stripped":"","markdown":"```php\\n<?php\\n\\n    include \'../src/class.igdb.php\';\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    $query = array(\\n        \'search\' => \'wolfenstein 2 new colossus\',   // As search parameter you can pass any string you want to find\\n        \'fields\' => array(\\n            \'id\',\\n            \'name\'\\n        )\\n    );\\n\\n    $result = $IGDB->game($query);\\n\\n    var_dump($result);\\n\\n?>\\n```","html":"<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    include \'../src/class.igdb.php\';\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    $query = array(\\n        \'search\' => \'wolfenstein 2 new colossus\',   // As search parameter you can pass any string you want to find\\n        \'fields\' => array(\\n            \'id\',\\n            \'name\'\\n        )\\n    );\\n\\n    $result = $IGDB->game($query);\\n\\n    var_dump($result);\\n\\n?>\\n</code></pre>"},"meta":{"revision":0,"created":1620176732394,"version":0},"$loki":87},{"id":"sort","title":"Sort","level":1,"parent":"examples","body":{"stripped":"","markdown":"```php\\n<?php\\n\\n    include \'../src/class.igdb.php\';\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    // Note: Search is sorting on relevancy and therefore sort is not applicable on search\\n    // Do not provide search in queries where sort is applied\\n    $query = array(\\n        \'id\' => array(100,200,300),     // Fetching games with these ID\'s\\n        \'fields\' => array(              // Showing ID and NAME fields in the results\\n            \'id\',\\n            \'name\'\\n        ),\\n        \'sort\' => array(\\n            \'field\' => \'name\',          // ORDER the results by NAME field\\n            \'direction\' => \'asc\',       // ASCENDING order\\n        )\\n    );\\n\\n    /*\\n        You can also provide the sort parameter as a string with apicalypse syntax.\\n\\n        $query[\'sort\'] = \'name asc\';\\n    */\\n\\n    $result = $IGDB->game($query);\\n\\n    var_dump($result);\\n\\n?>\\n```","html":"<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    include \'../src/class.igdb.php\';\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    // Note: Search is sorting on relevancy and therefore sort is not applicable on search\\n    // Do not provide search in queries where sort is applied\\n    $query = array(\\n        \'id\' => array(100,200,300),     // Fetching games with these ID\'s\\n        \'fields\' => array(              // Showing ID and NAME fields in the results\\n            \'id\',\\n            \'name\'\\n        ),\\n        \'sort\' => array(\\n            \'field\' => \'name\',          // ORDER the results by NAME field\\n            \'direction\' => \'asc\',       // ASCENDING order\\n        )\\n    );\\n\\n    /*\\n        You can also provide the sort parameter as a string with apicalypse syntax.\\n\\n        $query[\'sort\'] = \'name asc\';\\n    */\\n\\n    $result = $IGDB->game($query);\\n\\n    var_dump($result);\\n\\n?>\\n</code></pre>"},"meta":{"revision":0,"created":1620176732396,"version":0},"$loki":88},{"id":"where---multiple-criteria","title":"Where - Multiple Criteria","level":1,"parent":"examples","body":{"stripped":"","markdown":"```php\\n<?php\\n\\n    require \'../src/class.igdb.php\';\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    $query = array(\\n        \'fields\' => \'id, name, platforms, genres\',   // we want to see these fields in the result\\n        \'where\' => array(\\n            array(\\n                \'field\' => \'release_dates.platform\', // filtering by the platform field\\n                \'postfix\' => \'=\',                    // equals postfix\\n                \'value\' => 8                         // looking for platforms with the ID equals to 8\\n            ),\\n            array(\\n                \'field\' => \'total_rating\',           // filtering by the total_rating field\\n                \'postfix\' => \'>=\',                   // greater than or equals to\\n                \'value\' => 70                        // looking for the total_rating greater than or equals to 70\\n            ),\\n            array(\\n                \'field\' => \'genres\',                 // filtering by the genres field\\n                \'postfix\' => \'=\',                    // equals to\\n                \'value\' => 4                         // looking for the genres equals to 4\\n            )\\n        )\\n    );\\n\\n    $result = $IGDB->game($query);\\n\\n    var_dump($result);\\n\\n?>\\n```","html":"<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    require \'../src/class.igdb.php\';\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    $query = array(\\n        \'fields\' => \'id, name, platforms, genres\',   // we want to see these fields in the result\\n        \'where\' => array(\\n            array(\\n                \'field\' => \'release_dates.platform\', // filtering by the platform field\\n                \'postfix\' => \'=\',                    // equals postfix\\n                \'value\' => 8                         // looking for platforms with the ID equals to 8\\n            ),\\n            array(\\n                \'field\' => \'total_rating\',           // filtering by the total_rating field\\n                \'postfix\' => \'>=\',                   // greater than or equals to\\n                \'value\' => 70                        // looking for the total_rating greater than or equals to 70\\n            ),\\n            array(\\n                \'field\' => \'genres\',                 // filtering by the genres field\\n                \'postfix\' => \'=\',                    // equals to\\n                \'value\' => 4                         // looking for the genres equals to 4\\n            )\\n        )\\n    );\\n\\n    $result = $IGDB->game($query);\\n\\n    var_dump($result);\\n\\n?>\\n</code></pre>"},"meta":{"revision":0,"created":1620176732398,"version":0},"$loki":89},{"id":"where---single-criteria","title":"Where - Single Criteria","level":1,"parent":"examples","body":{"stripped":"","markdown":"```php\\n<?php\\n\\n    require \'../src/class.igdb.php\';\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    $query = array(\\n        \'fields\' => \'id, name, platforms, genres\', // we want to see these fields in the result\\n        \'where\' => array(\\n            \'field\' => \'release_dates.platform\',   // filtering by the platform field\\n            \'postfix\' => \'=\',                      // equals postfix\\n            \'value\' => 8                           // looking for platforms with the ID equals to 8\\n        )\\n    );\\n\\n    /*\\n        You can also provide the filter parameter as a string with apicalypse syntax.\\n\\n        $query[\'where\'] = \'release_dates.platform = 8\';\\n    */\\n\\n    $result = $IGDB->game($query);\\n\\n    var_dump($result);\\n\\n?>\\n```","html":"<pre><code class=\\"language-php\\">&#x3C;?php\\n\\n    require \'../src/class.igdb.php\';\\n\\n    $IGDB = new IGDB(\\"{client_id}\\", \\"{access_token}\\");\\n\\n    $query = array(\\n        \'fields\' => \'id, name, platforms, genres\', // we want to see these fields in the result\\n        \'where\' => array(\\n            \'field\' => \'release_dates.platform\',   // filtering by the platform field\\n            \'postfix\' => \'=\',                      // equals postfix\\n            \'value\' => 8                           // looking for platforms with the ID equals to 8\\n        )\\n    );\\n\\n    /*\\n        You can also provide the filter parameter as a string with apicalypse syntax.\\n\\n        $query[\'where\'] = \'release_dates.platform = 8\';\\n    */\\n\\n    $result = $IGDB->game($query);\\n\\n    var_dump($result);\\n\\n?>\\n</code></pre>"},"meta":{"revision":0,"created":1620176732400,"version":0},"$loki":90},{"id":"change-log","title":"Change Log","level":1,"parent":"changelog","body":{"stripped":"","markdown":"","html":""},"meta":{"revision":0,"created":1620176732400,"version":0},"$loki":91},{"id":"v4-0-2---april-28--2021","title":"v4.0.2 - April 28, 2021","level":2,"parent":"changelog","body":{"stripped":"Updated error response handling from IGDB","markdown":"- Updated error response handling from IGDB","html":"<ul>\\n<li>Updated error response handling from IGDB</li>\\n</ul>"},"meta":{"revision":0,"created":1620176732401,"version":0},"$loki":92},{"id":"v4-0-1---february-18--2021","title":"v4.0.1 - February 18, 2021","level":2,"parent":"changelog","body":{"stripped":"Minor updates to the Readme","markdown":"- Minor updates to the Readme","html":"<ul>\\n<li>Minor updates to the Readme</li>\\n</ul>"},"meta":{"revision":0,"created":1620176732402,"version":0},"$loki":93},{"id":"v4-0-0---october-20--2020","title":"v4.0.0 - October 20, 2020","level":2,"parent":"changelog","body":{"stripped":"IGDB Api v4 compatibility update\\n\\nUpdated Class constructor to accept the new tokens from Twitch\\n\\nRemoved API KEY\\n\\nRemoved IGDB::api_status() method\\n\\nRemoved Endpoint methods according to the IGDB Changes\\n\\nRenamed methods:\\n\\n\\\\_init_curl() => \\\\_curl_init()\\n\\nclose_curl() => curl_close()\\n\\nreinit_curl() => curl_reinit()\\n\\nUpdated endpoint methods to accept apicalypse strings as well\\n\\nImplemented Multiquery","markdown":"- **IGDB Api v4 compatibility update**\\n - Updated Class constructor to accept the new tokens from Twitch\\n - Removed API KEY\\n - Removed `IGDB::api_status()` method\\n - Removed Endpoint methods according to the [IGDB Changes](https://api-docs.igdb.com/#breaking-changes)\\n - Renamed methods:\\n   - `_init_curl() => _curl_init()`\\n   - `close_curl() => curl_close()`\\n   - `reinit_curl() => curl_reinit()`\\n - Updated endpoint methods to accept apicalypse strings as well\\n - Implemented [Multiquery](#multiquery)","html":"<ul>\\n<li><strong>IGDB Api v4 compatibility update</strong></li>\\n<li>Updated Class constructor to accept the new tokens from Twitch</li>\\n<li>Removed API KEY</li>\\n<li>Removed <code>IGDB::api_status()</code> method</li>\\n<li>Removed Endpoint methods according to the <a href=\\"https://api-docs.igdb.com/#breaking-changes\\" target=\\"_blank\\" rel=\\"nofollow\\">IGDB Changes</a></li>\\n<li>Renamed methods:\\n<ul>\\n<li><code>_init_curl() => _curl_init()</code></li>\\n<li><code>close_curl() => curl_close()</code></li>\\n<li><code>reinit_curl() => curl_reinit()</code></li>\\n</ul>\\n</li>\\n<li>Updated endpoint methods to accept apicalypse strings as well</li>\\n<li>Implemented <a href=\\"#multiquery\\">Multiquery</a></li>\\n</ul>"},"meta":{"revision":0,"created":1620176732407,"version":0},"$loki":94},{"id":"v2-0-3---september-17--2020","title":"v2.0.3 - September 17, 2020","level":2,"parent":"changelog","body":{"stripped":"Fixed a bug with the where filter (#6 Issues with slug field)","markdown":"- Fixed a bug with the `where` filter ([#6 Issues with slug field](https://github.com/enisz/igdb/issues/6))","html":"<ul>\\n<li>Fixed a bug with the <code>where</code> filter (<a href=\\"https://github.com/enisz/igdb/issues/6\\" target=\\"_blank\\" rel=\\"nofollow\\">#6 Issues with slug field</a>)</li>\\n</ul>"},"meta":{"revision":0,"created":1620176732409,"version":0},"$loki":95},{"id":"v2-0-2---february-03--2020","title":"v2.0.2 - February 03, 2020","level":2,"parent":"changelog","body":{"stripped":"Fixing inaccurate information in the Readme","markdown":"- Fixing inaccurate information in the Readme","html":"<ul>\\n<li>Fixing inaccurate information in the Readme</li>\\n</ul>"},"meta":{"revision":0,"created":1620176732410,"version":0},"$loki":96},{"id":"v2-0-1---january-27--2020","title":"v2.0.1 - January 27, 2020","level":2,"parent":"changelog","body":{"stripped":"Minor changes / fixes in the Readme\\n\\nAdded method \\\\_construct_url\\n\\nUpdated every endpoint method to construct the endpoint url\'s different","markdown":"- Minor changes / fixes in the Readme\\n - Added method [`_construct_url`](#constructing-urls)\\n - Updated every endpoint method to construct the endpoint url\'s different","html":"<ul>\\n<li>Minor changes / fixes in the Readme</li>\\n<li>Added method <a href=\\"#constructing-urls\\"><code>_construct_url</code></a></li>\\n<li>Updated every endpoint method to construct the endpoint url\'s different</li>\\n</ul>"},"meta":{"revision":0,"created":1620176732412,"version":0},"$loki":97},{"id":"v2-0-0---december-04--2019","title":"v2.0.0 - December 04, 2019","level":2,"parent":"changelog","body":{"stripped":"IGDB Api v3 compatibility update\\n\\nRemoved expander parameter\\n\\nRenamed parameter filter to where\\n\\nRenamed parameter order to sort\\n\\nRemoved multiple methods:\\n\\n\\\\_stringify_options\\n\\n\\\\_construct_url\\n\\ncount\\n\\ncustom_query\\n\\nAdded method apicalypse\\n\\nAdded method api_status\\n\\nUpdated every endpoint method (removed $execute, added $count)","markdown":"- **IGDB Api v3 compatibility update**\\n - Removed `expander` parameter\\n - Renamed parameter `filter` to `where`\\n - Renamed parameter `order` to `sort`\\n - Removed multiple methods:\\n    - `_stringify_options`\\n    - `_construct_url`\\n    - `count`\\n    - `custom_query`\\n - Added method [`apicalypse`](#convert-options-to-apicalypse-query-string)\\n - Added method [`api_status`](#get-the-status-of-your-api-key)\\n - Updated every [endpoint method](#endpoints) (removed `$execute`, added `$count`)","html":"<ul>\\n<li><strong>IGDB Api v3 compatibility update</strong></li>\\n<li>Removed <code>expander</code> parameter</li>\\n<li>Renamed parameter <code>filter</code> to <code>where</code></li>\\n<li>Renamed parameter <code>order</code> to <code>sort</code></li>\\n<li>Removed multiple methods:\\n<ul>\\n<li><code>_stringify_options</code></li>\\n<li><code>_construct_url</code></li>\\n<li><code>count</code></li>\\n<li><code>custom_query</code></li>\\n</ul>\\n</li>\\n<li>Added method <a href=\\"#convert-options-to-apicalypse-query-string\\"><code>apicalypse</code></a></li>\\n<li>Added method <a href=\\"#get-the-status-of-your-api-key\\"><code>api_status</code></a></li>\\n<li>Updated every <a href=\\"#endpoints\\">endpoint method</a> (removed <code>$execute</code>, added <code>$count</code>)</li>\\n</ul>"},"meta":{"revision":0,"created":1620176732420,"version":0},"$loki":98},{"id":"v1-0-5---march-11--2019","title":"v1.0.5 - March 11, 2019","level":2,"parent":"changelog","body":{"stripped":"Fixed a bug at the request\'s error handling\\n\\npublic IGDB::get_request_info() public method added","markdown":"- Fixed a bug at the request\'s error handling\\n - [``public IGDB::get_request_info()``](#get-request-information) public method added","html":"<ul>\\n<li>Fixed a bug at the request\'s error handling</li>\\n<li><a href=\\"#get-request-information\\"><code>public IGDB::get_request_info()</code></a> public method added</li>\\n</ul>"},"meta":{"revision":0,"created":1620176732424,"version":0},"$loki":99},{"id":"v1-0-4---march-25--2018","title":"v1.0.4 - March 25, 2018","level":2,"parent":"changelog","body":{"stripped":"Default properties has been removed.\\n\\nset_default public method has been removed.","markdown":"- Default properties has been removed.\\n - set\\\\_default public method has been removed.","html":"<ul>\\n<li>Default properties has been removed.</li>\\n<li>set_default public method has been removed.</li>\\n</ul>"},"meta":{"revision":0,"created":1620176732426,"version":0},"$loki":100},{"id":"v1-0-3---march-18--2018","title":"v1.0.3 - March 18, 2018","level":2,"parent":"changelog","body":{"stripped":"Providing either search or id parameter in the options array are not mandatory anymore.\\n\\nProviding fields parameter when using expander is not mandatory anymore.\\n\\nOrdering parameter \'order\' in the options array has been renamed to \'direction\'. Refer to the order section of the options parameters.\\n\\nImplemented count method. Refer to the count section of the Readme.\\n\\nExample count.php has been added.\\n\\nUpdated Readme","markdown":"- Providing either search or id parameter in the options array are not mandatory anymore.\\n - Providing fields parameter when using expander is not mandatory anymore.\\n - Ordering parameter \'order\' in the options array has been renamed to \'direction\'. Refer to the [order](#order) section of the [options parameters](#options-parameters).\\n - Implemented count method. Refer to the [count](#count) section of the Readme.\\n - Example _count.php_ has been added.\\n - Updated Readme","html":"<ul>\\n<li>Providing either search or id parameter in the options array are not mandatory anymore.</li>\\n<li>Providing fields parameter when using expander is not mandatory anymore.</li>\\n<li>Ordering parameter \'order\' in the options array has been renamed to \'direction\'. Refer to the <a href=\\"#order\\">order</a> section of the <a href=\\"#options-parameters\\">options parameters</a>.</li>\\n<li>Implemented count method. Refer to the <a href=\\"#count\\">count</a> section of the Readme.</li>\\n<li>Example <em>count.php</em> has been added.</li>\\n<li>Updated Readme</li>\\n</ul>"},"meta":{"revision":0,"created":1620176732437,"version":0},"$loki":101},{"id":"v1-0-2---march-17--2018","title":"v1.0.2 - March 17, 2018","level":2,"parent":"changelog","body":{"stripped":"Modified the constructor to ask only for the API Key. The API URL has been changed to be fix for every user (by IGDB).\\n\\nThe API URL and KEY setter and getter methods has been removed.\\n\\nThe API URL and KEY validator methods has been removed.\\n\\nNew method for order parameter constructing has been implemented.\\n\\nStringify Options method is private again. Use the updated endpoint methods instead.\\n\\nUpdated Endpoint Methods to accept a second optional parameter to return the constructed URL instead of executing the query.\\n\\nbasic.php example file has been renamed to basic.example.php.\\n\\norder.php example has been added.\\n\\norder_subfilter.php example has been added.\\n\\nAll example files has been modified with the updated constructor.","markdown":"- Modified the [constructor](#initializing-class) to ask only for the API Key. The API URL has been changed to be fix for every user (by IGDB).\\n - The API URL and KEY setter and getter methods has been removed.\\n - The API URL and KEY validator methods has been removed.\\n - New method for order parameter constructing has been implemented.\\n - [Stringify Options](#stringify-options) method is private again. Use the updated endpoint methods instead.\\n - Updated [Endpoint Methods](#endpoints) to accept a second optional parameter to return the constructed URL instead of executing the query.\\n - _basic.php_ example file has been renamed to _basic.example.php_.\\n - _order.php_ example has been added.\\n - _order_subfilter.php_ example has been added.\\n - All example files has been modified with the updated constructor.","html":"<ul>\\n<li>Modified the <a href=\\"#initializing-class\\">constructor</a> to ask only for the API Key. The API URL has been changed to be fix for every user (by IGDB).</li>\\n<li>The API URL and KEY setter and getter methods has been removed.</li>\\n<li>The API URL and KEY validator methods has been removed.</li>\\n<li>New method for order parameter constructing has been implemented.</li>\\n<li><a href=\\"#stringify-options\\">Stringify Options</a> method is private again. Use the updated endpoint methods instead.</li>\\n<li>Updated <a href=\\"#endpoints\\">Endpoint Methods</a> to accept a second optional parameter to return the constructed URL instead of executing the query.</li>\\n<li><em>basic.php</em> example file has been renamed to <em>basic.example.php</em>.</li>\\n<li><em>order.php</em> example has been added.</li>\\n<li><em>order_subfilter.php</em> example has been added.</li>\\n<li>All example files has been modified with the updated constructor.</li>\\n</ul>"},"meta":{"revision":0,"created":1620176732444,"version":0},"$loki":102},{"id":"v1-0-1---march-16--2018","title":"v1.0.1 - March 16, 2018","level":2,"parent":"changelog","body":{"stripped":"Added Changes section to the ReadMe.\\n\\nFixed filter parameter constructing; the parameter input has been changed.\\n\\nAdded example snippets to the Options Parameters section.\\n\\nAdded example file filter_multiple_criteria.php\\n\\nAdded example file filter_single_criteria.php","markdown":"- Added [Changes](#changes) section to the ReadMe.\\n - Fixed [filter parameter](#filters) constructing; the parameter input has been changed.\\n - Added example snippets to the [Options Parameters](#options-parameters) section.\\n - Added example file _filter_multiple_criteria.php_\\n - Added example file _filter_single_criteria.php_","html":"<ul>\\n<li>Added <a href=\\"#changes\\">Changes</a> section to the ReadMe.</li>\\n<li>Fixed <a href=\\"#filters\\">filter parameter</a> constructing; the parameter input has been changed.</li>\\n<li>Added example snippets to the <a href=\\"#options-parameters\\">Options Parameters</a> section.</li>\\n<li>Added example file <em>filter_multiple_criteria.php</em></li>\\n<li>Added example file <em>filter_single_criteria.php</em></li>\\n</ul>"},"meta":{"revision":0,"created":1620176732448,"version":0},"$loki":103}],"idIndex":null,"binaryIndices":{},"constraints":null,"uniqueNames":[],"transforms":{},"objType":"paragraphs","dirty":true,"cachedIndex":null,"cachedBinaryIndex":null,"cachedData":null,"adaptiveBinaryIndices":true,"transactional":false,"cloneObjects":false,"cloneMethod":"parse-stringify","asyncListeners":false,"disableMeta":false,"disableChangesApi":true,"disableDeltaChangesApi":true,"autoupdate":false,"serializableIndices":true,"disableFreeze":true,"ttl":null,"maxId":103,"DynamicViews":[],"events":{"insert":[],"update":[],"pre-insert":[],"pre-update":[],"close":[],"flushbuffer":[],"error":[],"delete":[null],"warning":[null]},"changes":[],"dirtyIds":[]}],"databaseVersion":1.5,"engineVersion":1.5,"autosave":false,"autosaveInterval":5000,"autosaveHandle":null,"throttledSaves":true,"options":{"env":"BROWSER","persistenceMethod":"memory","serializationMethod":"pretty","destructureDelimiter":"$<\\n"},"persistenceMethod":"memory","persistenceAdapter":null,"verbose":false,"events":{"init":[null],"loaded":[],"flushChanges":[],"close":[],"changes":[],"warning":[]},"ENV":"BROWSER"}')},69:function(e,n,t){}},[[351,1,2]]]);
//# sourceMappingURL=main.b120a851.chunk.js.map